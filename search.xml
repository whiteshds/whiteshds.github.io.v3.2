<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>图床|picgo|typora</title>
      <link href="2020/11/18/040/"/>
      <url>2020/11/18/040/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>三个图床 —— 又拍云、GitHub（jsdelivr 加速）、阿里图床。（其实我以前一直用的是微博的图床）讲真，我觉得这个软件很不错。</p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p>我的 GitHub 用户名是 <code>blogimg</code> 我们首先是创建仓库。</p><ol><li><p>我创建的仓库名为 <code>HexoStaticFile1</code>，那么在 <code>PicGo</code> 里的仓库名就为 <code>blogimg/HexoStaticFile1</code>，格式是<code>用户名/仓库名</code></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213220633.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213220633.png" alt="img"></a></p></li><li><p>分支名写 master</p></li><li><p>获取 Token</p><ol><li><p>进入个人设置</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221009.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221009.png" alt="img"></a></p></li><li><p>点击 <code>Developer settings</code></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221304.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221304.png" alt="img"></a></p></li><li><p>点击左边的 <code>Personal access tokens</code> ，然后点击右边的 <code>Generate new token</code></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221443.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221443.png" alt="小康博客-2020/02/13/20200213221443"></a></p></li><li><p>Note 部分随便写即可，下边的权限把 <code>repo</code> 相关的打上勾即可。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221626.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221626.png" alt="小康博客-2020/02/13/20200213221626"></a></p></li><li><p>接下来便会生成一个 token，将它复制下来，因为一旦刷新网页，你将见不到这个 token 了。</p></li></ol></li><li><p>存储路径</p><p>根据自己的情况，但记住，最后一定写 <code>\</code> 不然软件会将他与文件名拼接</p></li><li><p>自定义域名</p><p>这里写 <code>jsdeliver</code> 的，不然没办法起到 cdn 加速的效果。</p><p><code>https://cdn.jsdelivr.net/gh/用户名/仓库名</code></p><p>用户名与仓库名按照自己的实际情况填写，例如我的 <code>https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1</code></p></li></ol><h3 id="GitHub-图片上传失败"><a href="#GitHub-图片上传失败" class="headerlink" title="GitHub 图片上传失败"></a>GitHub 图片上传失败</h3><p>由于不可描述的原因，在大陆使用 PicGo+GitHub 上传图片时总会遇到上传失败的问题。不过不要慌，GitHub+Jsdeliver 这么好的东西，用还是要用的。</p><p>因此我的解决方案就是：<a href="https://github.com/yumusb/autoPicCdn">autoPicCdn</a>+ 免费的国外虚拟主机。当然了，如果你有服务器（国外的）那么也是可以的。</p><p>如果你不愿意自己找虚拟主机，那么可以使用 <a href="https://chuibi.cn/">chuibi 图床</a>。</p><ol><li><p>登录账号（GitHub 账号）</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/a64f33d4f0fca20b4858906626ea3f3a.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/a64f33d4f0fca20b4858906626ea3f3a.png" alt="image-20200601080023571"></a></p></li><li><p>接下来再次点击自己，进行设置</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/b4832a540705b961a3b6c4ec054bbd12.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/b4832a540705b961a3b6c4ec054bbd12.png" alt="image-20200601080306882"></a></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/3776fe4a3f5c3d7e3f9a537cb5957c79.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/3776fe4a3f5c3d7e3f9a537cb5957c79.png" alt="image-20200601080407714"></a></p></li><li><p>填写完毕后，刷新页面即可看到你的接口信息。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/45fafff05a2150f675c6e8e0464f1a44.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/45fafff05a2150f675c6e8e0464f1a44.png" alt="image-20200601080444977"></a></p><p>温馨提示：地址泄露意味着别人也可以用你的接口了！</p></li><li><p>接下来在 PICGO 安装插件即可完成操作了。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/653cbf72856e16ee88fdd833f3da2ffa.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/653cbf72856e16ee88fdd833f3da2ffa.png" alt="image-20200601081417256"></a></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/059c4fb8084542866957477bb97efe12.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/059c4fb8084542866957477bb97efe12.png" alt="image-20200601081506842"></a></p></li></ol><p>服务器 / 虚拟主机 一定要是国外的。否则还是上传失败很正常。</p><p>思路很简单，首先 clone 项目到自己本地，然后编辑 <code>up.php</code> 文件，修改对应需要修改的参数。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">define(&quot;REPO&quot;,&quot;testforapi&quot;);&#x2F;&#x2F;必须是下面用户名下的公开仓库</span><br><span class="line">define(&quot;USER&quot;,&quot;yumusb&quot;);&#x2F;&#x2F;必须是当前GitHub用户名</span><br><span class="line">define(&quot;MAIL&quot;,&quot;yumusb@foxmail.com&quot;);&#x2F;&#x2F;</span><br><span class="line">define(&quot;TOKEN&quot;,&quot;YourToken&quot;);</span><br><span class="line">## 数据库配置（添加了统计上传文件功能，使用mysql存储）</span><br><span class="line">$database &#x3D; array(</span><br><span class="line">  &#39;dbname&#39; &#x3D;&gt; &#39;pic&#39;,</span><br><span class="line">  &#39;host&#39; &#x3D;&gt; &#39;localhost&#39;,</span><br><span class="line">  &#39;port&#39; &#x3D;&gt; 3306,</span><br><span class="line">  &#39;user&#39; &#x3D;&gt; &#39;pic&#39;,</span><br><span class="line">  &#39;pass&#39; &#x3D;&gt; &#39;123456&#39;,</span><br><span class="line">  );</span><br><span class="line">$table &#x3D; &#39;remote_imgs&#39;; &#x2F;&#x2F;存放数据表名字</span><br></pre></td></tr></table></figure><p>虚拟机或服务器如何使用这里不过多介绍。</p><p>接下来，便可以白嫖 GitHub 的图床了。</p><ol><li><p>在 picgo 的插件里下载 <code>web-uploader</code> 插件。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/d0314981d14e50240d89746c56785e1e.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/d0314981d14e50240d89746c56785e1e.png" alt="img"></a></p></li><li><p>配置插件</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/9090f0ff00f18e564967fdd333cfff1e.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/9090f0ff00f18e564967fdd333cfff1e.png" alt="img"></a></p><table><thead><tr><th align="center">参数配置</th><th align="center">值</th></tr></thead><tbody><tr><td align="center">API 地址</td><td align="center">你的 <code>up.php</code> 文件的地址。</td></tr><tr><td align="center">POST 参数名</td><td align="center">pic</td></tr><tr><td align="center">JSON 路径</td><td align="center">data.url</td></tr></tbody></table><blockquote><p><code>up.php</code> 文件地址就是你的服务器 / 虚拟主机绑定的域名 +<code>/up.php</code>。例如：我的虚拟主机的域名为 <code>https://www.antmoe.com/</code> 那么 API 的地址就是 <code>https://www.antmoe.com/up.php</code></p></blockquote></li></ol><h2 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h2><p>因为又拍云是国内的平台，且全为中文。因此不详细说明了。</p><p>又拍云首先要创建一个云存储。然后绑定上自己的域名。</p><p>至于操作员，在账户管理中可以添加操作员。</p><h2 id="阿里图床"><a href="#阿里图床" class="headerlink" title="阿里图床"></a>阿里图床</h2><p>这里使用阿里图床主要是利用了第三方的插件及第三方的接口。</p><p>插件是 <code>web-uploader</code>，软件里可以直接下载。然后配置我直接给出，按照我的填入即可。</p><table><thead><tr><th align="center">API 地址</th><th align="center"><code>https://api.abcyun.co/api/picbed/index/type/ali/token/5d8f31cf6a8ab</code></th></tr></thead><tbody><tr><td align="center">POST 参数名</td><td align="center"><code>image</code></td></tr><tr><td align="center">JSON 路径</td><td align="center"><code>url.ali</code></td></tr><tr><td align="center">自定义请求体</td><td align="center"><code>&#123;&quot;type&quot;:&quot;ali&quot;&#125;</code></td></tr></tbody></table><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213222645.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213222645.png" alt="小康博客-2020/02/13/20200213222645"></a></p><h3 id="PicGo-设置"><a href="#PicGo-设置" class="headerlink" title="PicGo 设置"></a>PicGo 设置</h3><ol><li><p>PicGo 的版本必须是 2.2.0 及以上。</p></li><li><p>激活 PicGo-Server</p><p>打开 PicGo 详细页面，进入 PicGo 设置–设置 Server</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314091619.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314091619.png" alt="img"></a></p><p><strong>这里的监听地址就是默认的 127.0.0.1，端口修改为 36677</strong>，否则会上传失败。</p></li></ol><h3 id="Typora-配置"><a href="#Typora-配置" class="headerlink" title="Typora 配置"></a>Typora 配置</h3><p>对于 Typora 也是有版本要求的，大家也看到了，这个功能是 0.9.84 才加入的，所以 Typora 的版本也得是 0.9.84 及以上。</p><ol><li><p>Typora 版本 0.9.84 及以上。</p></li><li><p>设置（左上角文件 -&gt; 偏好设置 -&gt; 图像）</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314092035.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314092035.png" alt="img"></a></p></li><li><p>然后左下角有一个验证上传，一般情况下这里就已经好了。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> 搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEO|百度|自动提交|定时</title>
      <link href="2020/11/18/039/"/>
      <url>2020/11/18/039/</url>
      
        <content type="html"><![CDATA[<h2 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h2><p>首先说明下这是一个 hexo 的插件，和其他插件一样，只需要 <code>npm i</code> 即可安装。先说说我的需求：需求产生于建站之初，那时百度还搜索不到我的小康博客，因此借助 Leancloud 的环境搭建了一个每天定时提交的小程序，当时使用 django 框架进行的开发。后来由于各种原因，发现已经 server 500 了，不过不清楚原因，但无所谓了，因为我打算合理用 actions 进行重新开发。同样的出于原版的参考还是打算用 python 完成，但发现官网贴心的提供了一个 <code>curl</code> 命令提交。好吧，这就省下了很多事。</p><h2 id="此项目适合什么样的人群"><a href="#此项目适合什么样的人群" class="headerlink" title="此项目适合什么样的人群"></a>此项目适合什么样的人群</h2><ol><li><p>想要提高百度收录量</p><p>本人不打算扩展必应搜索，谷歌搜索等其他平台。因此在国内对于大多数人来说百度还是主力，而谷歌不需要你主动，他会自己找到你。</p></li><li><p>使用了持续集成服务</p><p>不适用于本地 <code>hexo d</code> 命令的人群，因此这个命令不会讲 GitHub 的配置文件添加进去。因此如果你没有使用持续集成服务，那么可以考虑使用持续集成或者进入 public 目录手动 git 提交。</p></li></ol><h2 id="插件如何使用"><a href="#插件如何使用" class="headerlink" title="插件如何使用"></a>插件如何使用</h2><ol><li><p>安装插件</p><p>在你博客的根目录打开命令行，安装插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">npm i hexo-baidupush</span><br></pre></td></tr></table></figure><p><a href="https://files.alexhchu.com/2020/10/01/35c1f5b0bd9fa.png"><img src="https://files.alexhchu.com/2020/10/01/35c1f5b0bd9fa.png" alt="image-20201001220758045"></a></p></li><li><p>接下来生成内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">hexo cl &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>你会发现生成的 public 目录中多了一个文件和一个目录</p><p><a href="https://files.alexhchu.com/2020/10/01/1ee93ebf13d7e.png"><img src="https://files.alexhchu.com/2020/10/01/1ee93ebf13d7e.png" alt="image-20201001222058845"></a></p><blockquote><p>如果没有，请检查插件是否成功安装。</p></blockquote></li><li><p>部署页面</p><p>此时的部署并不能使用 <code>hexo d</code> 命令，因为这个命令不能将<code>.github</code> 这个文件添加。因此只能手动添加。如果你在持续集成中使用了此命令，请尝试替换为如下命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">cd .&#x2F;public</span><br><span class="line">git init</span><br><span class="line">git config --global user.name &#39;name&#39; </span><br><span class="line">git config --global user.email &#39;yourEmail&#39;</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;Update&quot;</span><br><span class="line">git push --force --all 地址</span><br></pre></td></tr></table></figure><p>其中地址跟你环境有关，如果是 ssh 认证推送，那么请填写你的 ssh 仓库地址。如果是密钥推送，那么 GitHub 的密钥格式为 <code>https://TOKEN:地址</code>，例如：<code>https://aaaaa@github.com/tzki/tzki.github.io</code></p><blockquote><p>如果是本地 <code>hexo d</code> 用户可以参考上面命令做相同的操作。但这一定是繁琐的过程，建议更换持续集成或者放弃使用此插件。</p></blockquote></li><li><p>添加 TOKEN</p><p>这里使用的是你推送的仓库，不是源码仓库。例如：<code>https://github.com/tzki/tzki.github.io</code>。然后添加密钥。（如果没有使用过 actions，第一次需要开启，也就是点一下那个绿色的按钮。）</p><p><a href="https://files.alexhchu.com/2020/09/30/78782c5558d7d.png"><img src="https://files.alexhchu.com/2020/09/30/78782c5558d7d.png" alt="image-20200930190800396"></a></p><p><a href="https://files.alexhchu.com/2020/09/30/473c7772e13fb.png"><img src="https://files.alexhchu.com/2020/09/30/473c7772e13fb.png" alt="image-20200930190943296"></a></p></li><li><p>测试</p><p>接下来只需要对此仓库点个 star 即可看到有 actions 运行。</p><p><a href="https://files.alexhchu.com/2020/10/01/7baa52f3720bc.png"><img src="https://files.alexhchu.com/2020/10/01/7baa52f3720bc.png" alt="image-20201001223100700"></a></p></li><li><p>提交的频率</p><p>插件默认提交的频率是一天两次，分别为早上八点和晚上六点。如果你想修改那么可以再根目录的配置文件添加字段 <code>commit_cron</code> 进行配置，值采用 GitHub 的 cron 表达式。默认为 <code>0 0,10 * * *</code> 遵循 UTC 时间。举个例子：每天 8 点 (北京时间) 提交一次：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">commit_cron: 0 0 * * *</span><br></pre></td></tr></table></figure><blockquote><p>GitHub 的 cron 表达式没有秒这个单位，即第一位为分钟。</p></blockquote><p>当然这个配置是非必填项，不在配置文件写也不会引起报错的。</p></li></ol><h2 id="项目参考"><a href="#项目参考" class="headerlink" title="项目参考"></a>项目参考</h2><p>生成 url 部分代码参考插件了插件 <a href="https://www.npmjs.com/package/hexo-baidu-url-submit">hexo-baidu-url-submit</a>，没有直接使用而是搞一个新的，是因为考虑到了并不是每个人都装有这个插件，因此只能在自己的插件中集成这个功能即生成文章 URL 的文件。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> SEO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>commit|符号|表情</title>
      <link href="2020/11/18/038/"/>
      <url>2020/11/18/038/</url>
      
        <content type="html"><![CDATA[<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在使用命令行提交 <code>commit</code> 消息时，可以通过<code>:关键字:</code> 的方式进行使用表情。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">git commit -m &quot;:tada: Initial commit&quot;</span><br></pre></td></tr></table></figure><h2 id="表情列表"><a href="#表情列表" class="headerlink" title="表情列表"></a>表情列表</h2><p>点击每行最右侧的复制会复制当前行的 emoji 代码。</p><table><thead><tr><th align="center">emoji</th><th align="center">emoji 代码</th><th align="center">commit 说明</th><th align="center">复制</th></tr></thead><tbody><tr><td align="center">🎨 (调色板)</td><td align="center"><code>:art:</code></td><td align="center">改进代码结构 / 代码格式</td><td align="center">复制</td></tr><tr><td align="center">⚡️ (闪电) 🐎 (赛马)</td><td align="center"><code>:zap:</code> <code>:racehorse:</code></td><td align="center">提升性能</td><td align="center">复制</td></tr><tr><td align="center">🔥 (火焰)</td><td align="center"><code>:fire:</code></td><td align="center">移除代码或文件</td><td align="center">复制</td></tr><tr><td align="center">🐛 (bug)</td><td align="center"><code>:bug:</code></td><td align="center">修复 bug</td><td align="center">复制</td></tr><tr><td align="center">🚑 (急救车)</td><td align="center"><code>:ambulance:</code></td><td align="center">重要补丁</td><td align="center">复制</td></tr><tr><td align="center">✨ (火花)</td><td align="center"><code>:sparkles:</code></td><td align="center">引入新功能</td><td align="center">复制</td></tr><tr><td align="center">📝 (备忘录)</td><td align="center"><code>:memo:</code></td><td align="center">撰写文档</td><td align="center">复制</td></tr><tr><td align="center">🚀 (火箭)</td><td align="center"><code>:rocket:</code></td><td align="center">部署功能</td><td align="center">复制</td></tr><tr><td align="center">💄 (口红)</td><td align="center"><code>:lipstick:</code></td><td align="center">更新 UI 和样式文件</td><td align="center">复制</td></tr><tr><td align="center">🎉 (庆祝)</td><td align="center"><code>:tada:</code></td><td align="center">初次提交</td><td align="center">复制</td></tr><tr><td align="center">✅ (白色复选框)</td><td align="center"><code>:white_check_mark:</code></td><td align="center">更新测试</td><td align="center">复制</td></tr><tr><td align="center">🔒 (锁)</td><td align="center"><code>:lock:</code></td><td align="center">修复安全问题</td><td align="center">复制</td></tr><tr><td align="center">🍎 (苹果)</td><td align="center"><code>:apple:</code></td><td align="center">修复 macOS 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🐧 (企鹅)</td><td align="center"><code>:penguin:</code></td><td align="center">修复 Linux 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🏁 (旗帜)</td><td align="center"><code>:checkered_flag:</code></td><td align="center">修复 Windows 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🤖（机器人）</td><td align="center"><code>:robot:</code></td><td align="center">修复 Android 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🍏 (绿苹果)</td><td align="center"><code>:green_apple:</code></td><td align="center">修复 iOS 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🔖 (书签)</td><td align="center"><code>:bookmark:</code></td><td align="center">发行 / 版本标签</td><td align="center">复制</td></tr><tr><td align="center">🚨 (警车灯)</td><td align="center"><code>:rotating_light:</code></td><td align="center">移除 linter 警告</td><td align="center">复制</td></tr><tr><td align="center">🚧 (施工)</td><td align="center"><code>:construction:</code></td><td align="center">工作进行中</td><td align="center">复制</td></tr><tr><td align="center">👷 (工人)</td><td align="center"><code>:construction_worker:</code></td><td align="center">添加 CI 构建系统</td><td align="center">复制</td></tr><tr><td align="center">💚 (绿心)</td><td align="center"><code>:green_heart:</code></td><td align="center">修复 CI 构建问题</td><td align="center">复制</td></tr><tr><td align="center">⬆️ (上升箭头)</td><td align="center"><code>:arrow_up:</code></td><td align="center">升级依赖</td><td align="center">复制</td></tr><tr><td align="center">⬇️ (下降箭头)</td><td align="center"><code>:arrow_down:</code></td><td align="center">降级依赖</td><td align="center">复制</td></tr><tr><td align="center">📌 (图钉)</td><td align="center"><code>:pushpin:</code></td><td align="center">将依赖项固定到特定版本</td><td align="center">复制</td></tr><tr><td align="center">📈 (上升趋势图)</td><td align="center"><code>:chart_with_upwards_trend:</code></td><td align="center">添加分析或跟踪代码</td><td align="center">复制</td></tr><tr><td align="center">♻️ （回收）</td><td align="center"><code>:recycle:</code></td><td align="center">重构代码</td><td align="center">复制</td></tr><tr><td align="center">🐳 (鲸鱼)</td><td align="center"><code>:whale:</code></td><td align="center">Docker 相关工作</td><td align="center">复制</td></tr><tr><td align="center">🌐 (带子午线的地球仪)</td><td align="center"><code>:globe_with_meridians:</code></td><td align="center">国际化与本地化</td><td align="center">复制</td></tr><tr><td align="center">➕ (加号)</td><td align="center"><code>:heavy_plus_sign:</code></td><td align="center">增加一个依赖</td><td align="center">复制</td></tr><tr><td align="center">➖ (减号)</td><td align="center"><code>:heavy_minus_sign:</code></td><td align="center">减少一个依赖</td><td align="center">复制</td></tr><tr><td align="center">🔧 (扳手)</td><td align="center"><code>:wrench:</code></td><td align="center">修改配置文件</td><td align="center">复制</td></tr><tr><td align="center">🔨 (锤子)</td><td align="center"><code>:hammer:</code></td><td align="center">重大重构</td><td align="center">复制</td></tr><tr><td align="center">✏️ (铅笔)</td><td align="center"><code>:pencil2:</code></td><td align="center">修复 typo</td><td align="center">复制</td></tr><tr><td align="center">💩 (粑粑…)</td><td align="center"><code>:hankey:</code></td><td align="center">写了辣鸡代码需要优化</td><td align="center">复制</td></tr><tr><td align="center">⏪ (倒带)</td><td align="center"><code>:rewind:</code></td><td align="center">恢复更改</td><td align="center">复制</td></tr><tr><td align="center">🔀 (交叉向右的箭头)</td><td align="center"><code>:twisted_rightwards_arrows:</code></td><td align="center">合并分支</td><td align="center">复制</td></tr><tr><td align="center">📦 (包裹)</td><td align="center"><code>:package:</code></td><td align="center">更新编译的文件或包</td><td align="center">复制</td></tr><tr><td align="center">👽 (外星人)</td><td align="center"><code>:alien:</code></td><td align="center">由于外部 API 更改而更新代码</td><td align="center">复制</td></tr><tr><td align="center">🚚 (货车)</td><td align="center"><code>:truck:</code></td><td align="center">移动或者重命名文件</td><td align="center">复制</td></tr><tr><td align="center">📄 (正面朝上的页面)</td><td align="center"><code>:page_facing_up:</code></td><td align="center">增加或更新许可证书</td><td align="center">复制</td></tr><tr><td align="center">💥 (爆炸)</td><td align="center"><code>:boom:</code></td><td align="center">引入突破性的变化</td><td align="center">复制</td></tr><tr><td align="center">🍱 (铅笔)</td><td align="center"><code>:bento:</code></td><td align="center">增加或更新资源</td><td align="center">复制</td></tr><tr><td align="center">👌 (OK 手势)</td><td align="center"><code>:ok_hand:</code></td><td align="center">由于代码审查更改而更新代码</td><td align="center">复制</td></tr><tr><td align="center">♿️ (轮椅)</td><td align="center"><code>:wheelchair:</code></td><td align="center">改善无障碍交互</td><td align="center">复制</td></tr><tr><td align="center">💡 (灯泡)</td><td align="center"><code>:bulb:</code></td><td align="center">给代码添加注释</td><td align="center">复制</td></tr><tr><td align="center">🍻 (啤酒)</td><td align="center"><code>:beers:</code></td><td align="center">醉醺醺地写代码…</td><td align="center">复制</td></tr><tr><td align="center">💬 (消息气泡)</td><td align="center"><code>:speech_balloon:</code></td><td align="center">更新文本文档</td><td align="center">复制</td></tr><tr><td align="center">🗃 (卡片文件盒)</td><td align="center"><code>:card_file_box:</code></td><td align="center">执行与数据库相关的更改</td><td align="center">复制</td></tr><tr><td align="center">🔊 (音量大)</td><td align="center"><code>:loud_sound:</code></td><td align="center">增加日志</td><td align="center">复制</td></tr><tr><td align="center">🔇 (静音)</td><td align="center"><code>:mute:</code></td><td align="center">移除日志</td><td align="center">复制</td></tr><tr><td align="center">👥 (轮廓中的半身像)</td><td align="center"><code>:busts_in_silhouette:</code></td><td align="center">增加贡献者</td><td align="center">复制</td></tr><tr><td align="center">🚸 (孩童通行)</td><td align="center"><code>:children_crossing:</code></td><td align="center">优化用户体验、可用性</td><td align="center">复制</td></tr><tr><td align="center">🏗 (建筑建造)</td><td align="center"><code>:building_construction:</code></td><td align="center">结构变动</td><td align="center">复制</td></tr><tr><td align="center">📱 (iPhone)</td><td align="center"><code>:iphone:</code></td><td align="center">做响应式设计</td><td align="center">复制</td></tr><tr><td align="center">🤡 (小丑脸)</td><td align="center"><code>:clown_face:</code></td><td align="center">嘲弄事物（直译，这个没明白）</td><td align="center">复制</td></tr><tr><td align="center">🥚 (鸡蛋)</td><td align="center"><code>:egg:</code></td><td align="center">增加彩蛋</td><td align="center">复制</td></tr><tr><td align="center">🙈 (看不见邪恶)</td><td align="center"><code>:see_no_evil:</code></td><td align="center">增加或更改 gitignore</td><td align="center">复制</td></tr><tr><td align="center">📸 (照相机闪光灯)</td><td align="center"><code>:camera_flash:</code></td><td align="center">增加或更新截图</td><td align="center">复制</td></tr><tr><td align="center">⚗️ (蒸馏器)</td><td align="center"><code>:alembic:</code></td><td align="center">尝试新东西</td><td align="center">复制</td></tr><tr><td align="center">🔍 (放大镜)</td><td align="center"><code>:mag:</code></td><td align="center">SEO 优化</td><td align="center">复制</td></tr><tr><td align="center">☸️ (船的方向盘)</td><td align="center"><code>:wheel_of_dharma:</code></td><td align="center">关于 Kubernetes 的工作</td><td align="center">复制</td></tr><tr><td align="center">🏷 (标签)</td><td align="center"><code>:label:</code></td><td align="center">增加类型（FLow、Typescript）</td><td align="center">复制</td></tr></tbody></table><p>Copy to clipboard</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图标|阿里|HEXO</title>
      <link href="2020/11/18/037/"/>
      <url>2020/11/18/037/</url>
      
        <content type="html"><![CDATA[<h2 id="建立项目"><a href="#建立项目" class="headerlink" title="建立项目"></a>建立项目</h2><p>进入<a href="https://www.iconfont.cn/">阿里 iconfont</a> 寻找你想要添加的图标，并且添加到项目。</p><ol><li><p>找到你想添加的图标（如果你不会找，可以直接关掉此文了。）</p><p>将你想要添加的图标点击 “添加入库” 按钮，也就是图中圈起来的图标。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ffe05d917e7e7f6912471f81d44c3afc.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ffe05d917e7e7f6912471f81d44c3afc.png" alt="img"></a></p></li><li><p>添加至项目</p><p>点击右上角小购物车图标。这里会看到你刚刚添加的所有图标</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ddc14a937d765841e7f1e87d36ac88d2.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ddc14a937d765841e7f1e87d36ac88d2.png" alt="img"></a></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/990c0c665c0bb11570e505ea17d0958d.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/990c0c665c0bb11570e505ea17d0958d.png" alt="img"></a></p><p>接下来就是为你的图标创建一个项目，名称随意。创建完成后你将看到如下页面</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b7dadf552b7bf993bf46d5631cd510e2.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b7dadf552b7bf993bf46d5631cd510e2.png" alt="img"></a></p></li><li><p>生成在线链接</p><p>（font class 方式）点击 Font class 按钮然后生成链接。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/31456e515509653eebbf27aae2ce2340.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/31456e515509653eebbf27aae2ce2340.png" alt="img"></a></p><p>如果使用 svg，那么请点击 symbol，然后生成链接。</p></li><li><p>查看链接</p><p>点击链接会看到一些 css 代码。将鼠标下拉会看到刚才你添加的样式。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/4f7510d102ef1cccde74eda5af19066d.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/4f7510d102ef1cccde74eda5af19066d.png" alt="img"></a></p></li></ol><h2 id="引入字体及样式"><a href="#引入字体及样式" class="headerlink" title="引入字体及样式"></a>引入字体及样式</h2><p>引入字体样式其实就是把刚才的链接引入到博客中，可以直接使用阿里的链接，也可以下载下来。为了方便方便修改，我建议下载下来放到本地。</p><p>同样以 butterfly 主题为例：</p><ol><li><p>下载</p><p>右键另存为即可。路径选择 <code>\themes\Butterfly\source\css\</code></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6b3a115689c68c76e253f9026417c581.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6b3a115689c68c76e253f9026417c581.png" alt="img"></a></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/61aa8325e05cf90b7a245eb8208ce487.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/61aa8325e05cf90b7a245eb8208ce487.png" alt="img"></a></p></li><li><p>引入文件</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f420836b60e215374063cc9d77fe019a.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f420836b60e215374063cc9d77fe019a.png" alt="image-20200507182051871"></a></p></li></ol><blockquote><p>不同主题引入外部 css/js 的方法都不相同，请参考你所使用主题引入外部样式的设置。</p></blockquote><blockquote><p>如果你不想自己创建而是想直接使用博主的，那么可以直接把链接换成：<a href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/iconfont.min.css%E3%80%82">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/iconfont.min.css。</a></p><p>图标库预览：<a href="https://www.antmoe.com/iconfont/">https://www.antmoe.com/iconfont/</a></p></blockquote><ol><li><p>如果使用 svg</p><p>如果使用 svg 图标，那么需要在 css 样式表中加入如下样式。如果使用 FontClass，那么可以无视这一步</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">.icon &#123;</span><br><span class="line">  width: 1em;</span><br><span class="line">  height: 1em;</span><br><span class="line">  vertical-align: -0.15em;</span><br><span class="line">  fill: currentColor;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="开始使用-iconfont"><a href="#开始使用-iconfont" class="headerlink" title="开始使用 iconfont"></a>开始使用 iconfont</h2><p>上述步骤全部完成后，那么接下来可以使用小图标了。</p><h3 id="个人信息栏的小图标–font-字体方式"><a href="#个人信息栏的小图标–font-字体方式" class="headerlink" title="个人信息栏的小图标–font 字体方式"></a>个人信息栏的小图标–font 字体方式</h3><p>这里直接写阿里提供的样式即可。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YAML</span><br><span class="line">social:</span><br><span class="line">  iconfont  icon-bilibili: https:&#x2F;&#x2F;www.bilibili.com</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6c062002fe38a75d0c034cf21dbd57fb.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6c062002fe38a75d0c034cf21dbd57fb.png" alt="img"></a></p><p>小图标如果你觉得小，可以自行修改。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">.icon-bilibili:before &#123;</span><br><span class="line">  content: &quot;\e600&quot;;</span><br><span class="line">  &#x2F;* 修改颜色 *&#x2F;</span><br><span class="line">  color: blue;</span><br><span class="line">  &#x2F;* 修改大小 *&#x2F;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样修改会导致所有这个图标的大小都会变动。建议的方式是重新写一个 css，为其添加规则。设置时只需要多加一个 class 即可例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">.icon-bilibili:before &#123;</span><br><span class="line">  content: &quot;\e600&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 卡片处小图标 *&#x2F;</span><br><span class="line">.card_icon &#123;</span><br><span class="line">  &#x2F;* 修改颜色 *&#x2F;</span><br><span class="line">  color: blue;</span><br><span class="line">  &#x2F;* 修改大小 *&#x2F;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置时的方法：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YAML</span><br><span class="line">social:</span><br><span class="line">  iconfont  icon-bilibili card_icon: https:&#x2F;&#x2F;www.bilibili.com</span><br></pre></td></tr></table></figure><h3 id="个人信息栏的小图标–svg-方式"><a href="#个人信息栏的小图标–svg-方式" class="headerlink" title="个人信息栏的小图标–svg 方式"></a>个人信息栏的小图标–svg 方式</h3><p>svg 也称多色图标，由于不是通过类名，而是使用了 svg 标签，因此需要通过脚本的方式动态插入。例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">$(&quot;.card-info-social-icons&quot;).append(</span><br><span class="line">    &#39;&lt;a class&#x3D;&quot;social-icon&quot; href&#x3D;&quot;点击图标后的地址（须完整）&quot; target&#x3D;&quot;_blank&quot;&gt;&lt;svg class&#x3D;&quot;icon&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;use xlink:href&#x3D;&quot;#icon-xxxx&quot;&gt;&lt;&#x2F;use&gt;&lt;&#x2F;svg&gt;&lt;&#x2F;a&gt;&#39;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>其中两个空分别表示地址，例如 <code>https://www.antmoe.com</code>, 另外一个为图标名，例如<code>#icon-QQ</code>，名字根据你自己库来写，不是随便写的。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/28/a129e0c19478551aecfc33a3c8b62c08.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/28/a129e0c19478551aecfc33a3c8b62c08.png" alt="image-20200628211324448"></a></p><h3 id="标题美化处的修改"><a href="#标题美化处的修改" class="headerlink" title="标题美化处的修改"></a>标题美化处的修改</h3><p>butterfly 主题的标题标签前有一个图标，如何为其更改为阿里 iconfont 呢？</p><p>通过开发者工具我们可以看到主题为前边小图标的样式：</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b85e949eb81ec018a03746be1bf41007.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b85e949eb81ec018a03746be1bf41007.png" alt="img"></a></p><p>因此我们改动起来也很简单，只需要在刚才我们的 <code>iconfont.css</code> 文件中覆盖这个样式即可。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">#article-container h1:before,</span><br><span class="line">#article-container h2:before,</span><br><span class="line">#article-container h3:before,</span><br><span class="line">#article-container h4:before,</span><br><span class="line">#article-container h5:before,</span><br><span class="line">#article-container h6:before &#123;</span><br><span class="line">  font-family: &quot;iconfont&quot;;</span><br><span class="line">  content: &quot;\e6a0&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时就能看到图标已经发生了变化。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f4993de6d089f3232aad38ea1bcd8f1f.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f4993de6d089f3232aad38ea1bcd8f1f.png" alt="img"></a></p><blockquote><p>这里解释下代码，方便大家自行决策如何修改。</p><p><code>font-family</code> 是必须写的，因为作者的代码只写了 FontAwesome，因此需要覆盖他。</p><p><code>content</code> 可以不在 css 中写，这样可以在配置文件里定义内容。如果写了，会导致配置文件的设置失效。颜色设置同理.</p></blockquote><h3 id="其他修改"><a href="#其他修改" class="headerlink" title="其他修改"></a>其他修改</h3><p>不管是什么主题，不管是什么样式。只要你想使用阿里的图标，必须改变其标签的字体为 <code>iconfont</code>, 接下来可以用伪类方式，也可以使用 class 方式。</p><p>文章中使用 svg 也很简单，首先需要确保全局引用了 js。如果没有，在文中局部引入也是可以的。</p><p>接下来只需要在需要的地方插入 svg 标签即可。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTML</span><br><span class="line">&lt;svg class&#x3D;&quot;icon&quot; aria-hidden&#x3D;&quot;true&quot;&gt;</span><br><span class="line">  &lt;use xlink:href&#x3D;&quot;#icon-xxx&quot;&gt;&lt;&#x2F;use&gt;</span><br><span class="line">&lt;&#x2F;svg&gt;</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>如果你遇到了如下问题，请向上查找解决方案.</p><ol><li><p>修改图标大小及颜色</p></li><li><p>图标不显示 (无效果)</p><p>这种原因很多种，但如果你稍有常识就不会遇到.</p></li><li><p>不知道在哪改</p><p>在你创建的 css 文件中.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>镜像|加速</title>
      <link href="2020/11/18/036/"/>
      <url>2020/11/18/036/</url>
      
        <content type="html"><![CDATA[<h3 id="GitHub-Clone"><a href="#GitHub-Clone" class="headerlink" title="GitHub Clone"></a>GitHub Clone</h3><p>通过HTTPS协议Clone仓库的话，可能会遇到速度很慢的情况。</p><p>根据经验，在慢的时候中断Clone捎带片刻重复命令的话，你可能会得到正常速度，这种偷鸡的策略适合于小小仓库。</p><p>对于大型仓库，改走SSH协议进行clone的话，走到正常速度的几率较大，但此时的速度相较于HTTPS而言通常会有所损耗。</p><h4 id="修改-hosts-文件"><a href="#修改-hosts-文件" class="headerlink" title="修改 hosts 文件"></a>修改 hosts 文件</h4><p>但下面还有一种较为费事的方法，通过修改 hosts 文件来完成提速，无需科学也无需代理加速也无需镜像加速（GitHub是不太可能有镜像的）。具体来说请接下去阅读：</p><p>首先在 <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 查询这三个域名的地址：</p><ol><li><a href="http://github.com/">github.com</a></li><li><a href="http://assets-cdn.github.com/">assets-cdn.github.com</a></li><li><a href="http://github.global.ssl.fastly.net/">github.global.ssl.fastly.net</a></li></ol><p>然后按照查询的结果填写到 /etc/hosts 中，windows用户请查找 %WINDIR%/system32/drivers/etc/hosts 文件。请注意修改 hosts 文件通常需要 sudo 权限 或者管理员权限。修改内容如同下面：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">140.82.118.3    github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">185.199.111.153 assets-cdn.github.com</span><br><span class="line">185.199.108.153 assets-cdn.github.com</span><br><span class="line">185.199.110.153 assets-cdn.github.com</span><br><span class="line">151.101.113.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><p>如果你有国外的服务器，也可以通过dig指令来查找：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">$ dig github.com +short</span><br><span class="line">140.82.118.3</span><br></pre></td></tr></table></figure><p>修改 hosts 文件能够起效的原因有赖于IP未被封禁。但实际上这个并不一定如此，封禁是多种手段同时采用的，此外、不同省份地区的不同运营商的具体动作也会有点区别。</p><p>比较根本的方法还是两种，一是在国外VPS直接clone，然后rsync到本机；二是git走SSH协议且启用代理。</p><h4 id="Git-SSH协议代理"><a href="#Git-SSH协议代理" class="headerlink" title="Git SSH协议代理"></a>Git SSH协议代理</h4><p>git走SSH协议时，可以在 <code>$HOME/.ssh/config</code> 中为其指定特别约定：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">host github.com</span><br><span class="line">  User git</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  identityFile ~&#x2F;.ssh&#x2F;git&#x2F;id_rsa</span><br><span class="line">  ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p</span><br></pre></td></tr></table></figure><p>在这里，定制了免密码时所用的SSH私钥 <code>~/.ssh/git/id_rsa</code>，以及通过 <code>ProxyCommand</code> 指定了转发 git SSH 流量到 <code>127.0.0.1:1080</code> SOCKS5 代理服务器上。</p><h4 id="Git-HTTPS协议代理"><a href="#Git-HTTPS协议代理" class="headerlink" title="Git HTTPS协议代理"></a>Git HTTPS协议代理</h4><p>值得注意的是，如果是使用 Git https 协议的话，你需要指定 <code>HTTPS_PROXY</code> 环境变量到一个 HTTP 代理，从而转发流量。根据我的经验，在这个时候提供一个诸如 <code>socks://127.0.0.1:1080</code> 的 SOCKS4/5 代理，得到的效果会非常有限，不如将该代理包装为 HTTP 后再使用。</p><p>如果不想使用 <code>HTTPS_PROXY</code> 环境变量，Git 允许在其全局配置文件 <code>$HOME/.gitconfig</code> 中指定特定主机或者所有主机的专用代理：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">[http &quot;https:&#x2F;&#x2F;skia.googlesource.com&quot;]</span><br><span class="line">proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">[https &quot;https:&#x2F;&#x2F;skia.googlesource.com&quot;]</span><br><span class="line">proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">[http &quot;https:&#x2F;&#x2F;googlesource.com&quot;]</span><br><span class="line">proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">[https &quot;https:&#x2F;&#x2F;googlesource.com&quot;]</span><br><span class="line">proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br></pre></td></tr></table></figure><p>综合比较起来，Git 走 SSH 协议且采用一个很好的 SOCKS5 服务器的话，会相当顺利，很难遇到各色怪现象。</p><h4 id="生活充满美好"><a href="#生活充满美好" class="headerlink" title="生活充满美好"></a>生活充满美好</h4><p>我不应该耗费精力在如何拿到开发资源上，对吗？</p><p>对的。一台国外的VPS，美国、日本、香港都是被推荐的地点，在那里下载或者拖到目标内容，无论是 GitHub 还是 golang 的内容，然后 rsync 到本地，看似很复杂，然而往往可以在10min 之内搞定一切事情，胜似在本机上折腾 proxy 8h。</p><blockquote><p>Nothing serious, only explodes without reason.</p></blockquote><h3 id="Docker-CE"><a href="#Docker-CE" class="headerlink" title="Docker CE"></a>Docker CE</h3><p>Docker CE 的具体加速办法有很多种，然而各种版本的本质都是一样的，一般来说你需要找到 docker daemon 的配置文件 <code>/etc/docker/daemon.json</code>，然后修改它像这样：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;insecure-registries&quot;: [</span><br><span class="line">    &quot;registry.mirrors.aliyuncs.com&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;debug&quot;: true,</span><br><span class="line">  &quot;experimental&quot;: false,</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https:&#x2F;&#x2F;mirror.ccs.tencentyun.com&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;hub-mirror.c.163.com&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;dockerhub.azk8s.cn&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;reg-mirror.qiniu.com&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你在这个文件中自定义了其他项目，或者这个文件中已经存在其他定义，请注意保持。</p><p>参考：<a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file</a></p><p>附加说明：</p><table><thead><tr><th>镜像加速器</th><th>镜像加速器地址</th><th>其它加速？</th></tr></thead><tbody><tr><td><a href="https://docker-cn.com/registry-mirror">Docker 中国官方镜像</a></td><td><code>https://registry.docker-cn.com</code></td><td>Docker Hub</td></tr><tr><td><a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy">Azure 中国镜像</a></td><td><code>https://dockerhub.azk8s.cn</code></td><td>Docker Hub、GCR、Quay</td></tr><tr><td><a href="https://mirrors.ustc.edu.cn/help/dockerhub.html">科大镜像站</a></td><td><code>https://docker.mirrors.ustc.edu.cn</code></td><td>Docker Hub、<a href="https://github.com/ustclug/mirrorrequest/issues/91">GCR</a>、<a href="https://github.com/ustclug/mirrorrequest/issues/135">Quay</a></td></tr><tr><td><a href="https://kirk-enterprise.github.io/hub-docs/#/user-guide/mirror">七牛云</a></td><td><code>https://reg-mirror.qiniu.com</code></td><td>Docker Hub、GCR、Quay</td></tr><tr><td><a href="https://c.163yun.com/hub">网易云</a></td><td><code>https://hub-mirror.c.163.com</code></td><td>Docker Hub</td></tr><tr><td><a href="https://cloud.tencent.com/document/product/457/9113">腾讯云</a></td><td><code>https://mirror.ccs.tencentyun.com</code></td><td>Docker Hub</td></tr></tbody></table><h3 id="Alpine-Apk"><a href="#Alpine-Apk" class="headerlink" title="Alpine Apk"></a>Alpine Apk</h3><p>清华提供一种Apk源加速方式：<a href="https://mirror.tuna.tsinghua.edu.cn/help/alpine/">https://mirror.tuna.tsinghua.edu.cn/help/alpine/</a></p><p>在终端输入以下命令以替换TUNA镜像源： <code>sed -i &#39;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&#39; /etc/apk/repositories</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">sed -i &#39;s&#x2F;dl-cdn.alpinelinux.org&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;g&#39; &#x2F;etc&#x2F;apk&#x2F;repositories</span><br></pre></td></tr></table></figure><p>制作 Docker 镜像时，这是很有用的，节约生命真的是美德。</p><h3 id="Android-SDK"><a href="#Android-SDK" class="headerlink" title="Android SDK"></a>Android SDK</h3><p>国内有多家组织提供 Android SDK的镜像缓存，甚至个人也可以很容易地建立这样的缓存，如果你有国内访问速度很好的国外服务器的话。</p><p>但是，随着时间推移，现在这些镜像基本上都已失效了。</p><p>取而代之的是，目前，Android的官方源是可以直连的，且能达到正常速度，所以还是赶紧滴做点负责任的app出来吧，不要只是会矽肺或者偷偷上传神马的。</p><h3 id="Arch-Linux-Pacman"><a href="#Arch-Linux-Pacman" class="headerlink" title="Arch Linux Pacman"></a>Arch Linux Pacman</h3><p>清华提供一种 Arch Linux 软件仓库加速方式：<a href="https://mirror.tuna.tsinghua.edu.cn/help/archlinux/">https://mirror.tuna.tsinghua.edu.cn/help/archlinux/</a></p><p>编辑 /etc/pacman.d/mirrorlist， 在文件的最顶端添加： <code>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</code></p><p>更新软件包缓存： <code>sudo pacman -Syy</code></p><h3 id="Flutter-amp-Dart-Pub"><a href="#Flutter-amp-Dart-Pub" class="headerlink" title="Flutter &amp; Dart Pub"></a>Flutter &amp; Dart Pub</h3><p>flutter 官网有专门的页面讲述加速问题：</p><p><a href="https://flutter.dev/community/china">https://flutter.dev/community/china</a></p><h4 id="Flutter-镜像安装帮助"><a href="#Flutter-镜像安装帮助" class="headerlink" title="Flutter 镜像安装帮助"></a>Flutter 镜像安装帮助</h4><p>Flutter 是一款跨平台的移动应用开发框架，由 Google 开源。用 Flutter 开发的应用可以直接编译成 ARM 代码运行在 Android 和 iOS 系统上。</p><p>可以使用清华镜像：<a href="https://mirror.tuna.tsinghua.edu.cn/help/flutter/">https://mirror.tuna.tsinghua.edu.cn/help/flutter/</a></p><p>Flutter 安装时需要从 Google Storage 下载文件，如您的网络访问 Google 受阻，建议使用本镜像。使用方法为设置环境变量 <code>FLUTTER_STORAGE_BASE_URL</code>，并指向 TUNA 镜像站。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">$ export FLUTTER_STORAGE_BASE_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;flutter&quot;</span><br></pre></td></tr></table></figure><p>若希望长期使用 TUNA 镜像：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">$ echo &#39;export FLUTTER_STORAGE_BASE_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;flutter&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p>此外 Flutter 开发中还需要用到 Dart 语言的包管理器 Pub，其镜像使用方法参见<a href="https://mirror.tuna.tsinghua.edu.cn/help/dart-pub/">Pub 镜像安装帮助</a>。</p><h3 id="Go-Modules"><a href="#Go-Modules" class="headerlink" title="Go Modules"></a>Go Modules</h3><p>使用 Golang v1.11 以上，为你的项目启用 Go Modules 功能，然后就可以使用 GOPROXY 环境变量来透明地使用镜像代理。</p><p>比较著名的大陆加速器为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">export GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn</span><br><span class="line"># Windows 应该使用 set GOPROXY&#x3D;xxxx 语法</span><br></pre></td></tr></table></figure><p>然后 <code>go mod download</code> 以及 <code>go mod tidy</code> 就足够快了。</p><p>如果你想搭建私服，可以遵循 Go Modules 的 API 规范自己实现一个代理服务器，也可以使用开源的 <a href="https://github.com/gomods/athens">athens</a> 项目自建一个服务器。</p><p>如果使用 Golang 1.13 以上版本的话，以下语法可用：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">export GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn,https:&#x2F;&#x2F;goproxy.io,https:&#x2F;&#x2F;gocenter.i</span><br><span class="line">o,direct</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p>关于中国的 <a href="http://goproxy.cn/">goproxy.cn</a>：<a href="https://juejin.im/post/5d8ee2db6fb9a04e0b0d9c8b">干货满满的Go Modules 和goproxy.cn - 掘金</a></p><p>关于 go 1.13 的 Modules：<a href="https://colobu.com/2019/09/23/review-go-module-again/">Go module 再回顾| 鸟窝</a></p><p>关于 <a href="https://github.com/gomods/athens">athens</a> 实现以及 Go Modules Communicated Protocol: <a href="https://www.speechmatics.com/wp-content/uploads/2019/07/Go-modules-and-project-Athens.pdf">Go modules and project Athens - Speechmatics</a>, Athens Official Site: <a href="https://docs.gomods.io/%E3%80%82">https://docs.gomods.io/。</a></p><p>关于 Go Modules 的通讯协议：<a href="https://blog.cyeam.com/golang/2018/09/27/athens">为Go module 搭建私服</a> 以及 <a href="https://docs.gomods.io/design/">The Design of Athens</a>：</p><ol><li><a href="https://docs.gomods.io/design/proxy">Proxy internals</a> - basics of the Athens proxy architecture and major features</li><li><a href="https://docs.gomods.io/design/communication">Communication flow</a> - how the Athens proxy interacts with the outside world to fetch and store code, respond to user requests, and so on</li></ol><h3 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h3><p>Gradle的配置文件为<code>~/.gradle/init.gradle</code>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">allprojects &#123;</span><br><span class="line">repositories &#123;</span><br><span class="line">maven &#123;</span><br><span class="line">url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&#x2F;&#39;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">buildscript &#123;</span><br><span class="line">repositories &#123;</span><br><span class="line">maven &#123;</span><br><span class="line">url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&#x2F;&#39;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下的镜像可以选用</p><ul><li>华为：<a href="https://mirrors.huaweicloud.com/repository/maven/">https://mirrors.huaweicloud.com/repository/maven/</a></li><li>网易：<a href="https://mirrors.163.com/maven/repository/maven-public/">https://mirrors.163.com/maven/repository/maven-public/</a></li></ul><h3 id="Gem-和-CocoaPods"><a href="#Gem-和-CocoaPods" class="headerlink" title="Gem 和 CocoaPods"></a>Gem 和 CocoaPods</h3><h4 id="替换-Ruby-源"><a href="#替换-Ruby-源" class="headerlink" title="替换 Ruby 源"></a>替换 Ruby 源</h4><p>首先是 gem 和 ruby 的源应该被替换</p><h5 id="移除现有的Ruby镜像"><a href="#移除现有的Ruby镜像" class="headerlink" title="移除现有的Ruby镜像"></a>移除现有的Ruby镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">$ gem sources --remove https:&#x2F;&#x2F;rubygems.org</span><br></pre></td></tr></table></figure><h5 id="添加国内最新镜像"><a href="#添加国内最新镜像" class="headerlink" title="添加国内最新镜像"></a>添加国内最新镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">$ gem sources -a https:&#x2F;&#x2F;gems.ruby-china.com</span><br></pre></td></tr></table></figure><h5 id="查看当前镜像"><a href="#查看当前镜像" class="headerlink" title="查看当前镜像"></a>查看当前镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">$ gem sources -l</span><br></pre></td></tr></table></figure><h4 id="加速-Cocoapods"><a href="#加速-Cocoapods" class="headerlink" title="加速 Cocoapods"></a>加速 Cocoapods</h4><p>几种加速方法，可能需要自己实际测试那种效果最好。</p><h5 id="gitee镜像"><a href="#gitee镜像" class="headerlink" title="gitee镜像"></a>gitee镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">pod repo remove master   </span><br><span class="line">pod repo add master https:&#x2F;&#x2F;gitee.com&#x2F;mirrors&#x2F;CocoaPods-Specs   </span><br><span class="line">pod repo update</span><br></pre></td></tr></table></figure><h5 id="清华镜像"><a href="#清华镜像" class="headerlink" title="清华镜像"></a>清华镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">pod repo remove master   </span><br><span class="line">pod repo add master https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;CocoaPods&#x2F;Specs.git   </span><br><span class="line">pod repo update</span><br></pre></td></tr></table></figure><p>对于 Cocoapods 新的版本，需要使用如下的方法：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">pod repo remove master</span><br><span class="line">cd ~&#x2F;.cocoapods&#x2F;repos</span><br><span class="line">git clone https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;CocoaPods&#x2F;Specs.git master</span><br></pre></td></tr></table></figure><h5 id="你的-xcode-工程中如果有Podfile的话，请修改加入下面的行："><a href="#你的-xcode-工程中如果有Podfile的话，请修改加入下面的行：" class="headerlink" title="你的 xcode 工程中如果有Podfile的话，请修改加入下面的行："></a>你的 xcode 工程中如果有Podfile的话，请修改加入下面的行：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ruby</span><br><span class="line">source &#39;https:&#x2F;&#x2F;gitee.com&#x2F;mirrors&#x2F;CocoaPods-Specs.git&#39;</span><br><span class="line">source &#39;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;CocoaPods&#x2F;Specs.git&#39;</span><br></pre></td></tr></table></figure><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p>macOS 中都会安装 Homebrew，但 <code>brew update</code> 可能会很慢。加速的办法是替换现有的上游：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">git -C &quot;$(brew --repo)&quot; remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;brew.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew&#x2F;core)&quot; remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;homebrew-core.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew&#x2F;cask)&quot; remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;homebrew-cask.git</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><h4 id="复原"><a href="#复原" class="headerlink" title="复原"></a>复原</h4><p><em>(感谢Snowonion Lee提供说明)</em></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">git -C &quot;$(brew --repo)&quot; remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;brew.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew&#x2F;core)&quot; remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-core.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew&#x2F;cask)&quot; remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-cask.git</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><p>以上内容从清华开源上复制：<a href="https://mirror.tuna.tsinghua.edu.cn/help/homebrew/">Homebrew 镜像使用帮助</a></p><p>如果想阻止 brew 指令运行时总是尝试去自动更新，可以设置环境变量：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># forbit autoupdate on homebrew installing</span><br><span class="line">export HOMEBREW_NO_AUTO_UPDATE&#x3D;1</span><br></pre></td></tr></table></figure><h4 id="Pub-镜像安装帮助"><a href="#Pub-镜像安装帮助" class="headerlink" title="Pub 镜像安装帮助"></a>Pub 镜像安装帮助</h4><p><a href="https://pub.dartlang.org/">Pub</a> 是 Dart 官方的包管理器。跨平台的前端应开发 框架 <a href="https://flutter.dev/">Flutter</a> 也基于 Dart 并且可以使用大部分 Pub 中的 库。</p><p>如果希望通过 TUNA 的 pub 镜像安装软件，只需要设置 <a href="https://www.dartlang.org/tools/pub/environment-variables">PUB_HOSTED_URL</a> 这个环境变量指向 <a href="https://mirrors.tuna.tsinghua.edu.cn/dart-pub/">https://mirrors.tuna.tsinghua.edu.cn/dart-pub/</a> 即可。</p><p>以 bash 为例，临时使用 TUNA 的镜像来安装依赖：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">$ PUB_HOSTED_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;dart-pub&#x2F;&quot; pub get # pub</span><br><span class="line">$ PUB_HOSTED_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;dart-pub&#x2F;&quot; flutter packages get # flutter</span><br></pre></td></tr></table></figure><p>若希望长期使用 TUNA 镜像：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">$ echo &#39;export PUB_HOSTED_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;dart-pub&#x2F;&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><h4 id="采用aliyun镜像"><a href="#采用aliyun镜像" class="headerlink" title="采用aliyun镜像"></a>采用aliyun镜像</h4><p>编辑 <code>$HOME/.m2/settings.xml</code>，找到 <code>&lt;mirrors&gt;</code> 小节，添加如下内容：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Xml</span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-public&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun public&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-central&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun central&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;central&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-spring&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun spring&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;spring&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-spring-plugin&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun spring-plugin&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;spring-plugin&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-apache-snapshots&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun apache-snapshots&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;apache-snapshots&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-google&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun google&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;google&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-gradle-plugin&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun gradle-plugin&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;gradle-plugin&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-jcenter&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun jcenter&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;jcenter&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-releases&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun releases&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;releases&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-snapshots&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun snapshots&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;snapshots&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;  </span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-grails-core&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun grails-core&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;grails-core&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-mapr-public&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun mapr-public&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;mapr-public&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br></pre></td></tr></table></figure><p>也可以采用 profile 方式，这里就不再赘述了。</p><h3 id="Node-和-npm-Yarn"><a href="#Node-和-npm-Yarn" class="headerlink" title="Node 和 npm/Yarn"></a>Node 和 npm/Yarn</h3><p>可以更换镜像：</p><ul><li>阿里：<code>yarn config set registry https://registry.npm.taobao.org</code></li><li>华为：<code>yarn config set registry https://mirrors.huaweicloud.com/repository/npm/</code></li><li>Node-Sass：<code>npm config set sass_binary_site https://mirrors.huaweicloud.com/node-sass/</code></li></ul><h3 id="Python-pip-和-composer"><a href="#Python-pip-和-composer" class="headerlink" title="Python pip 和 composer"></a>Python pip 和 composer</h3><h4 id="Pip"><a href="#Pip" class="headerlink" title="Pip"></a>Pip</h4><ul><li>清华：<code>pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</code></li><li>阿里：<code>pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</code></li><li>华为：<code>pip config set global.index-url https://mirrors.huaweicloud.com/repository/pypi/simple</code></li><li>豆瓣：<code>pip config set global.index-url https://pypi.douban.com/simple</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># 以下可以选用其一</span><br><span class="line"></span><br><span class="line"># 清华：</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br><span class="line"># 阿里：</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line"># 华为：</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;mirrors.huaweicloud.com&#x2F;repository&#x2F;pypi&#x2F;simple</span><br><span class="line"># 豆瓣：</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;pypi.douban.com&#x2F;simple</span><br></pre></td></tr></table></figure><h4 id="Composer"><a href="#Composer" class="headerlink" title="Composer"></a>Composer</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># 以下可以选用其一</span><br><span class="line"></span><br><span class="line"># 阿里：</span><br><span class="line">composer config -g repo.packagist composer https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;composer&#x2F;</span><br><span class="line"># 华为：</span><br><span class="line">composer config -g repo.packagist composer https:&#x2F;&#x2F;mirrors.huaweicloud.com&#x2F;repository&#x2F;php&#x2F;</span><br><span class="line"></span><br><span class="line"># Laravel中文网</span><br><span class="line">composer config -g repo.packagist composer https:&#x2F;&#x2F;packagist.laravel-china.org</span><br></pre></td></tr></table></figure><h4 id="Sequel"><a href="#Sequel" class="headerlink" title="Sequel"></a>Sequel</h4><p>完成pip加速配置之后，<code>$HOME/.pip/pip.conf</code> 看起来可能会像这样：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ini</span><br><span class="line">[global]</span><br><span class="line">#index-url &#x3D; http:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple</span><br><span class="line"></span><br><span class="line">trusted-host &#x3D;  mirrors.aliyun.com</span><br><span class="line">index-url &#x3D; http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple</span><br><span class="line"># index-url &#x3D; http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple</span><br><span class="line"># trusted-host &#x3D; pypi.douban.com</span><br><span class="line">disable-pip-version-check &#x3D; true</span><br><span class="line">timeout &#x3D; 120</span><br><span class="line"></span><br><span class="line">[install]</span><br><span class="line">ignore-installed &#x3D; true</span><br><span class="line"># 不自动安装依赖的时候设置此选项</span><br><span class="line"># no-dependencies &#x3D; yes</span><br><span class="line"></span><br><span class="line">[list]</span><br><span class="line">format &#x3D; columns</span><br></pre></td></tr></table></figure><h3 id="R-CRAN"><a href="#R-CRAN" class="headerlink" title="R CRAN"></a>R CRAN</h3><p>采用清华开源站：</p><p><a href="https://cran.r-project.org/">CRAN</a> (The Comprehensive R Archive Network) 镜像源配置文件之一是 <code>.Rprofile</code> (linux 下位于 <code>~/.Rprofile</code> )。</p><p>在文末添加如下语句:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">options(&quot;repos&quot; &#x3D; c(CRAN&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;CRAN&#x2F;&quot;))</span><br></pre></td></tr></table></figure><p>打开 R 即可使用该 CRAN 镜像源安装 R 软件包。</p><p>也可以使用其他镜像站：</p><ul><li><a href="https://mirror.lzu.edu.cn/CRAN">https://mirror.lzu.edu.cn/CRAN</a></li><li>…</li></ul><p>如果使用 R Console，可以在 Perferences 设置对话框中直接设置官方镜像的上海、香港、兰州等节点。</p><h3 id="Rust-Cargo-和-Rustup"><a href="#Rust-Cargo-和-Rustup" class="headerlink" title="Rust Cargo 和 Rustup"></a>Rust Cargo 和 Rustup</h3><p>Rust 使用 <a href="http://creates.io/">creates.io</a>，国内也有相应的提速手段：</p><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/rust-crates">https://lug.ustc.edu.cn/wiki/mirrors/help/rust-crates</a></p><p>首先你需要在 $HOME/.cargo/config 中添加如下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ini</span><br><span class="line">[registry]</span><br><span class="line">index &#x3D; &quot;git:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;crates.io-index&quot;</span><br><span class="line"># Or</span><br><span class="line"># index &#x3D; &quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;crates.io-index&quot;</span><br></pre></td></tr></table></figure><p>如果 cargo 版本为 0.13.0 或以上, 需要更改 $HOME/.cargo/config 为以下内容:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ini</span><br><span class="line">[source.crates-io]</span><br><span class="line">registry &#x3D; &quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;crates.io-index&quot;</span><br><span class="line">replace-with &#x3D; &#39;ustc&#39;</span><br><span class="line">[source.ustc]</span><br><span class="line">registry &#x3D; &quot;git:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;crates.io-index&quot;</span><br></pre></td></tr></table></figure><p>有兴趣自建的朋友，可以看看：</p><p><a href="https://github.com/rust-lang/crates.io/blob/master/docs/MIRROR.md">https://github.com/rust-lang/crates.io/blob/master/docs/MIRROR.md</a></p><p>清华TUNA 也有 rustup 相应的镜像</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># export CARGO_HOME&#x3D;$HOME&#x2F;.cargo</span><br><span class="line"># export RUSTUP_HOME&#x3D;$HOME&#x2F;.rustup</span><br><span class="line">export RUSTUP_DIST_SERVER&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;rustup</span><br></pre></td></tr></table></figure><p>详见：<a href="https://mirror.tuna.tsinghua.edu.cn/help/rustup/">https://mirror.tuna.tsinghua.edu.cn/help/rustup/</a></p><h3 id="Ubuntu-Apt-Source"><a href="#Ubuntu-Apt-Source" class="headerlink" title="Ubuntu Apt Source"></a>Ubuntu Apt Source</h3><p>如果你使用桌面版本，则 Ubuntu 的软件源设置中，你可以选取最近的地区，例如中国大陆，从而加速软件包下载速度。</p><p>如果使用 Server 版本，则可以明确地使用清华镜像（或者自行使用其他镜像）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>以上例子为 18.04 版本的替换内容。你可以直接访问清华开源站查找其他版本：</p><p><a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/">https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/</a></p><h4 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h4><p><a href="https://askubuntu.com/questions/39922/how-do-you-select-the-fastest-mirror-from-the-command-line">https://askubuntu.com/questions/39922/how-do-you-select-the-fastest-mirror-from-the-command-line</a></p><h5 id="使用-apt-select"><a href="#使用-apt-select" class="headerlink" title="使用 apt-select"></a>使用 apt-select</h5><p>可以用 <code>pip</code> 安装它：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">pip install apt-select</span><br></pre></td></tr></table></figure><p>然后运行它并跟随提示走：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">apt-select --country US -t 5 --choose</span><br></pre></td></tr></table></figure><h5 id="使用mirrors-CDN"><a href="#使用mirrors-CDN" class="headerlink" title="使用mirrors CDN"></a>使用mirrors CDN</h5><p>apt-get <a href="http://mvogt.wordpress.com/2011/03/21/the-apt-mirror-method/">now supports</a> a ‘mirror’ method that will automatically select a good mirror based on your location. Putting:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">deb mirror:&#x2F;&#x2F;mirrors.ubuntu.com&#x2F;mirrors.txt precise main restricted universe multiverse</span><br><span class="line">deb mirror:&#x2F;&#x2F;mirrors.ubuntu.com&#x2F;mirrors.txt precise-updates main restricted universe multiverse</span><br><span class="line">deb mirror:&#x2F;&#x2F;mirrors.ubuntu.com&#x2F;mirrors.txt precise-backports main restricted universe multiverse</span><br><span class="line">deb mirror:&#x2F;&#x2F;mirrors.ubuntu.com&#x2F;mirrors.txt precise-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>on the top in your <code>/etc/apt/sources.list</code> file should be all that is needed to make it automatically pick a mirror for you based on your geographical location.</p><p>你可以无脑地使用 sed 来搞定：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">sudo sed -i &#39;s%us.archive.ubuntu.com&#x2F;ubuntu&#x2F;%mirrors.ubuntu.com&#x2F;mirrors.txt%&#39; &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure><h3 id="Vagrant"><a href="#Vagrant" class="headerlink" title="Vagrant"></a>Vagrant</h3><p>没有简单的办法。一些周知的镜像，可以通过这些地方加速：</p><ul><li><p>对于 Ubuntu 之类，可以取清华镜像</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">vagrant box add ubuntu&#x2F;trusty64 https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu-cloud-images&#x2F;vagrant&#x2F;trusty&#x2F;current&#x2F;trusty-server-cloudimg-amd64-vagrant-disk1.box</span><br><span class="line"></span><br><span class="line">vagrant box add ubuntu&#x2F;bionic64 https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu-cloud-images&#x2F;bionic&#x2F;20191002&#x2F;bionic-server-cloudimg-amd64-vagrant.box</span><br></pre></td></tr></table></figure></li><li><p>清华找不到几个周知镜像，所以基本上还是要在 <a href="http://www.vagrantbox.es/">http://www.vagrantbox.es/</a> 寻找和添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">vagrant box add debian&#x2F;8.1 https:&#x2F;&#x2F;github.com&#x2F;kraksoft&#x2F;vagrant-box-debian&#x2F;releases&#x2F;download&#x2F;8.1.0&#x2F;debian-8.1.0-amd64.box</span><br></pre></td></tr></table></figure></li><li><p>总的来说，没有什么有效的镜像，只能想各种办法去手工下载box，然后再导入。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弹窗|点击文字效果</title>
      <link href="2020/11/18/035/"/>
      <url>2020/11/18/035/</url>
      
        <content type="html"><![CDATA[<h4 id="引入鼠标点击效果"><a href="#引入鼠标点击效果" class="headerlink" title="引入鼠标点击效果"></a>引入鼠标点击效果</h4><p>在<code>.vuepress\public\js</code>文件夹下创建<code>MouseClickEffect.js</code>文件，填入以下代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">var a_idx &#x3D; 0;</span><br><span class="line"></span><br><span class="line">function getRandom(max, min) &#123;</span><br><span class="line">    return Math.floor(Math.random() * (max - min + 1) + min);</span><br><span class="line">&#125;</span><br><span class="line">jQuery(document).ready(function ($) &#123;</span><br><span class="line">    $(&quot;body&quot;).click(function (e) &#123;</span><br><span class="line">        var a &#x3D; new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;, &quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;);</span><br><span class="line">        var $i &#x3D; $(&quot;&lt;span&#x2F;&gt;&quot;).text(a[a_idx]);</span><br><span class="line">        a_idx &#x3D; (a_idx + 1) % a.length;</span><br><span class="line">        var x &#x3D; e.pageX,</span><br><span class="line">            y &#x3D; e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            &quot;z-index&quot;: 999999999999999999999999999999999999999999999999999999999999999999999,</span><br><span class="line">            &quot;top&quot;: y - 20,</span><br><span class="line">            &quot;left&quot;: x,</span><br><span class="line">            &quot;position&quot;: &quot;absolute&quot;,</span><br><span class="line">            &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class="line">            &quot;color&quot;: &#96;rgb($&#123;getRandom(255,0)&#125;,$&#123;getRandom(255,0)&#125;,$&#123;getRandom(255,0)&#125;)&#96;,</span><br><span class="line">            &quot;user-select&quot;: &#39;none&#39;,</span><br><span class="line">            &quot;cursor&quot;: &#39;default&#39;</span><br><span class="line">        &#125;);</span><br><span class="line">        $(&quot;body&quot;).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">                &quot;top&quot;: y - 180,</span><br><span class="line">                &quot;opacity&quot;: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            1500,</span><br><span class="line">            function () &#123;</span><br><span class="line">                $i.remove();</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>然后在主题配置文件<code>config.js</code>下的<code>head</code>引入以上js，这里的jquery必须引入，鼠标点击代码才能生效</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">head: [</span><br><span class="line">  &#x2F;&#x2F; 网页标签栏图标</span><br><span class="line">  [&#39;link&#39;, &#123; rel: &#39;icon&#39;, href: &#39;&#x2F;vuepress&#x2F;favicon.ico&#39; &#125;],</span><br><span class="line">  &#x2F;&#x2F; 移动栏优化</span><br><span class="line">  [&#39;meta&#39;, &#123; name: &#39;viewport&#39;, content: &#39;width&#x3D;device-width,initial-scale&#x3D;1,user-scalable&#x3D;no&#39; &#125;],</span><br><span class="line">  &#x2F;&#x2F; 引入jquery</span><br><span class="line">  [&quot;script&quot;, &#123;</span><br><span class="line">    &quot;language&quot;: &quot;javascript&quot;,</span><br><span class="line">    &quot;type&quot;: &quot;text&#x2F;javascript&quot;,</span><br><span class="line">    &quot;src&quot;: &quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;3.5.1&#x2F;jquery.min.js&quot;</span><br><span class="line">  &#125;],</span><br><span class="line">  &#x2F;&#x2F; 引入鼠标点击脚本</span><br><span class="line">  [&quot;script&quot;, &#123;</span><br><span class="line">    &quot;language&quot;: &quot;javascript&quot;,</span><br><span class="line">    &quot;type&quot;: &quot;text&#x2F;javascript&quot;,</span><br><span class="line">    &quot;src&quot;: &quot;&#x2F;js&#x2F;MouseClickEffect.js&quot;</span><br><span class="line">  &#125;]</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="文章中引入样式和脚本"><a href="#文章中引入样式和脚本" class="headerlink" title="文章中引入样式和脚本"></a>文章中引入样式和脚本</h3><p>有时，你可以只想在当前页面应用一些 <code>JavaScript</code> 或者 <code>CSS</code>，在这种情况下，你可以直接在 <code>Markdown</code> 文件中使用原生的 或者 标签，它们将会从编译后的 HTML 文件中提取出来，并作为生成的 Vue 单文件组件的和标签。</p><p><strong>输入</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Html</span><br><span class="line">&lt;p class&#x3D;&quot;demo&quot; :class&#x3D;&quot;$style.example&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;style module&gt;</span><br><span class="line">.example &#123;</span><br><span class="line">  color: #41b883;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&#39;slot-key&#39;],</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    document.querySelector(&#96;.$&#123;this.$style.example&#125;&#96;)</span><br><span class="line">      .textContent &#x3D; &#39;这个块是被内联的脚本渲染的，样式也采用了内联样式。&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><p>这个块是被内联的脚本渲染的，样式也采用了内联样式。</p><h3 id="公告弹窗插件"><a href="#公告弹窗插件" class="headerlink" title="公告弹窗插件"></a>公告弹窗插件</h3><h4 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h4><p><a href="https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200715224550.png"><img src="https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200715224550.png" alt="img"></a></p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><a href="https://www.npmjs.com/package/@vuepress-yard/vuepress-plugin-window">https://www.npmjs.com/package/@vuepress-yard/vuepress-plugin-window</a></p><h2 id="修改源码"><a href="#修改源码" class="headerlink" title="修改源码"></a>修改源码</h2><p>不到<strong>迫不得已</strong>还是不要修改源码，我主要是因为使用分组的侧边栏后，如果嵌套的内容标题下，不加这个<strong>path</strong>参数(如果加了每次点侧边栏标题都会转跳，非常难受)，颜色就会偏淡，通过上文中<code>index.styl</code>无论如何也不能加深</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">children: [</span><br><span class="line">    &#123;</span><br><span class="line">        title: &#39;Matplotlib&#39;,   &#x2F;&#x2F; 必要的</span><br><span class="line">        &#x2F;&#x2F;path: &#39;&#39;,  &#x2F;&#x2F; 可选的, 标题的跳转链接，应为绝对路径且必须存在</span><br><span class="line">        collapsable: true, &#x2F;&#x2F; 可选的, 默认值是 true,</span><br><span class="line">        children: [</span><br><span class="line">            &#39;Python&#x2F;Matplotlib&#x2F;Matplotlib绘图指南&#39;,</span><br><span class="line">            &#39;webc&#x2F;01.Requests使用技巧&#39;,</span><br><span class="line">            &#39;webc&#x2F;02.数据存入Excel&#39;,</span><br><span class="line">        ]</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200711174018.png"><img src="https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200711174018.png" alt="img"></a></p><p>通过全局搜索，终于找到在源码文件<code>\xxx\blog\node_modules\vuepress-theme-reco\components\SidebarGroup.vue</code>中发现问题，罪魁祸首就是这个<code>opacity 0.5</code>，致此，将其改成1即可，虽然简单，但是对于有页面强迫症的我，确实是极大的舒适。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Stylus</span><br><span class="line">.sidebar-group</span><br><span class="line">  background var(--background-color)</span><br><span class="line">  .sidebar-group</span><br><span class="line">    padding-left 0.5em</span><br><span class="line">  &amp;:not(.collapsable)</span><br><span class="line">    .sidebar-heading:not(.clickable)</span><br><span class="line">      cursor auto</span><br><span class="line">      color var(--text-color)</span><br><span class="line">  &#x2F;&#x2F; refine styles of nested sidebar groups</span><br><span class="line">  &amp;.is-sub-group</span><br><span class="line">    padding-left 0</span><br><span class="line">    &amp; &gt; .sidebar-heading</span><br><span class="line">      font-size 0.95em</span><br><span class="line">      line-height 1.4</span><br><span class="line">      font-weight normal</span><br><span class="line">      padding-left 2rem</span><br><span class="line">      &amp;:not(.clickable)</span><br><span class="line">        opacity 0.5</span><br><span class="line">    &amp; &gt; .sidebar-group-items</span><br><span class="line">      padding-left 1rem</span><br><span class="line">      &amp; &gt; li &gt; .sidebar-link</span><br><span class="line">        font-size: 0.95em;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ在线|Hexo|字体|post|page|Note</title>
      <link href="2020/11/18/034/"/>
      <url>2020/11/18/034/</url>
      
        <content type="html"><![CDATA[<h1 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h1><p>修改 <code>themes\Butterfly\source\css\var.styl</code> 找到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Gams</span><br><span class="line">&#x2F;&#x2F; Global Variables</span><br><span class="line">$font-size &#x3D; 14px</span><br></pre></td></tr></table></figure><p>我修改成了 16px</p><h1 id="qq-在线"><a href="#qq-在线" class="headerlink" title="qq 在线"></a>qq 在线</h1><ol><li>打开<a href="https://shang.qq.com/v3/widget.html">此链接</a></li><li>然后点击立即免费开通服务就好了，进入到下面的界面可以复制其代码生成图片<br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200211140211.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200211140211.png" alt="img"></a></li><li>在 <code>butterfly.yml</code> 文件中找到</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Less</span><br><span class="line">social:</span><br><span class="line">  fa fa-github: https:&#x2F;&#x2F;github.com&#x2F;imgyh</span><br><span class="line">  fa fa-envelope: mailto:gyhnice@163.com</span><br><span class="line">  fa fa-qq: https:&#x2F;&#x2F;wpa.qq.com&#x2F;msgrd?v&#x3D;3&amp;uin&#x3D;1974355683&amp;site&#x3D;qq&amp;menu&#x3D;yes</span><br><span class="line">  fa fa-rss: &#x2F;atom.xml</span><br></pre></td></tr></table></figure><p>修改 <code>fa-qq</code> 这一项为你自己的链接就可以了</p><h1 id="POST-Front-matter-写法"><a href="#POST-Front-matter-写法" class="headerlink" title="POST Front_matter 写法"></a>POST Front_matter 写法</h1><h2 id="post-和-page-模板"><a href="#post-和-page-模板" class="headerlink" title="post 和 page 模板"></a>post 和 page 模板</h2><p>在博客根目录下的 <code>scaffolds</code> 文件夹中修改 <code>post.md</code> 和 <code>page.md</code></p><h3 id="page-md-模板"><a href="#page-md-模板" class="headerlink" title="page.md 模板"></a>page.md 模板</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">comments:true</span><br><span class="line">description:</span><br><span class="line">top_img: </span><br><span class="line">katex:true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="post-md-模板"><a href="#post-md-模板" class="headerlink" title="post.md 模板"></a>post.md 模板</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories: </span><br><span class="line">description: </span><br><span class="line">top_img: </span><br><span class="line">comments: true</span><br><span class="line">cover:</span><br><span class="line">toc: true</span><br><span class="line">toc_number: true</span><br><span class="line">copyright: true</span><br><span class="line">katex: false</span><br><span class="line">top: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="tags-写法"><a href="#tags-写法" class="headerlink" title="tags 写法"></a>tags 写法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Subunit</span><br><span class="line">tags:</span><br><span class="line">- tags1</span><br><span class="line">- tags2</span><br></pre></td></tr></table></figure><h3 id="categories-写法"><a href="#categories-写法" class="headerlink" title="categories 写法"></a>categories 写法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">单个分类，了解一下:</span><br><span class="line">categories:</span><br><span class="line">- Linux</span><br><span class="line">并列分类，了解一下：</span><br><span class="line">categories:</span><br><span class="line">- [Linux]</span><br><span class="line">- [Tools]</span><br><span class="line"></span><br><span class="line">并列+子分类([]中linux是父分类，hexo是子分类)，再了解一下：</span><br><span class="line">categories:</span><br><span class="line">- [Linux, Hexo]</span><br><span class="line">- [Tools, PHP]</span><br></pre></td></tr></table></figure><h1 id="解决代码块渲染问题"><a href="#解决代码块渲染问题" class="headerlink" title="解决代码块渲染问题"></a>解决代码块渲染问题</h1><p>在代码块中输入 html 代码，hexo 会把 html 代码渲染出来，而我只想看到代码是什么样子。<br>解决方法：只需要安装 <code>cheerio</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Angelscript</span><br><span class="line">sudo npm install cheerio@0.22.0 --save</span><br></pre></td></tr></table></figure><h1 id="代码框高亮，显示行号"><a href="#代码框高亮，显示行号" class="headerlink" title="代码框高亮，显示行号"></a>代码框高亮，显示行号</h1><p>在站点配置文件 <code>_config.yml</code> 中修改这一项</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: true</span><br><span class="line">  tab_replace: &#39;&#39;</span><br><span class="line">  wrap: true</span><br><span class="line">  hljs: false</span><br></pre></td></tr></table></figure><h1 id="coding-申请-ssl-认证失败"><a href="#coding-申请-ssl-认证失败" class="headerlink" title="coding 申请 ssl 认证失败"></a>coding 申请 ssl 认证失败</h1><p>Coding 的 SSL/TLS 证书每次申请只能使用 90 天</p><p>申请 SSL/TLS 证书时，要将指向 Coding 的线路类型设为为默认，然后把指向到 Github 的域名关掉，就可以成功申请了。</p><p>因为 Coding 申请 SSL/TLS 证书需要通过 Let’s Encrypt 的 HTTP 方式验证域名所有权。因为 Let’s Encrypt 是国外网络，如果不更改域名设置，验证域名所有权时不能正确指向到 Coding 而是指向到 Github，所以就会导致申请失败。</p><h1 id="引用同站点的文章"><a href="#引用同站点的文章" class="headerlink" title="引用同站点的文章"></a>引用同站点的文章</h1><p>在写文章的过程中，有时候需要引用站内的其他文章。可以通过内置的标签插件的语法 post_link 来实现引用。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Django</span><br><span class="line">&#123;% post_link 文章文件名（不要后缀） 文章标题（可选） %&#125;</span><br></pre></td></tr></table></figure><p>举例 引用 <a href="http://hello.md/">Hello.md</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Django</span><br><span class="line">&#123;% post_link Hello %&#125;</span><br><span class="line">或者</span><br><span class="line">&#123;% post_link Hello 你好 %&#125;</span><br></pre></td></tr></table></figure><h1 id="Note-Bootstrap-Callout"><a href="#Note-Bootstrap-Callout" class="headerlink" title="Note (Bootstrap Callout)"></a>Note (Bootstrap Callout)</h1><p>用法</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Routeros</span><br><span class="line">&#123;% note [class] [no-icon] %&#125; </span><br><span class="line">Any content (support inline tags too.io). </span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class] : default | primary | success | info | warning | danger. </span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br><span class="line">Routeros</span><br><span class="line">&#123;% note default %&#125; </span><br><span class="line">default提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125; </span><br><span class="line">primary提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125; </span><br><span class="line">success提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125; </span><br><span class="line">info提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125; </span><br><span class="line">warning提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125; </span><br><span class="line">danger提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github|重定向|301</title>
      <link href="2020/11/18/033/"/>
      <url>2020/11/18/033/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在使用不蒜子进行站点访问统计的时候，发现带 www 的域名和不带 www 的域名统计不一样。</p><p>带 www 和不带 www 的搜索引擎会认为是两个网站，会影响 seo，所以要进行统一。将 www 域名定向到顶级域名，或者把顶级域名定向到 www 域名</p><h1 id="github-重定向"><a href="#github-重定向" class="headerlink" title="github 重定向"></a>github 重定向</h1><ol><li>在仓库根目录下添加一个 CNAME 文件，没有后缀名，里面内容为你主打的域名，例如我主打顶级域名，就写 <code>gyhnice.top</code>;</li><li>域名解析那里，将 @和 www CNAME 记录的记录值同时设置为 username.github.io 即可完成 github pages301 重定向，就是那么简单。</li></ol><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200215103849.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200215103849.png" alt="img"></a></p><h1 id="coding-重定向"><a href="#coding-重定向" class="headerlink" title="coding 重定向"></a>coding 重定向</h1><p>添加 www 域名和顶级域名，设置一个首选域名，在另一个域名后面勾选<code>跳转至首选</code><br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200215103538.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200215103538.png" alt="img"></a></p><blockquote><p>如果 ssl 证书申请不了，先把 github 的域名解析先暂停</p></blockquote><p>在使用<a href="https://busuanzi.ibruce.info/">不蒜子</a>进行站点访问统计的时候，发现带www的域名和不带www的域名统计不一样。</p><p>不蒜子的作者不如大神提示说可以用301重定向。</p><p><img src="https://upload-images.jianshu.io/upload_images/1088390-5d3d2a146100529d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image</p><p>至于301重定向是什么，怎么做，自行百度。</p><p>我最终的解决方案是，在coding（我用的是coding托管的）的page设置里增加了两者设置搞定的。</p><p><img src="https://upload-images.jianshu.io/upload_images/1088390-0f8072daadd0495e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image</p><p>现在你访问 <a href="https://devzhao.com/">devzhao.com</a> 域名会自动转跳到 <a href="http://www.devzhao.com/">www.devzhao.com</a> 里面去了。</p><p>Github Pages301的具体实现</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> 域名 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Valine|标签|自定义</title>
      <link href="2020/11/18/032/"/>
      <url>2020/11/18/032/</url>
      
        <content type="html"><![CDATA[<h1 id="Valine-添加博主标签"><a href="#Valine-添加博主标签" class="headerlink" title="Valine 添加博主标签"></a>Valine 添加博主标签</h1><p>我搜遍全网对于 Valine 添加博主标签，大都是懒人博客里面的教程，但他的教程对 <code>Butterfly 3.0.1</code> 不支持，需要自己修改一下，才能使用。看了<a href="https://blog.hclonely.com/posts/409d3090/">懒人博客</a>，和他下面的评论后终于修改好了，故记录于此。</p><h2 id="修改-valine-pug-文件"><a href="#修改-valine-pug-文件" class="headerlink" title="修改 valine.pug 文件"></a>修改 valine.pug 文件</h2><p>修改 <code>Butterfly</code> 主题下的 <code>/layout/iuncludes/third-party/comments/valine.pug</code>，我修改的如下，可参照原来的版本对比修改</p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822191622.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822191622.png" alt="img"></a><br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822191709.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822191709.png" alt="img"></a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Typescript</span><br><span class="line">- let emojiMaps &#x3D; &#39;&quot;&quot;&#39;</span><br><span class="line">if site.data.valine</span><br><span class="line">  - emojiMaps &#x3D; JSON.stringify(site.data.valine)</span><br><span class="line"></span><br><span class="line">script(src&#x3D;url_for(theme.CDN.valine))</span><br><span class="line">script.</span><br><span class="line">  var requestSetting &#x3D; function (from,set) &#123;</span><br><span class="line">    var from &#x3D; from</span><br><span class="line">    var setting &#x3D; set.split(&#39;,&#39;).filter(function(item)&#123;</span><br><span class="line">    return from.indexOf(item) &gt; -1</span><br><span class="line">    &#125;);</span><br><span class="line">    setting &#x3D; setting.length &#x3D;&#x3D; 0 ? from :setting;</span><br><span class="line">    return setting</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  var guestInfo &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.guest_info &#125;&#39;)</span><br><span class="line">  var requiredFields &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.requiredFields &#125;&#39;)</span><br><span class="line">  let friends &#x3D; &#39;#&#123;theme.valine.friends&#125;&#39;.split(&#39;,&#39;)</span><br><span class="line">  let master &#x3D; &#39;#&#123;theme.valine.master&#125;&#39;.split(&#39;,&#39;)</span><br><span class="line">  let tagMeta &#x3D; &#39;#&#123;theme.valine.tagMeta || &quot;博主,小伙伴,访客&quot;&#125;&#39;.split(&#39;,&#39;)</span><br><span class="line"></span><br><span class="line">  function loadValine () &#123;</span><br><span class="line">    function initValine () &#123;</span><br><span class="line">      window.valine &#x3D; new Valine(&#123;</span><br><span class="line">        el: &#39;#vcomment&#39;,</span><br><span class="line">        appId: &#39;#&#123;theme.valine.appId&#125;&#39;,</span><br><span class="line">        appKey: &#39;#&#123;theme.valine.appKey&#125;&#39;,</span><br><span class="line">        placeholder: &#39;#&#123;theme.valine.placeholder&#125;&#39;,</span><br><span class="line">        avatar: &#39;#&#123;theme.valine.avatar&#125;&#39;,</span><br><span class="line">        meta: &#39;#&#123;theme.valine.guest_info &#125;&#39;.split(&#39;,&#39;),</span><br><span class="line">        pageSize: &#39;#&#123;theme.valine.pageSize&#125;&#39;,</span><br><span class="line">        lang: &#39;#&#123;theme.valine.lang&#125;&#39;,</span><br><span class="line">        recordIP: #&#123;theme.valine.recordIP&#125;,</span><br><span class="line">        serverURLs: &#39;#&#123;theme.valine.serverURLs&#125;&#39;,</span><br><span class="line">        emojiCDN: &#39;#&#123;theme.valine.emojiCDN&#125;&#39;,</span><br><span class="line">        emojiMaps: !&#123;emojiMaps&#125;,</span><br><span class="line">        enableQQ: #&#123;theme.valine.enableQQ&#125;,</span><br><span class="line">        path: window.location.pathname,</span><br><span class="line">        master: master,</span><br><span class="line">        friends: friends,</span><br><span class="line">        tagMeta: tagMeta,</span><br><span class="line">        metaPlaceholder: !&#123;JSON.stringify(theme.valine.metaPlaceholder || &#123;&#125;)&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      if (&#39;#&#123;theme.valine.requiredFields&#125;&#39;) &#123; valine.config.requiredFields&#x3D; &#39;#&#123;theme.valine.requiredFields&#125;&#39;.split(&#39;,&#39;) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (typeof Valine &#x3D;&#x3D;&#x3D; &#39;function&#39;) initValine() </span><br><span class="line">    else $.getScript(&#39;!&#123;url_for(theme.CDN.valine)&#125;&#39;, initValine)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if (&#39;!&#123;theme.comments.use[0]&#125;&#39; &#x3D;&#x3D;&#x3D; &#39;Valine&#39; || !!&#123;theme.comments.lazyload&#125;) &#123;</span><br><span class="line">    if (!&#123;theme.comments.lazyload&#125;) loadComment(document.querySelector(&#39;#vcomment&#39;),loadValine)</span><br><span class="line">    else setTimeout(() &#x3D;&gt; loadValine(), 0)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    function loadOtherComment () &#123;</span><br><span class="line">      loadValine()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="修改-butterfly-yml-文件"><a href="#修改-butterfly-yml-文件" class="headerlink" title="修改 butterfly.yml 文件"></a>修改 butterfly.yml 文件</h2><p>添加最后的 <code>master</code> <code>friends</code> <code>metaPlaceholder</code> <code>tagMeta</code> 这几项，<code>master</code> <code>friends</code> 是博主和小伙伴的邮箱经过 md5 加密后的值。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">valine:</span><br><span class="line">  appId:  # leancloud application app id</span><br><span class="line">  appKey:# leancloud application app key</span><br><span class="line">  pageSize: 20 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: zh-CN # i18n: zh-CN&#x2F;zh-TW&#x2F;en&#x2F;ja</span><br><span class="line">  placeholder: 留下邮箱可以快速收到回复!\n昵称和邮箱必填\n昵称栏输入QQ会使用QQ的昵称和头像 # valine comment input placeholder (like: Please leave your footprints)</span><br><span class="line">  guest_info: nick,mail,link # valine comment header info (nick&#x2F;mail&#x2F;link)</span><br><span class="line">  recordIP:  # Record reviewer IP</span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: # valine background</span><br><span class="line">  emojiCDN:  # emoji CDN</span><br><span class="line">  enableQQ: true # enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><br><span class="line">  requiredFields: nick,mail # required fields (nick&#x2F;mail)</span><br><span class="line">--------------------下面是修改的，如果要复制，请复制不要复制这一行-------------------------</span><br><span class="line">  master: # md5加密后的博主邮箱</span><br><span class="line">      - f644d72a2de2163cbd232954d2f2789a</span><br><span class="line">  friends: # md5加密后的小伙伴邮箱</span><br><span class="line">    - 5c43aebcd3c384d461188a1c26db5ab7</span><br><span class="line">  metaPlaceholder: # 输入框的背景文字</span><br><span class="line">    nick: 昵称&#x2F;QQ号(必填)</span><br><span class="line">    mail: 邮箱(必填)</span><br><span class="line">    link: 网址(https:&#x2F;&#x2F;)</span><br><span class="line">  tagMeta: &#39;博主,小伙伴,访客&#39; # 标签要显示的文字,默认&#39;博主,小伙伴,访客&#39;</span><br></pre></td></tr></table></figure><h2 id="修改-valine-的-CDN"><a href="#修改-valine-的-CDN" class="headerlink" title="修改 valine 的 CDN"></a>修改 valine 的 CDN</h2><p>将 Valine 的 CDN 修改成如下所示</p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/HexoStatic@latest/js/Valine.min.js">https://cdn.jsdelivr.net/gh/imgyh/HexoStatic@latest/js/Valine.min.js</a></p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822185921.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822185921.png" alt="img"></a></p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEO|收录优化</title>
      <link href="2020/11/18/031/"/>
      <url>2020/11/18/031/</url>
      
        <content type="html"><![CDATA[<h1 id="安装-RSS-插件生成-atom-xml"><a href="#安装-RSS-插件生成-atom-xml" class="headerlink" title="安装 RSS 插件生成 atom.xml"></a>安装 RSS 插件生成 atom.xml</h1><p>进入本地 hexo 目录，输入以下命令:<br><code>sudo npm install hexo-generator-feed</code><br>在博客目录的_config.yml 中添加如下代码:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">    type: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    limit: 20</span><br></pre></td></tr></table></figure><p>因为我使用的是 butterfly 主题，已经集成了 rss 功能，所以设置到这一步就可以了。如果你的主题里面没有 rss 相关设置，也可以添加如下代码：<br><code>rss： /atom.xml</code></p><h1 id="百度-google-推送"><a href="#百度-google-推送" class="headerlink" title="百度 google 推送"></a>百度 google 推送</h1><h2 id="让百度收录"><a href="#让百度收录" class="headerlink" title="让百度收录"></a>让百度收录</h2><p>查看百度是否收录可以在百度搜索引擎中输入 <code>site:你的域名</code>查看</p><h3 id="验证网站所有权"><a href="#验证网站所有权" class="headerlink" title="验证网站所有权"></a>验证网站所有权</h3><p>登录<a href="https://ziyuan.baidu.com/site/index#/">百度站长平台</a> , 只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击添加网站然后输入你的站点地址，建议输入的网站为 www 开头的，不要输入 github.io 的，因为 github 是不允许百度的 spider 爬取 github 上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名</p><p>在选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：文件验证。html 标签验证和 cname 解析验证，使用哪一种方式都可以，都是比较简单的，但是一定要注意，使用文件验证文件存放的位置需要放在 source 文件夹下，如果是 html 文件那么 hexo 就会将其编译，所以必须要加上的 layout:false，这样就不会被 hexo 编译。（如果验证文件是 txt 格式的就不需要），其他两种方式也是很简单的，我个人推荐文件验证和 cname 验证，cname 验证最为简单，只需加一条解析就好～</p><h3 id="生成网站地图"><a href="#生成网站地图" class="headerlink" title="生成网站地图"></a>生成网站地图</h3><p>我们需要安装插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sql</span><br><span class="line">npm install hexo-generator-sitemap --save     </span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>然后修改博客配置文件<br>在根目录配置文件中修改 url 为你的站点地址</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line">url: https:&#x2F;&#x2F;www.gyh.im</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: posts&#x2F;:abbrlink.html  # :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  #support crc16(default) and crc32</span><br><span class="line">  rep: hex    #support dec(default) and hex</span><br></pre></td></tr></table></figure><p>执行完之后就会在网站根目录生成 sitemap.xml 文件和 baidusitemap.xml 文件</p><blockquote><p>然后我们就可以将我们生成的 sitemap 文件提交给百度，还是在百度站长平台，找到链接提交，这里我们可以看到有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和 sitemap</p></blockquote><blockquote><p>通常主动推送 &gt; 自动推送 &gt; sitemap</p></blockquote><h3 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h3><p>我们这里介绍主动推送<br>安装插件 <code>sudo npm install hexo-baidu-url-submit --save</code><br>在根目录_config.yml 中添加如下代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">baidu_url_submit:</span><br><span class="line">  count: 100 # 提交最新的一个链接</span><br><span class="line">  host: gyh.im # 在百度站长平台中注册的域名</span><br><span class="line">  token:  # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span><br><span class="line">  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里</span><br></pre></td></tr></table></figure><p>加入新的 deploy，将原来的 deploy 改成下面这样的格式，有两个 type 时要在前面添加 <code>-</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Less</span><br><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: </span><br><span class="line">        github: </span><br><span class="line">        coding:</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line">- type: baidu_url_submitter</span><br></pre></td></tr></table></figure><p>设置主动推送，这个一般在主题配置文件夹下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">#百度推送</span><br><span class="line">baidu_push:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>这样执行 hexo deploy 的时候，新的链接就会被推送了<br>推送成功时，会有如下终端提示，各种不同的推送反馈字段说明在这里查看，一般来说，推送失败都是地址不相符造成的，我们只需对比 baidu_url_submit 在 public 中生成的 baidu_urls.txt 的地址<br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200208171135.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200208171135.png" alt="img"></a></p><h3 id="sitemap-提交"><a href="#sitemap-提交" class="headerlink" title="sitemap 提交"></a>sitemap 提交</h3><p>将我们上一步生成的 sitemap 文件提交到百度就可以了～</p><h2 id="google-收录"><a href="#google-收录" class="headerlink" title="google 收录"></a>google 收录</h2><p>登录 <a href="https://www.google.com/webmasters">google 站长平台</a> 点添加属性，按要求添加即可</p><p>添加 sitemap : 进入 Google Search Console - 抓取 - 站点地图，点击「添加 / 测试站点地图」, 输入你的博客网址。若无报错则站点地图提交成功<br>提交 robots.txt:</p><blockquote><p>robots.txt 是一种存放于网站根目录下的 ASCII 编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。robots.txt 放在博客目录下的 source 文件夹中，博客生成后在站点目录 /public/ 下。<br>具体可参考以下配置，你也可以</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Clean</span><br><span class="line"># hexo robots.txt</span><br><span class="line">User-agent: *</span><br><span class="line">Allow: &#x2F;</span><br><span class="line"></span><br><span class="line"># 可选</span><br><span class="line">###########################</span><br><span class="line">Allow: &#x2F;archives&#x2F;</span><br><span class="line">Allow: &#x2F;categories&#x2F;</span><br><span class="line">Allow: &#x2F;about&#x2F;</span><br><span class="line"></span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;js&#x2F;</span><br><span class="line">Disallow: &#x2F;css&#x2F;</span><br><span class="line">Disallow: &#x2F;fonts&#x2F;</span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;fancybox&#x2F;</span><br><span class="line">###########################</span><br><span class="line"></span><br><span class="line">Sitemap: https:&#x2F;&#x2F;gyh.im&#x2F;sitemap.xml</span><br><span class="line">Sitemap: https:&#x2F;&#x2F;gyh.im&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><h3 id="让百度收录你的站点"><a href="#让百度收录你的站点" class="headerlink" title="让百度收录你的站点"></a>让百度收录你的站点</h3><p>我们直接在百度中搜索<code>site:你的域名</code>就可以查看百度是否已经收录你的网站,如果没有收录的话,你就要去去登录<a href="https://link.jianshu.com/?t=http://zhanzhang.baidu.com">百度站长平台</a>在站点管理中点击添加网站,然后输入你的站点地址, 注意,这里需要输入我们自己购买的域名,不能使用<code>xxx.github.io</code>之类域名.</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-962406bedcd0329e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/539/format/webp" alt="img"></p><p>步骤如下:</p><ol><li><p>输入网站: 添加域名时建议是带上<code>www</code>的前缀</p></li><li><p>站点属性: 选择自己网站类型</p></li><li><p>验证网站: 验证网站的所有权,这里主要有以下三种</p><ul><li><p>文件验证: 文件验证文件存放的位置需要放在source文件夹下,txt 格式的不会被 hexo 预编译,其他格式要在头部加上<code>layout: false</code></p></li><li><p>HTML 标签验证: 将他给你的代码添加到网站首页的 head 标签内</p></li><li><p>CNAME 验证: </p><p>推荐使用</p><p>,将对应的 CNAME 文件放在你的 source 文件夹中即可,只要在其中写上你的域名地址就行;除此之外还会要求你到自己的域名提供商(我的是万网)上添加 CNAME 的解析(会面在国内外分流这一块会与更详细的解析说明);</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-79f088531d217de5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/422/format/webp" alt="img"></p></li></ul></li></ol><h3 id="生成网站地图-—-sitemap"><a href="#生成网站地图-—-sitemap" class="headerlink" title="生成网站地图 — sitemap"></a>生成网站地图 — sitemap</h3><p>这里需要我们安装下面两个插件,先执行下面命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo-generator-sitemap hexo-generator-baidu-sitemap -S</span><br></pre></td></tr></table></figure><p>再在你的站点配置文件中修改 URL 为你的站点地址</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-2610fcb278cad05a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/269/format/webp" alt="img"></p><p>当你在 <code>hexo g</code> 时,会在<code>public</code>文件夹中生成<code>sitemap.xml</code> 和<code>baidusitemap.xml</code> 两个文件,如果你已经提前将你的 hexo 部署到网上,这是可以直接打开<code>http://yoururl/sitemap.xml</code>和<code>http://yoururl/baidusitemap.xml</code>来查看.(这两者的区别在于 <code>baidusitemap.xml</code> 是百度搜索引擎的专用文件,另一个是通用).</p><h3 id="向百度提交链接"><a href="#向百度提交链接" class="headerlink" title="向百度提交链接"></a>向百度提交链接</h3><blockquote><p>如何选择链接提交方式</p><p>1、主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</p><p>2、自动推送：最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。</p><p>3、sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。</p><p>4、手动提交：一次性提交链接给百度，可以使用此种方式。</p></blockquote><p>这里我推荐大家<strong>使用主动推送</strong>,当你主动推送时,可以缩短百度爬虫发现您站点新链接的时间,使新发布的页面可以在第一时间被百度收录;对于网站的最新原创内容，使用主动推送功能可以快速通知到百度，使内容可以在转发之前被百度发现.</p><h4 id="使用主动推送"><a href="#使用主动推送" class="headerlink" title="使用主动推送"></a>使用主动推送</h4><ul><li>需要先安装插件<code>npm i hexo-baidu-url-submit -S</code></li><li>然后再在站点配置文件中按如下方式新增字段</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">baidu_url_submit:</span><br><span class="line">  count: 10 <span class="comment"># 提交最新的链接数</span></span><br><span class="line">  host: crowncj.com <span class="comment"># 在百度站长平台中注册的域名,虽然官方推荐要带有 www, 但可以不带.</span></span><br><span class="line">  token:  XXXXX <span class="comment"># 你的秘钥,每个人都不一样,获取方法在下面</span></span><br><span class="line">  path: baidu_urls.txt <span class="comment"># 文本文档的地址,新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure><ul><li>然后加入新的 deploy</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> - <span class="built_in">type</span>:baidu_url_submitter</span><br></pre></td></tr></table></figure><p><strong>注意</strong>,这里多个 type 的写法应该这么写,前面那个 type 是我推送到 <code>Gitub</code> 与 <code>Coding</code> 的<code>page</code>页面的配置,后面再讲这个.</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-032308d2da50bab3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/649/format/webp" alt="img"></p><p>密钥的获取位置在<code>网页抓取</code>中的<code>链接提交</code>这一块,如下所示:</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-c4c5e3a72ff91f73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1077/format/webp" alt="img"></p><ul><li>最后当你执行<code>hexo d</code>时新的连接就会被推送上去.</li><li>推送成功时,会有如下终端提示,各种不同的推送反馈字段说明在<a href="https://link.jianshu.com/?t=http://zhanzhang.baidu.com/college/courseinfo?id=267&page=2#h2_article_title8">这里</a>查看,一般来说,推送失败都是地址不相符造成的,我们只需对比<code>baidu_url_submit</code>在<code>public</code>中生成的<code>baidu_urls.txt</code>的地址,与自己填写在<code>host</code>字段中是否一样即可,这里需要注意的是,多加<code>www</code>会导致上传失败(血的教训…)</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4024009-d15589544920a209.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/288/format/webp" alt="img"></p><h3 id="让-Google-收录你的网站"><a href="#让-Google-收录你的网站" class="headerlink" title="让 Google 收录你的网站"></a>让 Google 收录你的网站</h3><ul><li><p>登录 <a href="https://link.jianshu.com/?t=https://www.google.com/webmasters/#?modal_active=none">Google 网络站长</a>,点击<code>添加属性</code>按要求添加你的网站</p></li><li><p>验证你的网站所有权,我推荐使用 HTML 文件上传的方式,将他给你的html 文件放入 </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sources</span><br></pre></td></tr></table></figure><p>  文件夹下,但 html 文件默认会被 hexo 预编译,所以这里,我们要手动设置让 hexo 不要编译该文件,在文件开始添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">layout:false</span><br></pre></td></tr></table></figure><p>即可.</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-c6297b450d9644a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/739/format/webp" alt="img"></p></li><li><p>添加 sitemap : 进入 Google Search Console - 抓取 - 站点地图,点击「添加/测试站点地图」,输入你的博客网址. 若无报错则站点地图提交成功</p></li><li><p>提交 robots.txt:</p></li></ul><blockquote><p>robots.txt 是一种存放于网站根目录下的 ASCII 编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。robots.txt 放在博客目录下的 source 文件夹中，博客生成后在站点目录 /public/ 下。</p></blockquote><p>我的 robots.txt 文件内容如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: &#x2F;</span><br><span class="line">Allow: &#x2F;archives&#x2F;</span><br><span class="line">Allow: &#x2F;categories&#x2F;</span><br><span class="line">Allow: &#x2F;about&#x2F;</span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;js&#x2F;</span><br><span class="line">Disallow: &#x2F;css&#x2F;</span><br><span class="line">Disallow: &#x2F;fonts&#x2F;</span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;fancybox&#x2F;</span><br></pre></td></tr></table></figure><p>robots.txt 文件更新至网站后可进入 Google Search Console - 抓取 - robots.txt 测试工具进行测试。</p><blockquote><p>这里部分参考自<a href="https://link.jianshu.com/?t=https://fedoryx.github.io/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%9C%E7%B4%A2-SEO-%E4%BC%98%E5%8C%96-%E8%B0%B7%E6%AD%8C%E7%AF%87/">Hexo 博客搜索 SEO 优化 – 谷歌篇</a></p></blockquote><h3 id="优化你的-URL"><a href="#优化你的-URL" class="headerlink" title="优化你的 URL"></a>优化你的 URL</h3><blockquote><p>这段话参考自<a href="https://link.jianshu.com/?t=https://juejin.im/post/590b451a0ce46300588c43a0">上面那个小姐姐的文章</a>,写的很好,这里我直接拿来用下</p><p>seo搜索引擎优化认为，网站的最佳结构是用户<strong>从首页点击三次就可以到达任何一个页面</strong>，但是我们使用hexo编译的站点打开文章的url是：sitename/year/mounth/day/title四层的结构，这样的url结构很不利于seo，爬虫就会经常爬不到我们的文章，所以我们可以将url直接改成sitename/title的形式，并且title最好是用英文，在根目录的配置文件下修改permalink如下：</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/4024009-2610fcb278cad05a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/269/format/webp" alt="img"></p><h2 id="将你的网站同时托管到-Github-和-Coding-上-国内外分流"><a href="#将你的网站同时托管到-Github-和-Coding-上-国内外分流" class="headerlink" title="将你的网站同时托管到 Github 和 Coding 上,国内外分流"></a>将你的网站同时托管到 Github 和 Coding 上,国内外分流</h2><p>Coding 类似于中国的 Github 一样,也提供了 Pages 服务,但对我们而言,跟 Github 不同的地方在于免费用户能拥有五个私人仓库,这个可以用来部署自己的一些私人代码,而且配合 Github 可以做到国内IP 访问 Coding 的 Pages 页面,国外访问 Github 上面的 Pages 页面.大致配置过程如下:</p><ul><li><p>在 Coding 上创建仓库: 这里注意要去创建一个公有的仓库,私有仓库是没有 pages 服务的.</p></li><li><p>将你的公钥传上去.这里网上关于自己公钥的相关教程很多,我就不多叙述了.</p></li><li><p>修改 hexo 的站点配置文件中的 deploy 选项,配置你的 Github 与 Coding 仓库,需要注意的是其中 Github 的仓库名</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxx.github.io</span><br></pre></td></tr></table></figure><p>必须跟你的 Github 名称一样:</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-032308d2da50bab3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/649/format/webp" alt="img"></p></li></ul><blockquote><p>每次上传的时候都需要输入你的账号密码之类的信息,可以直接将你账号密码写在上传地址中,这样就不用每次更新都输入你的账号密码了</p></blockquote><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">例如你的账号为<span class="symbol">:crown3</span>,密码为 BBB;</span><br><span class="line">那你的repo填写为下面这样即可</span><br><span class="line"><span class="symbol">github:</span> <span class="symbol">https:</span>/<span class="regexp">/crown3:BBB@github.com/crown</span>3/crown3.github.io.git</span><br><span class="line"><span class="symbol">coding:</span> <span class="symbol">https:</span>/<span class="regexp">/crown3:BBB@git.coding.net/crown</span>3/仓库名.git</span><br></pre></td></tr></table></figure><ul><li><p>设置 coding 的 pages 服务:在pages页面将部署来源选择为master分支，然后将自定义域名填写自己购买的域名就可以了</p></li><li><p>设置域名解析: 在你的域名提供商那里修改你的域名解析就行,例如我的是万网,按照下图所示,添加这五条解析即可做到国内外访问分流.</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-759a8d8b950329ed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p></li></ul><h2 id="将自己的代码托管到私有仓库"><a href="#将自己的代码托管到私有仓库" class="headerlink" title="将自己的代码托管到私有仓库"></a>将自己的代码托管到私有仓库</h2><p>当我们将自己的代码托管到<strong>私有仓库</strong>后,就可以在任何一台电脑上将你的 hexo 部署代码下载下来进行编辑,而且可以将你的一些个人密钥什么的直接推送到你的代码仓库去,这样更便利于我们的管理维护.</p><p>在上文我已经说过了,国内 Coding 的免费用户可以创建五个私有仓库,这是可以直接拿来使用,但是如果你对国内的私有仓库安全性存有怀疑,也可以去使用国外专门做私有仓库托管的<a href="https://link.jianshu.com/?t=https://bitbucket.org/">bitbucket</a>,在这里私有仓库是可以免费使用的.具体上传之类的使用方法我就不再细述了,都是基于 git 做的代码管理,使用方法都大同小异.</p><h2 id="使用-Gulp-压缩你的代码"><a href="#使用-Gulp-压缩你的代码" class="headerlink" title="使用 Gulp 压缩你的代码"></a>使用 Gulp 压缩你的代码</h2><p>代码压缩可以明显减小我们的文件大小,加载速度,这里我会直接提供我使用的脚本,大家可以直接拿来使用,有需要了解相关知识的可以去<code>gulp</code>官网去做相关了解.</p><ul><li>先安装<code>Gulp</code>以及我们需要使用的一系列插件:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i gulp gulp-clean-css gulp-htmlclean gulp-htmlmin gulp-imagemin gulp-uglify -S</span><br></pre></td></tr></table></figure><ul><li>接着创建<code>gulpfile.js</code>: 在你的博客根目录(跟你站点配置文件同一层)下创建<code>gulpfile.js</code>这个文件,然后在里面填入如下脚本即可,里面有相关注释,感兴趣的可以去了解一下.</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">&#x27;gulp-clean-css&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlmin&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-imagemin&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">&#x27;del&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> runSequence = <span class="built_in">require</span>(<span class="string">&#x27;run-sequence&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">&#x27;hexo&#x27;</span>);</span><br><span class="line"><span class="comment">// 清除public文件夹</span></span><br><span class="line">gulp.task(<span class="string">&#x27;clean&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> del([<span class="string">&#x27;public/**/*&#x27;</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 利用Hexo API 来生成博客内容， 效果和在命令行运行： hexo g 一样</span></span><br><span class="line"><span class="comment">// generate html with &#x27;hexo generate&#x27;</span></span><br><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class="line">gulp.task(<span class="string">&#x27;generate&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    hexo.init().then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo.call(<span class="string">&#x27;generate&#x27;</span>, &#123;</span><br><span class="line">            watch: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo.exit();</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cb()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        hexo.exit(err);</span><br><span class="line">        <span class="keyword">return</span> cb(err);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 压缩public目录下的所有css</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-css&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/**/*.css&#x27;</span>)</span><br><span class="line">        .pipe(minifycss(&#123;</span><br><span class="line">            compatibility: <span class="string">&#x27;ie8&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩public目录下的所有html</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-html&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyURLs: <span class="literal">true</span>,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩public目录下的所有js</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-js&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/**/*.js&#x27;</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩public目录下的所有img： 这个采用默认配置</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-img&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/images/**/*.*&#x27;</span>)</span><br><span class="line">        .pipe(imagemin())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public/images&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 同上，压缩图片，这里采用了： 最大化压缩效果。</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-img-aggressive&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/images/**/*.*&#x27;</span>)</span><br><span class="line">        .pipe(imagemin(</span><br><span class="line">        [imagemin.gifsicle(&#123;<span class="string">&#x27;optimizationLevel&#x27;</span>: <span class="number">3</span>&#125;), </span><br><span class="line">        imagemin.jpegtran(&#123;<span class="string">&#x27;progressive&#x27;</span>: <span class="literal">true</span>&#125;), </span><br><span class="line">        imagemin.optipng(&#123;<span class="string">&#x27;optimizationLevel&#x27;</span>: <span class="number">7</span>&#125;), </span><br><span class="line">        imagemin.svgo()],</span><br><span class="line">        &#123;<span class="string">&#x27;verbose&#x27;</span>: <span class="literal">true</span>&#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public/images&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 用run-sequence并发执行，同时处理html，css，js，img</span></span><br><span class="line">gulp.task(<span class="string">&#x27;compress&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    runSequence([<span class="string">&#x27;minify-html&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-js&#x27;</span>, <span class="string">&#x27;minify-img-aggressive&#x27;</span>], cb);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆</span></span><br><span class="line">gulp.task(<span class="string">&#x27;build&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    runSequence(<span class="string">&#x27;clean&#x27;</span>, <span class="string">&#x27;generate&#x27;</span>, <span class="string">&#x27;compress&#x27;</span>, cb)</span><br><span class="line">&#125;);</span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>, [<span class="string">&#x27;build&#x27;</span>])</span><br></pre></td></tr></table></figure><ul><li>执行<code>gulp</code>: 在命令行中输入<code>gulp build</code>即可</li></ul><blockquote><p>这里要说明的是,这里利用Hexo API 来生成博客内容,效果和在命令行运行： <code>hexo g</code> 一样,所以当我们在执行<code>gulp build</code>时,会根据我们的相关博文来直接生成相应的<code>public</code>文件夹中的内容,并直接进行压缩,接下来我们运行<code>hexo d</code>上传上去的代码会是已经进行相应压缩了的.</p></blockquote><h2 id="使用七牛图床来处理我们的图片"><a href="#使用七牛图床来处理我们的图片" class="headerlink" title="使用七牛图床来处理我们的图片"></a>使用七牛图床来处理我们的图片</h2><p>在我的另一篇博文 — <a href="https://link.jianshu.com/?t=http://crowncj.com/20170617.html">网站配图,图片压缩以及图床选择小结</a>中已经简单介绍过七牛的相关使用了,这里我想像各位展示下我现在使用七牛图床的最新姿势(虽然跟简书什么的直接拖拽粘贴就可直接使用还是有点麻烦,但这里我们可以自己控制我们上传图片的大小质量等,而且操作也不麻烦到哪里去):</p><p>选中一张图片 =&gt; 用智图进行相应压缩处理 =&gt; 使用 iPic 快捷键一键上传到七牛云(cmd + u) =&gt; 在文章中直接粘贴已经复制到剪贴板的图片地址</p><p><img src="https://upload-images.jianshu.io/upload_images/4024009-4989a4cee867cede.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/480/format/webp" alt="img"></p><blockquote><p>选择智图来压缩是因为<code>iPic</code>这个软件自带的上传压缩效果没有智图的好,如果对这个配置结果比较感兴趣的童鞋可以去看看我另一篇博文!!!</p></blockquote><h2 id="如何操作该博客"><a href="#如何操作该博客" class="headerlink" title="如何操作该博客"></a>如何操作该博客</h2><p>相信应该有部分童鞋看完前面所有的配置估计已经被绕的云里雾里的,但不要担心不要害怕,当你配置好后接下来的使用简直方便的一批.这里我简单的说下按照我这个流程配置完后,日常的使用操作吧.</p><h3 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h3><ol><li><del><code>hexo g</code>: 生成当前博客  重新编写后的 gulp 任务可以直接生成完成<code>public</code>文件夹中的生成以及压缩.</del></li><li><del><code>gulp build</code>: 生成文件后再压缩已生成的代码,图片等</del></li><li><del><code>hexo d</code>: 将最终代码推送上去</del></li></ol><hr><p><strong>2017-08-25更新部分</strong></p><blockquote><p>再把自己私事处理的差不多的情况后，重新开始维护自己的博客，但是越使用越发现一个很严重的问题，就是每次不管是发布文章还是更新文章，我都要去做好多没必要的重复操作，<code>gulp build</code> =&gt; <code>hexo d</code> =&gt; <code>git add .</code> =&gt; <code>git commit -m &#39;xxx&#39;</code> =&gt; <code>git push</code> 等一系列操作完成后才能完成一次更新，还有每次本地预览我的博客更改时居然还要我去手动去打开浏览器 …… What �fuck！所以我就去开始找各种能帮我偷懒的的方法，最后还真的被我找到最合适我当前情况的方法，具体的过程这里就不详说了，大家感兴趣的可以去我另外两篇文章中查看 ———— �<a href="">如何使用Shell命令来节省各种常规操作</a> 和 <a href="">NPM的一些“骚”操作</a>，这里我只将我的更改地方以及之后的操作方法在这里简单说下。�</p></blockquote><ul><li><code>本地预览</code>：<code>npm start</code>�即可，自动打开浏览器冰进入博客的debug模式</li><li><code>发布更新</code>：<code>npm run build</code>即可，上诉的所有关于压缩打包以及上传到私有库git中所有操作都会在这里完成。</li></ul><blockquote><p>修改地方</p></blockquote><ol><li>安装这个插件</li><li>按这篇文章�————<a href="">如何使用Shell命令来节省各种常规操作</a>，中的步骤在你的站点配置目录下创建你的脚本并赋予权限。</li><li>在你的<code>package.json</code>中添加如下命令�</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;./deploy.sh&quot;</span>,</span><br><span class="line">    <span class="string">&quot;start&quot;</span>: <span class="string">&quot;opener http://localhost:4000 &amp;&amp; hexo server --debug&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><hr><h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><h4 id="使用命令行"><a href="#使用命令行" class="headerlink" title="使用命令行"></a>使用命令行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new &lt;你的文章名&gt;</span><br></pre></td></tr></table></figure><h4 id="手动创建"><a href="#手动创建" class="headerlink" title="手动创建"></a>手动创建</h4><p>在 hexo 主目录下 <code>source -&gt; _posts</code> 新建以 <code>.md</code> 为后缀的文件。</p><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><blockquote><p>Front-matter 是文件最上方以 <code>---</code> 分隔的一块区域,主要用于指定个别文件的变量来设置我们的相关文章等页面,具体位置如下</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/4024009-ffef8674dd21b621.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/632/format/webp" alt="img"></p><p><a href="https://link.jianshu.com/?t=https://hexo.io/zh-cn/docs/front-matter.html">Front-matter - 官方介绍</a></p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left">post</td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章网址</td><td align="left"></td></tr><tr><td align="left"><code>thumbnail</code></td><td align="left">缩略图地址</td><td align="left"></td></tr><tr><td align="left"><code>toc</code></td><td align="left">显示 TOC 按钮</td><td align="left">true</td></tr><tr><td align="left"><code>comment</code></td><td align="left">显示评论</td><td align="left">true</td></tr><tr><td align="left"><code>notag</code></td><td align="left">不生成标签按钮</td><td align="left">false</td></tr><tr><td align="left"><code>top</code></td><td align="left">置顶</td><td align="left">false</td></tr><tr><td align="left"><code>mathJax</code></td><td align="left">启用 Mathjax</td><td align="left">false</td></tr><tr><td align="left"><strong>description</strong></td><td align="left"><strong>每篇文章在搜索结果中显示的链接描述</strong></td><td align="left">站点配置文件中的 description</td></tr></tbody></table><h4 id="缩略图功能"><a href="#缩略图功能" class="headerlink" title="缩略图功能"></a>缩略图功能</h4><p>在 Material 主题中，每个 Scheme 都有缩略图功能。<br> 只需要在 <code>Front-matter</code> 中添加参数 <code>thumbnail:</code>，然后填入缩略图地址即可。</p><h3 id="修改你的文章模板"><a href="#修改你的文章模板" class="headerlink" title="修改你的文章模板"></a>修改你的文章模板</h3><p>当你每次使用<code>hexo new 你的文章名</code>时,默认生成的模板是这个样子的</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: XXXX</span><br><span class="line">tag: XXXX</span><br><span class="line">date: XXXX</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>但这种这种文章模板没有一大堆描述属性,例如<code>description</code>,<code>thumbnail</code>等,明显不能满足我们的日常需求,所以我们这是一般会去修改我们的默认模板来满足我们的需求.这是我们只需修改<code>/scaffolds/</code>下相应的文件即可.</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">post.md  ==&gt;  对应hexo <span class="keyword">new</span> 生成的md模板</span><br><span class="line">page.md  ==&gt;  对应hexo <span class="keyword">new</span> page生成的categories模板</span><br></pre></td></tr></table></figure><p>例如我修改的就是<code>/scaffolds/post.md</code>:</p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125; <span class="comment">//文章标题</span></span><br><span class="line">tags: [] <span class="comment">//文章的标签</span></span><br><span class="line">categories: 文章的分类</span><br><span class="line">description: 文章的搜索结果描述</span><br><span class="line">thumbnail: <span class="string">&#x27;文章缩略图位置&#x27;</span></span><br><span class="line">date: &#123;&#123; date &#125;&#125; <span class="comment">//时间</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">这里还可以添加一些文章公共的开头等文字</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> SEO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitlab|部署|HEXO</title>
      <link href="2020/11/18/030/"/>
      <url>2020/11/18/030/</url>
      
        <content type="html"><![CDATA[<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><ol><li><p>安装好<code>nodejs</code>和<code>hexo</code></p></li><li><p>在gitlab上新建<code>username.gitlab.io</code>空仓库</p></li><li><p>在本地新建博客目录</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">blog</span><br></pre></td></tr></table></figure><p>, 并初始化:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd blog</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>在博客目录中, 初始化git仓库并添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitlab</span><br></pre></td></tr></table></figure><p>远程仓库:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git remote add origin git@gitlab.com&#x2F;username&#x2F;username.gitlab.io.git</span><br></pre></td></tr></table></figure></li></ol><h2 id="以子模块管理文章与主题"><a href="#以子模块管理文章与主题" class="headerlink" title="以子模块管理文章与主题"></a>以子模块管理文章与主题</h2><p>本部分作为博主使用git子模块管理的学习, 也可以将文章和主题的仓库直接克隆到<code>blog</code>目录下, 作为博客仓库代码的一部分管理起来.</p><h3 id="获取主题并修改远程仓库信息"><a href="#获取主题并修改远程仓库信息" class="headerlink" title="获取主题并修改远程仓库信息"></a>获取主题并修改远程仓库信息</h3><p>示例使用的是<a href="https://github.com/viosey/hexo-theme-material">material主题</a>, 从<code>github</code>上<code>fork</code>到<code>gitlab</code><a href="https://huangjj27.gitlab.io/posts/hexo-on-gitlab/#fn:1">1</a>的步骤如下:</p><ol><li><p>从</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">github</span><br></pre></td></tr></table></figure><p>获取主题到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">blog&#x2F;themes</span><br></pre></td></tr></table></figure><p>目录:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd blog&#x2F;themes</span><br><span class="line">$ git submodule add git@github.com&#x2F;viosey&#x2F;hexo-theme-material.git   # 以submodule的方式导入主题</span><br></pre></td></tr></table></figure></li><li><p>在<code>gitlab</code>上创建主题远程仓库, 作为主题项目的私有分支</p></li><li><p>修改本地主题仓库的远程仓库信息:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote rename origin upstream     # 设置为upstream方便更新主题</span><br><span class="line">$ git remote add origin git@gitlab.com&#x2F;username&#x2F;your-hexo-theme.git</span><br></pre></td></tr></table></figure></li><li><p>添加主题的私人配置文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br></pre></td></tr></table></figure><p>, 修改后推送到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitlab</span><br></pre></td></tr></table></figure><p>的主题仓库:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim _config.yml</span><br><span class="line">$ git commit -am &quot;add private configuration&quot;</span><br><span class="line">$ git push orgin master</span><br></pre></td></tr></table></figure><blockquote><p>设定主题的<code>gitlab</code>远程仓库的目的是要让<code>gitlab ci</code>能够追踪并从获取最新的提交内容. 设置文章的远程仓库也是这个道理.</p></blockquote></li></ol><h3 id="获取文章仓库"><a href="#获取文章仓库" class="headerlink" title="获取文章仓库"></a>获取文章仓库</h3><p>因为文章原本就存了一份在<code>gitlab</code>上, 所以直接从<code>gitlab</code>添加子模块即可. 注意因为git的<code>submodule</code>在克隆的时候只会获取游离的HEAD指针(也就是本地提交的修改不会被追踪), 所以克隆完之后要<code>checkout</code>到文章仓库的主要分支, 理由同上.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd blog</span><br><span class="line">$ rm -rf source     # 删除原有的示例文件</span><br><span class="line">$ git submodule add git@gitlab.com&#x2F;username&#x2F;your-hexo-article.git source    # 子模块将克隆到source文件夹</span><br><span class="line">$ cd source</span><br><span class="line">$ git checkout master</span><br></pre></td></tr></table></figure><h3 id="修改-gitmodules"><a href="#修改-gitmodules" class="headerlink" title="修改.gitmodules"></a>修改.gitmodules</h3><p>**这是博主用submodule后最坑的地方!**在设置<code>gitlab ci</code>后, 想要一直通过pipline却遇到了以下的报错:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Submodule &#39;source&#39; (https:&#x2F;&#x2F;gitlab-ci-token:xxxxxxxxxxxxxxxxxxxx@gitlab.com&#x2F;huangjj27&#x2F;hexo-blog-articles.git) registered for path &#39;source&#39;</span><br><span class="line">Submodule &#39;themes&#x2F;material&#39; (https:&#x2F;&#x2F;gitlab-ci-token:xxxxxxxxxxxxxxxxxxxx@gitlab.com&#x2F;huangjj27&#x2F;hexo-theme-material) registered for path &#39;themes&#x2F;material&#39;</span><br><span class="line">Cloning into &#39;&#x2F;builds&#x2F;huangjj27&#x2F;huangjj27.gitlab.io&#x2F;source&#39;...</span><br><span class="line">error: no such remote ref ff9fe17c92b1bf3a6c4f279d39100b568ab983fc</span><br><span class="line">Fetched in submodule path &#39;source&#39;, but it did not contain ff9fe17c92b1bf3a6c4f279d39100b568ab983fc. Direct fetching of that commit failed.</span><br></pre></td></tr></table></figure><p>后来翻找了<a href="https://docs.gitlab.com/ce/ci/git_submodules.html">带submodule项目的gitlab-ci配置文档</a>, 才发现漏了修改<code>.gitmodules</code>. 该文件的修改方法如下:</p><ol><li>将与主项目在同一个<code>gitlab</code>服务器的项目设置为相对路径</li><li>与主项目不在同一个<code>gitlab</code>服务器的项目设置为使用https协议获取</li></ol><p>因为博主的<code>文章</code>(source)与<code>主题</code>(theme/material)都和博客一样托管在<code>gitlab.com</code>上, 所以最后的submodules是这样子的:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[submodule &quot;themes&#x2F;material&quot;]</span><br><span class="line">path &#x3D; themes&#x2F;material</span><br><span class="line">url &#x3D; ..&#x2F;hexo-theme-material</span><br><span class="line">[submodule &quot;source&quot;]</span><br><span class="line">path &#x3D; source</span><br><span class="line">url &#x3D; ..&#x2F;hexo-blog-articles.git</span><br></pre></td></tr></table></figure><p>这里只提升一级目录是因为<code>blog</code>, <code>hexo-theme-material</code>, <code>hexo-blog-articles</code>三个仓库都在<code>gitlab.com/huangjj27</code>子域下.</p><h3 id="提交更改到gitlab上"><a href="#提交更改到gitlab上" class="headerlink" title="提交更改到gitlab上"></a>提交更改到gitlab上</h3><p>博客项目的配置到这里已经完成了一大半啦~ 接下来, 我们要将项目更改提交到我们的的远程仓库中即可~</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git commit -am &quot;useable blog&quot;</span><br><span class="line">$ git push -u origin master     # 远程仓库是空的呢~</span><br></pre></td></tr></table></figure><h2 id="配置gitlab-ci实现-半-自动化部署博客"><a href="#配置gitlab-ci实现-半-自动化部署博客" class="headerlink" title="配置gitlab ci实现(半)自动化部署博客"></a>配置gitlab ci实现(半)自动化部署博客</h2><p>在项目目录中添加<code>.gitlab-ci.yml</code>文件, 内容如下:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">image: node:6.10.2</span><br><span class="line"></span><br><span class="line">cache:</span><br><span class="line">    paths:</span><br><span class="line">        - node_modules&#x2F;</span><br><span class="line"></span><br><span class="line">variables:</span><br><span class="line">    GIT_SUBMODULE_STRATEGY: recursive</span><br><span class="line"></span><br><span class="line">before_script:</span><br><span class="line">    - npm install hexo-cli -g</span><br><span class="line">    - npm install</span><br><span class="line"></span><br><span class="line">pages:</span><br><span class="line">    script:</span><br><span class="line">        - hexo generate</span><br><span class="line">    artifacts:</span><br><span class="line">        paths:</span><br><span class="line">            - public</span><br><span class="line">    only:</span><br><span class="line">        - master</span><br></pre></td></tr></table></figure><p>然后在<code>gitlab</code>博客项目里面, 跑一下<code>pipline</code>, 即可部署成功!</p><h2 id="配置搜索引擎索引"><a href="#配置搜索引擎索引" class="headerlink" title="配置搜索引擎索引"></a>配置搜索引擎索引</h2><p>配置搜索引擎索引能够让博客的曝光度提升。对于技术人员来说，配置Google索引会让博客显得高大上，但对于国内大部分技术人员由于墙的原因仍然使用百度进行技术类搜索，配置百度的搜索索引也许能获得更大的曝光度。</p><h3 id="google"><a href="#google" class="headerlink" title="google"></a>google</h3><ol><li><p>在Google搜索中输入<code>site:yourname.gitlab.io</code>, 如下图所示：<br><img src="https://huangjj27.gitlab.io/uploads/images/hexo-on-gitlab/site-search.png" alt="输入site:huangjj27.gitlab.io"></p></li><li><p>点击第一个链接，进入到Google搜索控制台，添加属性，选择属性资源为网站，并填入站点域名：<br><img src="https://huangjj27.gitlab.io/uploads/images/hexo-on-gitlab/add-site.png" alt="添加站点属性"></p></li><li><p>下载验证文件, 并放到站点源码仓库目录下:<br><img src="https://huangjj27.gitlab.io/uploads/images/hexo-on-gitlab/validation.png" alt="下载验证文件"><br><img src="https://huangjj27.gitlab.io/uploads/images/hexo-on-gitlab/copy-validation.png" alt="放好验证文件"></p></li><li><p>修改</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.gitlab-ci.yml</span><br></pre></td></tr></table></figure><p>文件, 提交并部署站点:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pages:</span><br><span class="line">    script:</span><br><span class="line">        - hexo generate</span><br><span class="line">        - cp googleXXXXX.html public    # add validation file to artifact file</span><br><span class="line">    artifacts:</span><br><span class="line">        paths:</span><br><span class="line">            - public</span><br><span class="line">    only:</span><br><span class="line">        - master</span><br></pre></td></tr></table></figure></li><li><p>继续完成验证的步骤. 完成后, 可以看到如下界面:<br><img src="https://huangjj27.gitlab.io/uploads/images/hexo-on-gitlab/succeed-validation.png" alt="完成验证"></p></li></ol><p>现在, 在谷歌搜索一下博客名字,那么就能看到自己的博客啦~<br><img src="https://huangjj27.gitlab.io/uploads/images/hexo-on-gitlab/search-site.png" alt="搜索站点"></p><h3 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h3><p>步骤与上面类似, 只要将验证文件复制到输出目录<code>public</code>, 在部署站点后进行验证即可.</p><h2 id="生成站点地图"><a href="#生成站点地图" class="headerlink" title="生成站点地图"></a>生成站点地图</h2><p>站点地图用于让搜索引擎快速生成索引. 配置方法如下:</p><ol><li><p>为hexo站点添加站点地图生成器插件依赖:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; package.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;dependencies&quot;: &#123;</span><br><span class="line">        &quot;hexo-generator-sitemap&quot;: &quot;^1.0.0&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加插件配置到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br></pre></td></tr></table></figure><p>中:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugins:</span><br><span class="line">    hexo-generator-sitemap</span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure></li><li><p>更新依赖, 并生成站点, 测试`sitemap.xml是否有生成:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install</span><br><span class="line">$ hexo generate</span><br><span class="line">$ ls public |grep sitemap.xml</span><br><span class="line">sitemap.xml</span><br></pre></td></tr></table></figure></li></ol><h3 id="利用material主题"><a href="#利用material主题" class="headerlink" title="利用material主题"></a>利用material主题</h3><p>在<code>material</code>主题1.5版本中, 官方的配置模板增加了html标签配置搜索引擎的方式,</p><h2 id="配置评论系统"><a href="#配置评论系统" class="headerlink" title="配置评论系统"></a>配置评论系统</h2><p>这部分集成于<code>material</code>主题中, 最后采用了比较简单的<a href="https://github.com/imsun/gitment/blob/master/README.md"><code>gitment</code></a>进行配置, 详细步骤请参考<a href="https://material.viosey.com/docs/#/config/basic">这里</a>, 本文说一下大家都比较关心的<a href="https://github.com/imsun/gitment/issues/73">gitment根据URL配置生成标签的问题</a>, 只需要修改该主题配置, 使得博客在回调gitment数据的时候只采用path参数来生成标签:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; themes&#x2F;material&#x2F;layout&#x2F;_widget&#x2F;comment&#x2F;gitcomment&#x2F;enter.ejs</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var gitment &#x3D; new Gitment(&#123;</span><br><span class="line">        id: &lt;%&#x3D; theme.comment.gitment_post_id %&gt;, &#x2F;&#x2F; 可选。默认为 location.href</span><br><span class="line">       &#x2F;&#x2F; some other settings</span><br><span class="line">    &#125;)</span><br><span class="line">    gitment.render(&#39;container&#39;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>配置文件:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; themes&#x2F;material&#x2F;_config.yml</span><br><span class="line"></span><br><span class="line">comment:</span><br><span class="line">    # useable settings</span><br><span class="line">    gitment_post_id: window.location.pathname</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leancloud国际版|页面|说说</title>
      <link href="2020/11/18/029/"/>
      <url>2020/11/18/029/</url>
      
        <content type="html"><![CDATA[<h3 id="🌈-LeanCloud-的相关准备"><a href="#🌈-LeanCloud-的相关准备" class="headerlink" title="🌈 LeanCloud 的相关准备"></a>🌈 LeanCloud 的相关准备</h3><p>🌍 建议使用国际版的 LeanCloud</p><p>因为国际版的 leancloud 不需要配置 serverurl，所以推荐使用国际版，速度没有区别，如果使用国内版的 leancloud 别忘了填写 serverurl 即可</p><ol><li>前往 <a href="https://leancloud.app/">LeanCloud 国际版</a>，注册账号。</li><li>注册完成之后根据 LeanCloud 的提示绑定手机号和邮箱。</li><li>绑定完成之后点击<code>创建应用</code>，应用名称随意，接着在<code>结构化数据</code>中创建 <code>class</code>，命名为 <code>shuoshuo</code>。</li><li>在你新建的应用中找到<code>结构化数据</code>下的<code>用户</code>。点击<code>添加用户</code>，输入想用的用户名及密码。</li><li>回到<code>结构化数据</code>中，点击 <code>class</code> 下的 <code>shuoshuo</code>。找到权限，在 <code>Class 访问权限</code>中将 <code>add_fields</code> 以及 <code>create</code> 权限设置为指定用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将 <code>delete</code> 和 <code>update</code> 也设置为跟它们一样的权限。</li><li>然后新建一个名为<code>atComment</code>的class，权限什么的使用默认的即可。</li><li>点击 <code>class</code> 下的 <code>_User</code> 添加列，列名称为 <code>img</code>，默认值填上你这个账号想要用的发布说说的头像url，这一项不进行配置，说说头像会显示为默认头像 —— Artitalk 的 logo。</li><li>在最菜单栏中找到设置-&gt; 应用 keys，记下来 <code>AppID</code> 和 <code>AppKey</code> ，一会会用。</li><li>最后将 <code>_User</code> 中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据已达到强制发布说说。</li></ol><p>❗ 关于设置权限的这几步</p><p>这几步一定要设置好，才可以保证不被 “闲人” 破解发布说说的验证</p><h3 id="🌼-开始使用"><a href="#🌼-开始使用" class="headerlink" title="#🌼 开始使用"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%8C%BC-%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8">#</a>🌼 开始使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引用 artitalk --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/artitalk&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 存放说说的容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;artitalk_main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Artitalk(&#123;</span></span><br><span class="line"><span class="javascript">    appId: <span class="string">&#x27;&#x27;</span>, <span class="comment">// Your leancloud appId</span></span></span><br><span class="line"><span class="javascript">    appKey: <span class="string">&#x27;&#x27;</span> <span class="comment">// Your leancloud appKey</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="🎅-配置项的说明"><a href="#🎅-配置项的说明" class="headerlink" title="#🎅 配置项的说明"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%8E%85-%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9A%84%E8%AF%B4%E6%98%8E">#</a>🎅 配置项的说明</h3><p>可以通过修改配置项快捷更改部分功能，<a href="https://artitalk.js.org/settings.html">点我查看详细说明</a></p><h3 id="🔨-测试使用"><a href="#🔨-测试使用" class="headerlink" title="#🔨 测试使用"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%94%A8-%E6%B5%8B%E8%AF%95%E4%BD%BF%E7%94%A8">#</a>🔨 测试使用</h3><p>如果上面的配置没有问题，打开你的页面，点击页面右下角的登录输入用户密码后，在输入框中输入说说，点击发布即可。</p><h3 id="🔨-说说内容的删除"><a href="#🔨-说说内容的删除" class="headerlink" title="#🔨 说说内容的删除"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%94%A8-%E8%AF%B4%E8%AF%B4%E5%86%85%E5%AE%B9%E7%9A%84%E5%88%A0%E9%99%A4">#</a>🔨 说说内容的删除</h3><p>登录后点击说说内容框右上角的 x，点击确定删除即可。</p><h3 id="🔨-说说内容的修改"><a href="#🔨-说说内容的修改" class="headerlink" title="#🔨 说说内容的修改"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%94%A8-%E8%AF%B4%E8%AF%B4%E5%86%85%E5%AE%B9%E7%9A%84%E4%BF%AE%E6%94%B9">#</a>🔨 说说内容的修改</h3><p>点击想要修改的那条说说的头像，会自动跳转到只有一条提示语以及输入框的界面，在输入框中编辑完之后点击保存即可</p><p>注：说说内容的修改与删除在 leancloud 后台也可进行操作</p><h3 id="🔨-评论的使用"><a href="#🔨-评论的使用" class="headerlink" title="#🔨 评论的使用"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%94%A8-%E8%AF%84%E8%AE%BA%E7%9A%84%E4%BD%BF%E7%94%A8">#</a>🔨 评论的使用</h3><p>点击每条说说右下角的评论图标即可查看针对本条说说的评论或者对本条说说发起评论，再次点击会刷新页面已达到返回的作用</p><p>填写邮箱以获得 gravatar 的头像</p><h1 id="Artitalk"><a href="#Artitalk" class="headerlink" title="Artitalk"></a>Artitalk</h1><h1 id="see-https-artitalk-js-org"><a href="#see-https-artitalk-js-org" class="headerlink" title="see https://artitalk.js.org/"></a>see <a href="https://artitalk.js.org/">https://artitalk.js.org/</a></h1><p>artitalk:<br>  appId: GxxxIuYShcBUOmxxxxxxx-MdYxxxxI<br>  appKey: 1pMxxxxxxxxL8BxxxxK0S2p<br>  option:<br>  serverURL:<br>  lang: zh</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>侧边栏|说说</title>
      <link href="2020/11/18/028/"/>
      <url>2020/11/18/028/</url>
      
        <content type="html"><![CDATA[<blockquote><ol><li>前往 <a href="https://leancloud.app/">LeanCloud 国际版</a>，注册账号。</li><li>注册完成之后根据 LeanCloud 的提示绑定手机号和邮箱。</li><li>绑定完成之后点击<code>创建应用</code>，应用名称随意，接着在<code>结构化数据</code>中创建 <code>class</code>，命名为 <code>shuoshuo</code>。</li><li>在你新建的应用中找到<code>结构化数据</code>下的<code>用户</code>。点击<code>添加用户</code>，输入想用的用户名及密码。</li><li>回到<code>结构化数据</code>中，点击 <code>class</code> 下的 <code>shuoshuo</code>。找到权限，在 <code>Class 访问权限</code>中将 <code>add_fields</code> 以及 <code>create</code> 权限设置为指定用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将 <code>delete</code> 和 <code>update</code> 也设置为跟它们一样的权限。</li><li>然后新建一个名为<code>atComment</code>的class，权限什么的使用默认的即可。</li><li>点击 <code>class</code> 下的 <code>_User</code> 添加列，列名称为 <code>img</code>，默认值填上你这个账号想要用的发布说说的头像url，这一项不进行配置，说说头像会显示为默认头像 —— Artitalk 的 logo。</li><li>在最菜单栏中找到设置-&gt; 应用 keys，记下来 <code>AppID</code> 和 <code>AppKey</code> ，一会会用。</li><li>最后将 <code>_User</code> 中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据已达到强制发布说说。</li></ol></blockquote><p><a href="https://github.com/Zfour/Butterfly-shuo">资源包下载</a></p><hr><h2 id="步骤1：修改pug代码"><a href="#步骤1：修改pug代码" class="headerlink" title="步骤1：修改pug代码"></a>步骤1：修改pug代码</h2><h3 id="下载资源包"><a href="#下载资源包" class="headerlink" title="下载资源包"></a>下载资源包</h3><p><a href="https://github.com/Zfour/Butterfly-shuo">资源包下载</a></p><h3 id="增加、替换代码"><a href="#增加、替换代码" class="headerlink" title="增加、替换代码"></a>增加、替换代码</h3><p>前往”根目录\themes\butterfly\layout\includes\widget”文件夹，将资源包中的”card_shuo.pug”复制到文件夹中。</p><p>打开”\themes\butterfly\layout\includes\widget”路径下的”index.pug”</p><p>使用文件夹中的”index.pug”进行替换，如果你存在侧边栏魔改请手动修改。</p><p>将card_shuo代码添加至card_author代码块后。添加后的代码如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">#aside_content.aside_content</span><br><span class="line">  if theme.aside.card_author.enable</span><br><span class="line">    include .&#x2F;card_author.pug</span><br><span class="line">  if theme.aside.card_shuo.enable</span><br><span class="line">    include .&#x2F;card_shuo.pug</span><br><span class="line">  .sticky_layout</span><br><span class="line">    if theme.aside.card_announcement.enable</span><br><span class="line">      include .&#x2F;card_announcement.pug</span><br><span class="line">    if theme.aside.card_recent_post.enable</span><br><span class="line">      include .&#x2F;card_recent_post.pug</span><br><span class="line">    if theme.newest_comments.enable</span><br><span class="line">      include .&#x2F;card_newest_comment.pug</span><br><span class="line">    if theme.ad &amp;&amp; theme.ad.aside</span><br><span class="line">      include .&#x2F;card_ad.pug</span><br><span class="line">    if theme.aside.card_categories.enable</span><br><span class="line">      include .&#x2F;card_categories.pug</span><br><span class="line">    if theme.aside.card_tags.enable</span><br><span class="line">      include .&#x2F;card_tags.pug</span><br><span class="line">    if theme.aside.card_archives.enable</span><br><span class="line">      include .&#x2F;card_archives.pug</span><br><span class="line">    if theme.aside.card_webinfo.enable</span><br><span class="line">      include .&#x2F;card_webinfo.pug</span><br></pre></td></tr></table></figure><p>打开”\themes\butterfly&quot;路径下的”_config.yml”</p><p>搜索到”aside:”设置处</p><p>添加card_shuo开关代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line">aside:</span><br><span class="line">  enable: true</span><br><span class="line">  mobile: true    # display on mobile</span><br><span class="line">  position: right # left or right</span><br><span class="line">  card_shuo:      </span><br><span class="line">    enable: true   </span><br><span class="line">  card_author:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><hr><h2 id="步骤2：添加引入js、css代码"><a href="#步骤2：添加引入js、css代码" class="headerlink" title="步骤2：添加引入js、css代码"></a>步骤2：添加引入js、css代码</h2><h3 id="放置资源包"><a href="#放置资源包" class="headerlink" title="放置资源包"></a>放置资源包</h3><p>将下载包中的shuoshuo文件夹放入根目录的”source”文件夹下。</p><blockquote><p>如果报错，请将文件夹中的pug文件夹删除！！！</p></blockquote><h3 id="引入js和css"><a href="#引入js和css" class="headerlink" title="引入js和css"></a>引入js和css</h3><p>打开”\themes\butterfly&quot;路径下的”_config.yml”</p><p>搜索到”inject:”设置处</p><p>添加以下代码：</p><p>你需要更改”artitalkkey.js”中的ID和appKey为你的vline相同的应用信息。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;shuoshuo&#x2F;css&#x2F;shuo.css&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">  bottom:</span><br><span class="line">  - &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;artitalk&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script src&#x3D;&quot;&#x2F;shuoshuo&#x2F;js&#x2F;shuo.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script src&#x3D;&quot;&#x2F;shuoshuo&#x2F;js&#x2F;artitalkkey.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  </span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>此时，”hexo g &amp;&amp; hexo s”可发现说说已经完成配置。</p><p>点击编辑可展开隐藏的登录和写说说的按钮。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白天|黑夜|开关</title>
      <link href="2020/11/18/027/"/>
      <url>2020/11/18/027/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>虽然next 8.0 主题已经支持原生黑色模式，只需要在 _config.next.yml 文件中，将相应开关打开即可。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">darkmode: true</span><br></pre></td></tr></table></figure><p>但是这个黑色模式是不可以切换的，本文将介绍如何实现一个按钮来切换黑/白模式。</p><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><h2 id="1-添加darkmode-js到你的主题中"><a href="#1-添加darkmode-js到你的主题中" class="headerlink" title="1. 添加darkmode.js到你的主题中"></a>1. 添加darkmode.js到你的主题中</h2><p>你可以下载 <a href="https://github.com/sandoche/Darkmode.js">Darkmode.js</a> 或者直接添加他的cdn到你的vendors文件。（注：next8.0之前的版本没有接下来所提到的需要的文件，可以参考<a href="https://dog.wtf/tech/hexo-dark-mode-note/">这篇文章</a>来配置你的黑色模式）</p><p>我的方法是直接在 themes/next/_vendors.yml 中添加 darkmode的 cdn：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">darkmode_js:</span><br><span class="line">  name: darkmode-js</span><br><span class="line">  version: 1.5.7</span><br><span class="line">  file: lib&#x2F;darkmode-js.min.js</span><br></pre></td></tr></table></figure><p>直接加在文件末尾即可。</p><h2 id="2-在你的-config-yml-添加darkmode-js的相关开关："><a href="#2-在你的-config-yml-添加darkmode-js的相关开关：" class="headerlink" title="2. 在你的 _config.yml 添加darkmode_js的相关开关："></a>2. 在你的 _config.yml 添加darkmode_js的相关开关：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vendors:</span><br><span class="line">  #darkmode_js: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;darkmode-js&#x2F;lib&#x2F;darkmode-js.min.js</span><br><span class="line">  darkmode_js:</span><br><span class="line"></span><br><span class="line"># darkmode.js</span><br><span class="line">darkmode_js: </span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>注意缩进！第一个darkmode_js是在vendors栏目下，第二个darkmode_js是一个单独的栏目。</p><h2 id="3-开启darkmode-js"><a href="#3-开启darkmode-js" class="headerlink" title="3. 开启darkmode_js"></a>3. 开启darkmode_js</h2><p>打开 themes/next/layout/_scripts/vendors.njk，配置以下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.canvas_ribbon.enable %&#125;</span><br><span class="line">  &lt;script size&#x3D;&quot;&#123;&#123; theme.canvas_ribbon.size &#125;&#125;&quot; alpha&#x3D;&quot;&#123;&#123; theme.canvas_ribbon.alpha &#125;&#125;&quot; zIndex&#x3D;&quot;&#123;&#123; theme.canvas_ribbon.zIndex &#125;&#125;&quot; src&#x3D;&quot;&#123;&#123; theme.vendors.canvas_ribbon &#125;&#125;&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;# Customize darkmode.js - Declaration #&#125;</span><br><span class="line">&#123;%- if theme.darkmode_js.enable %&#125;</span><br><span class="line">  &lt;script src&#x3D;&quot;&#123;&#123; theme.vendors.darkmode_js &#125;&#125;&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%- for name in js_vendors() %&#125;</span><br><span class="line">  &lt;script src&#x3D;&quot;&#123;&#123; url_for(theme.vendors[name]) &#125;&#125;&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;%- endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;# Customize darkmode.js - Invokation #&#125;</span><br><span class="line">&#123;%- if theme.darkmode_js.enable %&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var options &#x3D; &#123;</span><br><span class="line">  bottom: &#39;64px&#39;, &#x2F;&#x2F; default: &#39;32px&#39;</span><br><span class="line">  right: &#39;unset&#39;, &#x2F;&#x2F; default: &#39;32px&#39;</span><br><span class="line">  left: &#39;32px&#39;, &#x2F;&#x2F; default: &#39;unset&#39;</span><br><span class="line">  time: &#39;0.5s&#39;, &#x2F;&#x2F; default: &#39;0.3s&#39;</span><br><span class="line">  mixColor: &#39;#fff&#39;, &#x2F;&#x2F; default: &#39;#fff&#39;</span><br><span class="line">  backgroundColor: &#39;#fff&#39;,  &#x2F;&#x2F; default: &#39;#fff&#39;</span><br><span class="line">  buttonColorDark: &#39;#100f2c&#39;,  &#x2F;&#x2F; default: &#39;#100f2c&#39;</span><br><span class="line">  buttonColorLight: &#39;#fff&#39;, &#x2F;&#x2F; default: &#39;#fff&#39;</span><br><span class="line">  saveInCookies: true, &#x2F;&#x2F; default: true,</span><br><span class="line">  label: &#39;🌓&#39;, &#x2F;&#x2F; default: &#39;&#39;</span><br><span class="line">  autoMatchOsTheme: true &#x2F;&#x2F; default: true</span><br><span class="line">&#125;</span><br><span class="line">const darkmode &#x3D; new Darkmode(options);</span><br><span class="line">darkmode.showWidget();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure><p>因为此版本的动画特效已经精简为只有canvas_ribbon，更改后的配置文件就如上所示，其他可以根据情况自行更改。</p><h2 id="4-重新生成即可开启，点击按钮即可切换黑白模式"><a href="#4-重新生成即可开启，点击按钮即可切换黑白模式" class="headerlink" title="4. 重新生成即可开启，点击按钮即可切换黑白模式"></a>4. 重新生成即可开启，点击按钮即可切换黑白模式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dplayer|HTML播放器</title>
      <link href="2020/11/18/026/"/>
      <url>2020/11/18/026/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如此可爱的HTML5弹幕视频播放器</p><h2 id="添加Dplayer"><a href="#添加Dplayer" class="headerlink" title="添加Dplayer"></a>添加Dplayer</h2><ul><li>方法</li><li>效果</li></ul><p>在<code>myblog/themes/Pjax/layout/includes/Butterfly</code>中新建<code>player.pug</code>和<code>video.pug</code></p><details blue="" style="box-sizing: border-box; display: block; padding: 16px; margin: 0.5rem 0px; border-radius: 4px; font-size: 0.7375rem; transition: all 0.28s ease 0s; border: 1px solid rgb(232, 244, 253); line-height: 1.3;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer; padding: 16px; margin: -16px; border-radius: 4px; color: rgba(85, 85, 85, 0.7); font-size: 0.775rem; font-weight: 700; position: relative; background: rgb(232, 244, 253);"><span>&nbsp;</span><p style="box-sizing: border-box; cursor: url(&quot;https://cdn.jsdelivr.net/gh/inkss/common@master/cursor/text.png&quot;), default !important; display: inline; margin: 0px 0px 0.8rem; border-bottom: none !important;">参考图片</p></summary></details><p>当前目录下复制<code>layout.pug</code>内容粘贴到<code>player.pug</code></p><p>我们需要引入<code>video.pug</code>，在<code>player.pug</code>中添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">#body-wrap</span><br><span class="line">  if theme.background</span><br><span class="line">    - var is_photo &#x3D; theme.background.startsWith(&#39;url&#39;) ? &#39;photo&#39;:&#39;color&#39;</span><br><span class="line">    #web_bg(data-type&#x3D;is_photo)</span><br><span class="line"></span><br><span class="line">  include .&#x2F;sidebar.pug</span><br><span class="line">  include .&#x2F;header&#x2F;index.pug</span><br><span class="line">  include .&#x2F;video.pug</span><br></pre></td></tr></table></figure><p>我们需要加载<code>DPlayer</code>文件，并且启用HLS支持</p><p>在<code>video.pug</code>中添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">.card</span><br><span class="line">  .video</span><br><span class="line">    #dplayer</span><br><span class="line">    script(type&#x3D;&#39;text&#x2F;javascript&#39;, src&#x3D;&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;hls.js@latest&#39;)</span><br><span class="line">    script(type&#x3D;&#39;text&#x2F;javascript&#39;, src&#x3D;&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;MoePlayer&#x2F;DPlayer@master&#x2F;dist&#x2F;DPlayer.min.js&#39;)</span><br><span class="line">    script(type&#x3D;&#39;text&#x2F;javascript&#39;, src&#x3D;&#39;js&#x2F;video.js&#39;)</span><br></pre></td></tr></table></figure><p>在<code>myblog/themes/Butterfly/source/js</code>中新建<code>video.js</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">const dp &#x3D; new DPlayer(&#123;</span><br><span class="line">    container: document.getElementById(&#39;dplayer&#39;),</span><br><span class="line">    video: &#123;</span><br><span class="line">        url: &#39;&#39;,</span><br><span class="line">        type: &#39;hls&#39;,</span><br><span class="line">    &#125;,</span><br><span class="line">    pluginOptions: &#123;</span><br><span class="line">        hls: &#123;</span><br><span class="line">            &#x2F;&#x2F; hls config</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">console.log(dp.plugins.hls); &#x2F;&#x2F; Hls 实例</span><br></pre></td></tr></table></figure><p>在<code>myblog/themes/Butterfly/layout/index.pug</code>中修改</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">extends includes&#x2F;player.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  include .&#x2F;includes&#x2F;mixins&#x2F;post-ui.pug</span><br><span class="line">  #recent-posts.recent-posts</span><br><span class="line">    +postUI</span><br><span class="line">    include includes&#x2F;pagination.pug</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI机器人|评论框|手机独立背景图</title>
      <link href="2020/11/18/025/"/>
      <url>2020/11/18/025/</url>
      
        <content type="html"><![CDATA[<h2 id="移动端独立背景图"><a href="#移动端独立背景图" class="headerlink" title="移动端独立背景图"></a>移动端独立背景图</h2><ul><li>方法</li><li>效果</li></ul><p>在<code>/root/myblog/themes/Butterfly/source/css/_layout/pagination.styl</code>末行添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">@media screen and (max-width: 768px)</span><br><span class="line">  .prev-post,</span><br><span class="line">  .next-post</span><br><span class="line">    width: 100% !important</span><br><span class="line">@media screen and (max-width: $sm)</span><br><span class="line">  #web_bg</span><br><span class="line">      background: url(http:&#x2F;&#x2F;tu.yaohuo.me&#x2F;imgs&#x2F;2020&#x2F;06&#x2F;8ebec35e93e04611.png)</span><br><span class="line">      background-size: cover</span><br></pre></td></tr></table></figure><h2 id="评论框美化"><a href="#评论框美化" class="headerlink" title="评论框美化"></a>评论框美化</h2><ul><li>方法</li><li>效果</li></ul><p>以下是评论框css样式，可以直接用我的css外链</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">.v[data-class&#x3D;v] .vwrap&#123;padding:0px 0 42px;&#125;.vheader.item3&#123;width:80%;bottom:0;position:absolute;background:transparent;border-top:1px solid #f7f7f7;&#125;input.vnick.vinput,input.vmail.vinput,input.vlink.vinput&#123;width:33.33% !important;&#125;.v[data-class&#x3D;v] .vwrap .vheader .vinput&#123;border-bottom:none !important;&#125;svg.markdown&#123;display:none;&#125;.v .vwrap .vrow&#123;position:absolute;right:0;bottom:5px;width:20%;font-size:0;border-radius:0;vertical-align:bottom;&#125;.v .vbtn&#123;width:100%;border-radius:0 !important;height:43px;line-height:43px !important;padding:0 !important;font-size:14px !important;font-family:Arial;position:relative;top:0px;&#125;.v[data-class&#x3D;v] .vinput&#123;padding:10px 15px !important;&#125;.v[data-class&#x3D;v] .vrow .vcol.vcol-70&#123;width:100% !important;&#125;.vwrap&gt;.vrow&#123;height:43px;margin-bottom:-5px;&#125;.v[data-class&#x3D;v] .vrow&#123;padding:0;&#125;.v[data-class&#x3D;v] .vrow .vcol.vcol-40&#123;width:90%&#125;.v[data-class&#x3D;v] .vrow .vcol.vcol-30&#123;width:0;height:0;&#125;.v svg&#123;vertical-align:text-bottom;&#125;textarea#veditor&#123;resize:none;&#125;textarea#veditor::-webkit-input-placeholder&#123;color:#a5e3f6;text-align:center;line-height:4;&#125;textarea#veditor:-moz-placeholder&#123;color:#a5e3f6;text-align:center;line-height:4;&#125;textarea#veditor::-moz-placeholder&#123;color:#a5e3f6;text-align:center;line-height:4;&#125;textarea#veditor:-ms-input-placeholder&#123;color:#a5e3f6;text-align:center;line-height:4;&#125;</span><br></pre></td></tr></table></figure><p>在<code>/root/myblog/themes/Pjax/layout/includes/comments/valine.pug</code>末行引入外链调用今日诗词</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">link(rel&#x3D;&#39;stylesheet&#39; href&#x3D;&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;haikesikejiqiang&#x2F;picred@master&#x2F;2020&#x2F;06&#x2F;15&#x2F;test05.css&#39;)</span><br><span class="line">script(src&#x3D;&#39;https:&#x2F;&#x2F;sdk.jinrishici.com&#x2F;v2&#x2F;browser&#x2F;jinrishici.js&#39; charset&#x3D;&#39;utf-8&#39;)</span><br><span class="line">script.</span><br><span class="line">  </span><br><span class="line">  function diyValine() &#123;</span><br><span class="line">          jinrishici.load(function(result) &#123;</span><br><span class="line">              var jrsc_plac &#x3D; result.data.content + &quot;\n「&quot; + result.data.origin.title + &quot;」&quot; + result.data.origin.dynasty + &quot; · &quot; + result.data.origin.author</span><br><span class="line">              document.getElementById(&quot;veditor&quot;).setAttribute(&quot;placeholder&quot;, jrsc_plac);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      setTimeout(diyValine, 10);</span><br></pre></td></tr></table></figure><h2 id="BotUI-对话机器人"><a href="#BotUI-对话机器人" class="headerlink" title="BotUI 对话机器人"></a>BotUI 对话机器人</h2><ul><li>方法</li><li>效果</li></ul><p><a href="https://github.com/botui/botui"><code>BotUI</code></a>是一个用于创建对话式UI的JavaScript框架，可以通过添加消息，问题，甚至可以为用户填写输入字段来配置对话流程</p><p><code>BotUI</code>页面需要引入以下css文件。您可以直接在页面中使用这些链接</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;botui&#x2F;build&#x2F;botui.min.css&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;botui&#x2F;build&#x2F;botui-theme-default.css&quot;&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;bot-ui&gt;</code>标签是魔术开始的地方</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&lt;div class&#x3D;&quot;sang&quot; id&#x3D;&quot;my-botui-app&quot; style&#x3D;&quot;min-height:300px; padding:2px 6px 4px 6px; background-color: rgba(242, 242, 242,0.5); border-radius: 10px&quot;&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">        &lt;h4&gt;与 山河 对话中...&lt;&#x2F;h4&gt;</span><br><span class="line">    &lt;&#x2F;center&gt;</span><br><span class="line">    &lt;bot-ui&gt;</span><br><span class="line">        &lt;center&gt;</span><br><span class="line">            &lt;div style&#x3D;&quot; background-image: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;Fog-Forest&#x2F;cdn@1.7&#x2F;botui&#x2F;loading.svg);background-repeat: no-repeat;background-size: 10em; background-position: center;height: 10em;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;p&gt;Loading&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;&#x2F;center&gt;</span><br><span class="line">    &lt;&#x2F;bot-ui&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>引入<code>botui.js</code>和<code>vue.js</code>文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;haikesikejiqiang&#x2F;picred@master&#x2F;2020&#x2F;06&#x2F;15&#x2F;botui.min@0.3.7.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>在<code>/root/myblog/themes/Pjax/source/js</code>下新建botui.js</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#x2F;*</span><br><span class="line"> * botui 0.3.9</span><br><span class="line"> * A JS library to build the UI for your bot</span><br><span class="line"> * https:&#x2F;&#x2F;botui.org</span><br><span class="line"> *</span><br><span class="line"> * Copyright 2019, Moin Uddin</span><br><span class="line"> * Released under the MIT license.</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">(function (root, factory) &#123;</span><br><span class="line">  &quot;use strict&quot;;</span><br><span class="line">  if (typeof define &#x3D;&#x3D;&#x3D; &#39;function&#39; &amp;&amp; define.amd) &#123;</span><br><span class="line">    define([], function () &#123;</span><br><span class="line">      return (root.BotUI &#x3D; factory(root));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    root.BotUI &#x3D; factory(root);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;(typeof window !&#x3D;&#x3D; &#39;undefined&#39; ? window : this, function (root, undefined) &#123;</span><br><span class="line">  &quot;use strict&quot;;</span><br><span class="line"></span><br><span class="line">  var BotUI &#x3D; (function (id, opts) &#123;</span><br><span class="line"></span><br><span class="line">    opts &#x3D; opts || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    if(!id) &#123;</span><br><span class="line">      throw Error(&#39;BotUI: Container id is required as first argument.&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(!document.getElementById(id)) &#123;</span><br><span class="line">      throw Error(&#39;BotUI: Element with id #&#39; + id + &#39; does not exist.&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(!root.Vue &amp;&amp; !opts.vue) &#123;</span><br><span class="line">      throw Error(&#39;BotUI: Vue is required but not found.&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var _botApp, &#x2F;&#x2F; current vue instance.</span><br><span class="line">    _options &#x3D; &#123;</span><br><span class="line">      debug: false,</span><br><span class="line">      fontawesome: true,</span><br><span class="line">      searchselect: true</span><br><span class="line">    &#125;,</span><br><span class="line">    _container, &#x2F;&#x2F; the outermost Element. Needed to scroll to bottom, for now.</span><br><span class="line">    _interface &#x3D; &#123;&#125;, &#x2F;&#x2F; methods returned by a BotUI() instance.</span><br><span class="line">    _actionResolve,</span><br><span class="line">    _markDownRegex &#x3D; &#123;</span><br><span class="line">      icon: &#x2F;!\(([^\)]+)\)&#x2F;igm, &#x2F;&#x2F; !(icon)</span><br><span class="line">      image: &#x2F;!\[(.*?)\]\((.*?)\)&#x2F;igm, &#x2F;&#x2F; ![aleternate text](src)</span><br><span class="line">      link: &#x2F;\[([^\[]+)\]\(([^\)]+)\)(\^?)&#x2F;igm &#x2F;&#x2F; [text](link) ^ can be added at end to set the target as &#39;blank&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    _fontAwesome &#x3D; &#39;https:&#x2F;&#x2F;use.fontawesome.com&#x2F;ea731dcb6f.js&#39;,</span><br><span class="line">    _esPromisePollyfill &#x3D; &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;es6-promise&#x2F;4.1.0&#x2F;es6-promise.min.js&#39;, &#x2F;&#x2F; mostly for IE</span><br><span class="line">    _searchselect &#x3D;  &quot;https:&#x2F;&#x2F;unpkg.com&#x2F;vue-select@2.4.0&#x2F;dist&#x2F;vue-select.js&quot;;</span><br><span class="line"></span><br><span class="line">    root.Vue &#x3D; root.Vue || opts.vue;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; merge opts passed to constructor with _options</span><br><span class="line">    for (var prop in _options) &#123;</span><br><span class="line">      if (opts.hasOwnProperty(prop)) &#123;</span><br><span class="line">        _options[prop] &#x3D; opts[prop];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(!root.Promise &amp;&amp; typeof Promise &#x3D;&#x3D;&#x3D; &quot;undefined&quot; &amp;&amp; !opts.promise) &#123;</span><br><span class="line">      loadScript(_esPromisePollyfill);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function _linkReplacer(match, $1, $2, $3) &#123;</span><br><span class="line">      var _target &#x3D; $3 ? &#39;blank&#39; : &#39;&#39;; &#x2F;&#x2F; check if &#39;^&#39; sign is present with link syntax</span><br><span class="line">      return &quot;&lt;a class&#x3D;&#39;botui-message-content-link&#39; target&#x3D;&#39;&quot; + _target + &quot;&#39; href&#x3D;&#39;&quot; + $2 +&quot;&#39;&gt;&quot; + $1 + &quot;&lt;&#x2F;a&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function _parseMarkDown(text) &#123;</span><br><span class="line">      return text</span><br><span class="line">                 .replace(_markDownRegex.image, &quot;&lt;img class&#x3D;&#39;botui-message-content-image&#39; src&#x3D;&#39;$2&#39; alt&#x3D;&#39;$1&#39; &#x2F;&gt;&quot;)</span><br><span class="line">                 .replace(_markDownRegex.icon, &quot;&lt;i class&#x3D;&#39;botui-icon botui-message-content-icon fa fa-$1&#39;&gt;&lt;&#x2F;i&gt;&quot;)</span><br><span class="line">                 .replace(_markDownRegex.link, _linkReplacer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function loadScript(src, cb) &#123;</span><br><span class="line">      var script &#x3D; document.createElement(&#39;script&#39;);</span><br><span class="line">          script.type &#x3D; &#39;text&#x2F;javascript&#39;;</span><br><span class="line">          script.src &#x3D; src;</span><br><span class="line"></span><br><span class="line">          if(cb) &#123;</span><br><span class="line">            script.onload &#x3D; cb;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">      document.body.appendChild(script);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function _handleAction(text) &#123;</span><br><span class="line">      if(_instance.action.addMessage) &#123;</span><br><span class="line">        _interface.message.human(&#123;</span><br><span class="line">          delay: 100,</span><br><span class="line">          content: text</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      _instance.action.show &#x3D; !_instance.action.autoHide;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var _botuiComponent &#x3D; &#123;</span><br><span class="line">      template: &#39;&lt;div class&#x3D;\&quot;botui botui-container\&quot; v-botui-container&gt;&lt;div class&#x3D;\&quot;botui-messages-container\&quot;&gt;&lt;div v-for&#x3D;\&quot;msg in messages\&quot; class&#x3D;\&quot;botui-message\&quot; :class&#x3D;\&quot;msg.cssClass\&quot; v-botui-scroll&gt;&lt;transition name&#x3D;\&quot;slide-fade\&quot;&gt;&lt;div v-if&#x3D;\&quot;msg.visible\&quot;&gt;&lt;div v-if&#x3D;\&quot;msg.photo &amp;&amp; !msg.loading\&quot; :class&#x3D;\&quot;[\&#39;profil\&#39;, \&#39;profile\&#39;, &#123;human: msg.human, \&#39;agent\&#39;: !msg.human&#125;]\&quot;&gt; &lt;img :src&#x3D;\&quot;msg.photo\&quot; :class&#x3D;\&quot;[&#123;human: msg.human, \&#39;agent\&#39;: !msg.human&#125;]\&quot;&gt;&lt;&#x2F;div&gt;&lt;div :class&#x3D;\&quot;[&#123;human: msg.human, \&#39;botui-message-content\&#39;: true&#125;, msg.type]\&quot;&gt;&lt;span v-if&#x3D;\&quot;msg.type &#x3D;&#x3D; \&#39;text\&#39;\&quot; v-text&#x3D;\&quot;msg.content\&quot; v-botui-markdown&gt;&lt;&#x2F;span&gt;&lt;span v-if&#x3D;\&quot;msg.type &#x3D;&#x3D; \&#39;html\&#39;\&quot; v-html&#x3D;\&quot;msg.content\&quot;&gt;&lt;&#x2F;span&gt; &lt;iframe v-if&#x3D;\&quot;msg.type &#x3D;&#x3D; \&#39;embed\&#39;\&quot; :src&#x3D;\&quot;msg.content\&quot; frameborder&#x3D;\&quot;0\&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;transition&gt;&lt;div v-if&#x3D;\&quot;msg.photo &amp;&amp; msg.loading &amp;&amp; !msg.human\&quot; :class&#x3D;\&quot;[\&#39;profil\&#39;, \&#39;profile\&#39;, &#123;human: msg.human, \&#39;agent\&#39;: !msg.human&#125;]\&quot;&gt; &lt;img :src&#x3D;\&quot;msg.photo\&quot; :class&#x3D;\&quot;[&#123;human: msg.human, \&#39;agent\&#39;: !msg.human&#125;]\&quot;&gt;&lt;&#x2F;div&gt;&lt;div v-if&#x3D;\&quot;msg.loading\&quot; class&#x3D;\&quot;botui-message-content loading\&quot;&gt;&lt;i class&#x3D;\&quot;dot\&quot;&gt;&lt;&#x2F;i&gt;&lt;i class&#x3D;\&quot;dot\&quot;&gt;&lt;&#x2F;i&gt;&lt;i class&#x3D;\&quot;dot\&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;\&quot;botui-actions-container\&quot;&gt;&lt;transition name&#x3D;\&quot;slide-fade\&quot;&gt;&lt;div v-if&#x3D;\&quot;action.show\&quot; v-botui-scroll&gt;&lt;form v-if&#x3D;\&quot;action.type &#x3D;&#x3D; \&#39;text\&#39;\&quot; class&#x3D;\&quot;botui-actions-text\&quot; @submit.prevent&#x3D;\&quot;handle_action_text()\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.text.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-text-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.text.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;input type&#x3D;\&quot;text\&quot; ref&#x3D;\&quot;input\&quot; :type&#x3D;\&quot;action.text.sub_type\&quot; v-model&#x3D;\&quot;action.text.value\&quot; class&#x3D;\&quot;botui-actions-text-input\&quot; :placeholder&#x3D;\&quot;action.text.placeholder\&quot; :size&#x3D;\&quot;action.text.size\&quot; :value&#x3D;\&quot; action.text.value\&quot; :class&#x3D;\&quot;action.text.cssClass\&quot; required v-focus&#x2F;&gt; &lt;button type&#x3D;\&quot;submit\&quot; :class&#x3D;\&quot;&#123;\&#39;botui-actions-buttons-button\&#39;: !!action.text.button, \&#39;botui-actions-text-submit\&#39;: !action.text.button&#125;\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.text.button &amp;&amp; action.text.button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.text.button.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;span&gt;&#123;&#123;(action.text.button &amp;&amp; action.text.button.label) || \&#39;Go\&#39;&#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;&lt;&#x2F;form&gt;&lt;form v-if&#x3D;\&quot;action.type &#x3D;&#x3D; \&#39;select\&#39;\&quot; class&#x3D;\&quot;botui-actions-select\&quot; @submit.prevent&#x3D;\&quot;handle_action_select()\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.select.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-select-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.select.icon\&quot;&gt;&lt;&#x2F;i&gt;&lt;v-select v-if&#x3D;\&quot;action.select.searchselect &amp;&amp; !action.select.multipleselect\&quot; v-model&#x3D;\&quot;action.select.value\&quot; :value&#x3D;\&quot;action.select.value\&quot; :placeholder&#x3D;\&quot;action.select.placeholder\&quot; class&#x3D;\&quot;botui-actions-text-searchselect\&quot; :label&#x3D;\&quot;action.select.label\&quot; :options&#x3D;\&quot;action.select.options\&quot;&gt;&lt;&#x2F;v-select&gt;&lt;v-select v-else-if&#x3D;\&quot;action.select.searchselect &amp;&amp; action.select.multipleselect\&quot; multiple v-model&#x3D;\&quot;action.select.value\&quot; :value&#x3D;\&quot;action.select.value\&quot; :placeholder&#x3D;\&quot;action.select.placeholder\&quot; class&#x3D;\&quot;botui-actions-text-searchselect\&quot; :label&#x3D;\&quot;action.select.label\&quot; :options&#x3D;\&quot;action.select.options\&quot;&gt;&lt;&#x2F;v-select&gt; &lt;select v-else v-model&#x3D;\&quot;action.select.value\&quot; class&#x3D;\&quot;botui-actions-text-select\&quot; :placeholder&#x3D;\&quot;action.select.placeholder\&quot; :size&#x3D;\&quot;action.select.size\&quot; :class&#x3D;\&quot;action.select.cssClass\&quot; required v-focus&gt;&lt;option v-for&#x3D;\&quot;option in action.select.options\&quot; :class&#x3D;\&quot;action.select.optionClass\&quot; v-bind:value&#x3D;\&quot;option.value\&quot; :disabled&#x3D;\&quot;(option.value &#x3D;&#x3D; \&#39;\&#39;)?true:false\&quot; :selected&#x3D;\&quot;(action.select.value &#x3D;&#x3D; option.value)?\&#39;selected\&#39;:\&#39;\&#39;\&quot;&gt; &#123;&#123; option.text &#125;&#125;&lt;&#x2F;option&gt;&lt;&#x2F;select&gt; &lt;button type&#x3D;\&quot;submit\&quot; :class&#x3D;\&quot;&#123;\&#39;botui-actions-buttons-button\&#39;: !!action.select.button, \&#39;botui-actions-select-submit\&#39;: !action.select.button&#125;\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.select.button &amp;&amp; action.select.button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.select.button.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;span&gt;&#123;&#123;(action.select.button &amp;&amp; action.select.button.label) || \&#39;Ok\&#39;&#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;&lt;&#x2F;form&gt;&lt;div v-if&#x3D;\&quot;action.type &#x3D;&#x3D; \&#39;button\&#39;\&quot; class&#x3D;\&quot;botui-actions-buttons\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt; &lt;button type&#x3D;\&quot;button\&quot; :class&#x3D;\&quot;button.cssClass\&quot; class&#x3D;\&quot;botui-actions-buttons-button\&quot; v-botui-scroll v-for&#x3D;\&quot;button in action.button.buttons\&quot; @click&#x3D;\&quot;handle_action_button(button)\&quot;&gt;&lt;i v-if&#x3D;\&quot;button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + button.icon\&quot;&gt;&lt;&#x2F;i&gt; &#123;&#123;button.text&#125;&#125;&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;&lt;form v-if&#x3D;\&quot;action.type &#x3D;&#x3D; \&#39;buttontext\&#39;\&quot; class&#x3D;\&quot;botui-actions-text\&quot; @submit.prevent&#x3D;\&quot;handle_action_text()\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.text.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-text-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.text.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;input type&#x3D;\&quot;text\&quot; ref&#x3D;\&quot;input\&quot; :type&#x3D;\&quot;action.text.sub_type\&quot; v-model&#x3D;\&quot;action.text.value\&quot; class&#x3D;\&quot;botui-actions-text-input\&quot; :placeholder&#x3D;\&quot;action.text.placeholder\&quot; :size&#x3D;\&quot;action.text.size\&quot; :value&#x3D;\&quot;action.text.value\&quot; :class&#x3D;\&quot;action.text.cssClass\&quot; required v-focus&#x2F;&gt; &lt;button type&#x3D;\&quot;submit\&quot; :class&#x3D;\&quot;&#123;\&#39;botui-actions-buttons-button\&#39;: !!action.text.button, \&#39;botui-actions-text-submit\&#39;: !action.text.button&#125;\&quot;&gt;&lt;i v-if&#x3D;\&quot;action.text.button &amp;&amp; action.text.button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + action.text.button.icon\&quot;&gt;&lt;&#x2F;i&gt; &lt;span&gt;&#123;&#123;(action.text.button &amp;&amp; action.text.button.label) || \&#39;Go\&#39;&#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;&lt;div class&#x3D;\&quot;botui-actions-buttons\&quot; :class&#x3D;\&quot;action.cssClass\&quot;&gt; &lt;button type&#x3D;\&quot;button\&quot; :class&#x3D;\&quot;button.cssClass\&quot; class&#x3D;\&quot;botui-actions-buttons-button\&quot; v-for&#x3D;\&quot;button in action.button.buttons\&quot; @click&#x3D;\&quot;handle_action_button(button)\&quot; autofocus&gt;&lt;i v-if&#x3D;\&quot;button.icon\&quot; class&#x3D;\&quot;botui-icon botui-action-button-icon fa\&quot; :class&#x3D;\&quot;\&#39;fa-\&#39; + button.icon\&quot;&gt;&lt;&#x2F;i&gt; &#123;&#123;button.text&#125;&#125;&lt;&#x2F;button&gt;&lt;&#x2F;div&gt;&lt;&#x2F;form&gt;&lt;&#x2F;div&gt;&lt;&#x2F;transition&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&#39;, &#x2F;&#x2F; replaced by HTML template during build. see Gulpfile.js</span><br><span class="line">      data: function () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          action: &#123;</span><br><span class="line">            text: &#123;</span><br><span class="line">              size: 30,</span><br><span class="line">              placeholder: &#39;Write here ..&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            button: &#123;&#125;,</span><br><span class="line">            show: false,</span><br><span class="line">            type: &#39;text&#39;,</span><br><span class="line">            autoHide: true,</span><br><span class="line">            addMessage: true</span><br><span class="line">          &#125;,</span><br><span class="line">          messages: []</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;,</span><br><span class="line">      computed: &#123;</span><br><span class="line">        isMobile: function () &#123;</span><br><span class="line">          return root.innerWidth &amp;&amp; root.innerWidth &lt;&#x3D; 768;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            handle_action_button: function (button) &#123;</span><br><span class="line">          for (var i &#x3D; 0; i &lt; this.action.button.buttons.length; i++) &#123;</span><br><span class="line">            if(this.action.button.buttons[i].value &#x3D;&#x3D; button.value &amp;&amp; typeof(this.action.button.buttons[i].event) &#x3D;&#x3D; &#39;function&#39;) &#123;</span><br><span class="line">              this.action.button.buttons[i].event(button);</span><br><span class="line">              if (this.action.button.buttons[i].actionStop) return false;</span><br><span class="line">              break;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          _handleAction(button.text);</span><br><span class="line"></span><br><span class="line">          var defaultActionObj &#x3D; &#123;</span><br><span class="line">            type: &#39;button&#39;,</span><br><span class="line">            text: button.text,</span><br><span class="line">            value: button.value</span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line">          for (var eachProperty in button) &#123;</span><br><span class="line">            if (button.hasOwnProperty(eachProperty)) &#123;</span><br><span class="line">              if (eachProperty !&#x3D;&#x3D; &#39;type&#39; &amp;&amp; eachProperty !&#x3D;&#x3D; &#39;text&#39; &amp;&amp; eachProperty !&#x3D;&#x3D; &#39;value&#39;) &#123;</span><br><span class="line">                defaultActionObj[eachProperty] &#x3D; button[eachProperty];</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          _actionResolve(defaultActionObj);</span><br><span class="line">            &#125;,</span><br><span class="line">            handle_action_text: function () &#123;</span><br><span class="line">                if(!this.action.text.value) return;</span><br><span class="line">          _handleAction(this.action.text.value);</span><br><span class="line">                _actionResolve(&#123;</span><br><span class="line">            type: &#39;text&#39;,</span><br><span class="line">            value: this.action.text.value</span><br><span class="line">          &#125;);</span><br><span class="line">                this.action.text.value &#x3D; &#39;&#39;;</span><br><span class="line">            &#125;,</span><br><span class="line">        handle_action_select: function () &#123;</span><br><span class="line">          if(this.action.select.searchselect &amp;&amp; !this.action.select.multipleselect) &#123;</span><br><span class="line">            if(!this.action.select.value.value) return;</span><br><span class="line">            _handleAction(this.action.select.value[this.action.select.label]);</span><br><span class="line">            _actionResolve(&#123;</span><br><span class="line">              type: &#39;text&#39;,</span><br><span class="line">              value: this.action.select.value.value,</span><br><span class="line">              text: this.action.select.value.text,</span><br><span class="line">              obj: this.action.select.value</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">          if(this.action.select.searchselect &amp;&amp; this.action.select.multipleselect) &#123;</span><br><span class="line">            if(!this.action.select.value) return;</span><br><span class="line">            var values &#x3D; new Array();</span><br><span class="line">            var labels &#x3D; new Array();</span><br><span class="line">            for (var i &#x3D; 0; i &lt; this.action.select.value.length; i++) &#123;</span><br><span class="line">              values.push(this.action.select.value[i].value);</span><br><span class="line">              labels.push(this.action.select.value[i][this.action.select.label]);</span><br><span class="line">            &#125;</span><br><span class="line">            _handleAction(labels.join(&#39;, &#39;));</span><br><span class="line">            _actionResolve(&#123;</span><br><span class="line">              type: &#39;text&#39;,</span><br><span class="line">              value: values.join(&#39;, &#39;),</span><br><span class="line">              text: labels.join(&#39;, &#39;),</span><br><span class="line">              obj: this.action.select.value</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">          else &#123;</span><br><span class="line">            if(!this.action.select.value) return;</span><br><span class="line">            for (var i &#x3D; 0; i &lt; this.action.select.options.length; i++) &#123; &#x2F;&#x2F; Find select title</span><br><span class="line">              if (this.action.select.options[i].value &#x3D;&#x3D; this.action.select.value) &#123;</span><br><span class="line">                _handleAction(this.action.select.options[i].text);</span><br><span class="line">                _actionResolve(&#123;</span><br><span class="line">                  type: &#39;text&#39;,</span><br><span class="line">                  value: this.action.select.value,</span><br><span class="line">                  text: this.action.select.options[i].text</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    root.Vue.directive(&#39;botui-markdown&#39;, function (el, binding) &#123;</span><br><span class="line">      if(binding.value &#x3D;&#x3D; &#39;false&#39;) return; &#x2F;&#x2F; v-botui-markdown&#x3D;&quot;false&quot;</span><br><span class="line">      el.innerHTML &#x3D; _parseMarkDown(el.textContent);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    root.Vue.directive(&#39;botui-scroll&#39;, &#123;</span><br><span class="line">      inserted: function (el) &#123;</span><br><span class="line">        _container.scrollTop &#x3D; _container.scrollHeight;</span><br><span class="line">        &#x2F;&#x2F; 弹弹乐问题定位</span><br><span class="line">    el.scrollIntoView(&#123;behavior: &quot;smooth&quot;, block: &quot;center&quot;, inline: &quot;nearest&quot;&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    root.Vue.directive(&#39;focus&#39;, &#123;</span><br><span class="line">      inserted: function (el) &#123;</span><br><span class="line">        el.focus();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    root.Vue.directive(&#39;botui-container&#39;, &#123;</span><br><span class="line">      inserted: function (el) &#123;</span><br><span class="line">        _container &#x3D; el;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    _botApp &#x3D; new root.Vue(&#123;</span><br><span class="line">      components: &#123;</span><br><span class="line">        &#39;bot-ui&#39;: _botuiComponent</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).$mount(&#39;#&#39; + id);</span><br><span class="line"></span><br><span class="line">    var _instance &#x3D; _botApp.$children[0]; &#x2F;&#x2F; to access the component&#39;s data</span><br><span class="line"></span><br><span class="line">    function _addMessage(_msg) &#123;</span><br><span class="line"></span><br><span class="line">      if(!_msg.loading &amp;&amp; !_msg.content) &#123;</span><br><span class="line">        throw Error(&#39;BotUI: &quot;content&quot; is required in a non-loading message object.&#39;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      _msg.type &#x3D; _msg.type || &#39;text&#39;;</span><br><span class="line">      _msg.visible &#x3D; (_msg.delay || _msg.loading) ? false : true;</span><br><span class="line">      var _index &#x3D; _instance.messages.push(_msg) - 1;</span><br><span class="line"></span><br><span class="line">      return new Promise(function (resolve, reject) &#123;</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          if(_msg.delay) &#123;</span><br><span class="line">            _msg.visible &#x3D; true;</span><br><span class="line"></span><br><span class="line">            if(_msg.loading) &#123;</span><br><span class="line">              _msg.loading &#x3D; false;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          resolve(_index);</span><br><span class="line">        &#125;, _msg.delay || 0);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function _checkOpts(_opts) &#123;</span><br><span class="line">      if(typeof _opts &#x3D;&#x3D;&#x3D; &#39;string&#39;) &#123;</span><br><span class="line">        _opts &#x3D; &#123;</span><br><span class="line">          content: _opts</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      return _opts || &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    _interface.message &#x3D;  &#123;</span><br><span class="line">      add: function (addOpts) &#123;</span><br><span class="line">        return _addMessage( _checkOpts(addOpts) );</span><br><span class="line">      &#125;,</span><br><span class="line">      bot: function (addOpts) &#123;</span><br><span class="line">        addOpts &#x3D; _checkOpts(addOpts);</span><br><span class="line">        return _addMessage(addOpts);</span><br><span class="line">      &#125;,</span><br><span class="line">      human: function (addOpts) &#123;</span><br><span class="line">        addOpts &#x3D; _checkOpts(addOpts);</span><br><span class="line">        addOpts.human &#x3D; true;</span><br><span class="line">        return _addMessage(addOpts);</span><br><span class="line">      &#125;,</span><br><span class="line">      get: function (index) &#123;</span><br><span class="line">        return Promise.resolve(_instance.messages[index]);</span><br><span class="line">      &#125;,</span><br><span class="line">      remove: function (index) &#123;</span><br><span class="line">        _instance.messages.splice(index, 1);</span><br><span class="line">        return Promise.resolve();</span><br><span class="line">      &#125;,</span><br><span class="line">      update: function (index, msg) &#123; &#x2F;&#x2F; only content can be updated, not the message type.</span><br><span class="line">        var _msg &#x3D; _instance.messages[index];</span><br><span class="line">        _msg.content &#x3D; msg.content;</span><br><span class="line">        _msg.visible &#x3D; !msg.loading;</span><br><span class="line">        _msg.loading &#x3D; !!msg.loading;</span><br><span class="line">        return Promise.resolve(msg.content);</span><br><span class="line">      &#125;,</span><br><span class="line">      removeAll: function () &#123;</span><br><span class="line">        _instance.messages.splice(0, _instance.messages.length);</span><br><span class="line">        return Promise.resolve();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    function mergeAtoB(objA, objB) &#123;</span><br><span class="line">      for (var prop in objA) &#123;</span><br><span class="line">        if (!objB.hasOwnProperty(prop)) &#123;</span><br><span class="line">          objB[prop] &#x3D; objA[prop];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function _checkAction(_opts) &#123;</span><br><span class="line">      if(!_opts.action &amp;&amp; !_opts.actionButton  &amp;&amp; !_opts.actionText) &#123;</span><br><span class="line">        throw Error(&#39;BotUI: &quot;action&quot; property is required.&#39;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function _showActions(_opts) &#123;</span><br><span class="line"></span><br><span class="line">      _checkAction(_opts);</span><br><span class="line"></span><br><span class="line">      mergeAtoB(&#123;</span><br><span class="line">        type: &#39;text&#39;,</span><br><span class="line">        cssClass: &#39;&#39;,</span><br><span class="line">        autoHide: true,</span><br><span class="line">        addMessage: true</span><br><span class="line">      &#125;, _opts);</span><br><span class="line"></span><br><span class="line">      _instance.action.type &#x3D; _opts.type;</span><br><span class="line">      _instance.action.cssClass &#x3D; _opts.cssClass;</span><br><span class="line">      _instance.action.autoHide &#x3D; _opts.autoHide;</span><br><span class="line">      _instance.action.addMessage &#x3D; _opts.addMessage;</span><br><span class="line"></span><br><span class="line">      return new Promise(function(resolve, reject) &#123;</span><br><span class="line">        _actionResolve &#x3D; resolve; &#x2F;&#x2F; resolved when action is performed, i.e: button clicked, text submitted, etc.</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          _instance.action.show &#x3D; true;</span><br><span class="line">        &#125;, _opts.delay || 0);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    _interface.action &#x3D; &#123;</span><br><span class="line">      show: _showActions,</span><br><span class="line">      hide: function () &#123;</span><br><span class="line">        _instance.action.show &#x3D; false;</span><br><span class="line">        return Promise.resolve();</span><br><span class="line">      &#125;,</span><br><span class="line">      text: function (_opts) &#123;</span><br><span class="line">        _checkAction(_opts);</span><br><span class="line">        _instance.action.text &#x3D; _opts.action;</span><br><span class="line">        return _showActions(_opts);</span><br><span class="line">      &#125;,</span><br><span class="line">      button: function (_opts) &#123;</span><br><span class="line">        _checkAction(_opts);</span><br><span class="line">        _opts.type &#x3D; &#39;button&#39;;</span><br><span class="line">        _instance.action.button.buttons &#x3D; _opts.action;</span><br><span class="line">        return _showActions(_opts);</span><br><span class="line">      &#125;,</span><br><span class="line">      select: function (_opts) &#123;</span><br><span class="line">        _checkAction(_opts);</span><br><span class="line">        _opts.type &#x3D; &#39;select&#39;;</span><br><span class="line">        _opts.action.label &#x3D; _opts.action.label || &#39;text&#39;;</span><br><span class="line">        _opts.action.value &#x3D; _opts.action.value || &#39;&#39;;</span><br><span class="line">        _opts.action.searchselect &#x3D; typeof _opts.action.searchselect !&#x3D;&#x3D; &#39;undefined&#39; ? _opts.action.searchselect : _options.searchselect;</span><br><span class="line">        _opts.action.multipleselect &#x3D; _opts.action.multipleselect || false;</span><br><span class="line">        if (_opts.action.searchselect &amp;&amp; typeof(_opts.action.value) &#x3D;&#x3D; &#39;string&#39;) &#123;</span><br><span class="line">          if (!_opts.action.multipleselect) &#123;</span><br><span class="line">            for (var i &#x3D; 0; i &lt; _opts.action.options.length; i++) &#123; &#x2F;&#x2F; Find object</span><br><span class="line">              if (_opts.action.options[i].value &#x3D;&#x3D; _opts.action.value) &#123;</span><br><span class="line">                _opts.action.value &#x3D; _opts.action.options[i]</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          else &#123;</span><br><span class="line">            var vals &#x3D; _opts.action.value.split(&#39;,&#39;);</span><br><span class="line">            _opts.action.value &#x3D; new Array();</span><br><span class="line">            for (var i &#x3D; 0; i &lt; _opts.action.options.length; i++) &#123; &#x2F;&#x2F; Find object</span><br><span class="line">              for (var j &#x3D; 0; j &lt; vals.length; j++) &#123; &#x2F;&#x2F; Search values</span><br><span class="line">                if (_opts.action.options[i].value &#x3D;&#x3D; vals[j]) &#123;</span><br><span class="line">                  _opts.action.value.push(_opts.action.options[i]);</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (!_opts.action.searchselect) &#123; _opts.action.options.unshift(&#123;value:&#39;&#39;,text : _opts.action.placeholder&#125;); &#125;</span><br><span class="line">        _instance.action.button &#x3D; _opts.action.button;</span><br><span class="line">        _instance.action.select &#x3D; _opts.action;</span><br><span class="line">        return _showActions(_opts);</span><br><span class="line">      &#125;,</span><br><span class="line">      buttontext: function (_opts) &#123;</span><br><span class="line">        _checkAction(_opts);</span><br><span class="line">        _opts.type &#x3D; &#39;buttontext&#39;;</span><br><span class="line">        _instance.action.button.buttons &#x3D; _opts.actionButton;</span><br><span class="line">        _instance.action.text &#x3D; _opts.actionText;</span><br><span class="line">        return _showActions(_opts);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    if(_options.fontawesome) &#123;</span><br><span class="line">      loadScript(_fontAwesome);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(_options.searchselect) &#123;</span><br><span class="line">      loadScript(_searchselect, function() &#123;</span><br><span class="line">        Vue.component(&#39;v-select&#39;, VueSelect.VueSelect);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(_options.debug) &#123;</span><br><span class="line">      _interface._botApp &#x3D; _botApp; &#x2F;&#x2F; current Vue instance</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return _interface;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  return BotUI;</span><br><span class="line"></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><p>在<code>/root/myblog/source/about/index.md</code>中添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;botui&#x2F;build&#x2F;botui.min.css&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;botui&#x2F;build&#x2F;botui-theme-default.css&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;sang&quot; id&#x3D;&quot;my-botui-app&quot; style&#x3D;&quot;min-height:300px; padding:2px 6px 4px 6px; background-color: rgba(242, 242, 242,0.5); border-radius: 10px&quot;&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">        &lt;h4&gt;与 山河 对话中...&lt;&#x2F;h4&gt;</span><br><span class="line">    &lt;&#x2F;center&gt;</span><br><span class="line">    &lt;bot-ui&gt;</span><br><span class="line">        &lt;center&gt;</span><br><span class="line">            &lt;div style&#x3D;&quot; background-image: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;Fog-Forest&#x2F;cdn@1.7&#x2F;botui&#x2F;loading.svg);background-repeat: no-repeat;background-size: 10em; background-position: center;height: 10em;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;p&gt;Loading&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;&#x2F;center&gt;</span><br><span class="line">    &lt;&#x2F;bot-ui&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;haikesikejiqiang&#x2F;picred@master&#x2F;2020&#x2F;06&#x2F;15&#x2F;botui.min@0.3.7.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&#x2F;js&#x2F;botui.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床系统|搭建</title>
      <link href="2020/11/18/024/"/>
      <url>2020/11/18/024/</url>
      
        <content type="html"><![CDATA[<h2 id="Demo图床搭建"><a href="#Demo图床搭建" class="headerlink" title="Demo图床搭建"></a>Demo图床搭建</h2><ol><li><p>简单方法：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/e0a34e1569f3239eb9e131fcb8b665fc.png" alt="img"></p></li><li><p>复杂方法：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/148ec5c3c80db3c57694b40882bf54b7.png" alt="img"></p></li><li><p>PicGo 上传工具：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/47e2be17ae0df3c95c6b12841e1ef6c3.png" alt="img"></p></li></ol><h2 id="两种方法相同点"><a href="#两种方法相同点" class="headerlink" title="两种方法相同点"></a>两种方法相同点</h2><ul><li>速度快</li><li>浏览器上传（快捷复制按钮）</li><li>PicGo 工具上传</li></ul><h1 id="简单方法"><a href="#简单方法" class="headerlink" title="简单方法"></a>简单方法</h1><h2 id="须知！"><a href="#须知！" class="headerlink" title="须知！"></a>须知！</h2><ol><li>需要绑定 GitHub 账户</li><li>需要将 token 信息上传给后台（有风险，复杂方法可避免）</li></ol><h2 id="绑定-GitHub"><a href="#绑定-GitHub" class="headerlink" title="绑定 GitHub"></a>绑定 GitHub</h2><ol><li><p>点击 <a href="https://chuibi.cn/">这里</a> 进入下图页面，点击箭头位置图标登录：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/df73aaaabe9712b64dd157d0cb03bb70.png" alt="img"></p></li><li><p>输入 GitHub 账户信息，选择 Sign in：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/344b165c34c41b6641414aabf7025e41.png" alt="img"></p><p>出现下图，稍等：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/6d57cc1d8d03d0bb887a68cd335dae7e.png" alt="img"></p></li><li><p>会再次回到主界面，并显示了下图蓝框内容：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/c6651010eaba445832297a1b103e1bd5.png" alt="img"></p></li></ol><h2 id="填写仓库信息"><a href="#填写仓库信息" class="headerlink" title="填写仓库信息"></a>填写仓库信息</h2><ol><li><p>获取 token（在 GitHub 中操作）：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/73af184774df3678594d35ea2a2ec5a1.png" alt="img"></p></li><li><p>点击下图位置图标：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/3ab515b7381db07e67110f4e7db8f33e.png" alt="img"></p></li><li><p>输入以下信息：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/b74b6f0e43cc349b2be37d5e4ce8b1ad.png" alt="img"></p></li><li><p>复制下图蓝框内容，进行 <a href="https://plushine.cn/38834.html#PicGo%E5%9B%BE%E5%BA%8A%E5%B7%A5%E5%85%B7">这一步</a>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/4a407b3112ff5eb3e5405777813a3c83.png" alt="img"></p></li></ol><h1 id="复杂方法"><a href="#复杂方法" class="headerlink" title="复杂方法"></a>复杂方法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前的这篇 <a href="https://plushine.cn/3726.html">图床安装使用</a> 教程中，我对典型的<code>几种错误</code>给出了解决方法，但好多用上 <code>github图床</code> +<code>PicGo工具</code>的小伙伴都在吐槽上面的解决方法有时候也<code>会失效</code>，于是我想起了 <a href="https://www.antmoe.com/">小康</a> 之前安利给我的 <a href="https://www.antmoe.com/posts/c9c6437b/index.html">这种方法</a>。</p><p><a href="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/f77d2a7a9493658041796b38ff7f34d5.png"><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/f77d2a7a9493658041796b38ff7f34d5.png" alt="img"></a></p><p>会报各种错误的原因还是 <code>github</code> 在国内处于<code>半墙不墙</code>的状态，其它就不多说了。</p><p>我试了试那种方法，遇到了几个坑但最后也成功了，用上之后可以说是<code>真香</code>！</p><p>可以前往 <code>demo</code>：<a href="https://img.plushine.cn/">img.plushine.cn</a> 体验</p><p>因为小康的这篇博客没有 <code>虚拟主机</code> 操作的 <code>详细步骤</code> 劝退了很多小白。</p><p>我把那篇教程分享给小伙伴之后，他们也都没有成功，于是就有了<code>这篇博客</code>。</p><h2 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h2><p>这里的虚拟主机需要是<code>国外</code>的，一定是国外的！</p><p>别害怕，不是让你掏钱买虚拟主机，下面提供一个<code>免费虚拟主机</code>购买平台。</p><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><ol><li><p>进入<a href="https://host.iisat.cn/">官网</a>，点击<code>注册</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/d9d6eef1ac784a8629492b3c29e24623.png" alt="img"></p></li><li><p>输入各种信息后<code>点击注册</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/b007906d2d4588f1ba422287cc71dd7f.png" alt="img"></p><p>会自动跳转到登陆页面，点击<code>登陆</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/80365c61baf8501d23fb3fe261edf216.png" alt="img"></p></li><li><p>依次选择：<code>免费主机</code> -&gt; <code>美国免费主机</code> -&gt; <code>立即购买</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/311e543b9b6605539bc3e2fc93989df6.png" alt="img"></p><p>确认订单并且完成订购：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/8dc24028cc1af7c9345d7535e3b947b1.png" alt="img"></p></li><li><p>自动跳转到<code>我的订单</code>页面，点击<code>管理</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/d742000a9dd134a83bedd316c038c708.png" alt="img"></p><p>提示<code>需要验证邮箱</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/de7a469e0b39550d84c358dddf201b7d.png" alt="img"></p><p>点击<code>发送验证码</code>并将验证码填入<code>文本框</code>后选择<code>验证或修改邮箱</code>，再到<code>我的订单</code>页面重复此步骤后进入第 5 步。</p></li><li><p>复制下图中的<code>用户名</code>和<code>密码</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/da63c452c3a05a435bf196fb2534be72.png" alt="img"></p><p>注意：不要更改默认密码，不要更改默认密码，不要更改默认密码！</p></li></ol><h3 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h3><ol><li><p>登陆虚拟主机：点击<code>前往控制面板</code>，选择<code>管理控制面板地址</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/38ef08e96e5df6457b1a156a08fa0b37.png" alt="img"></p></li><li><p>输入前面获取的<code>用户名</code>和<code>密码</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/3224a02db591116e825688491bc7f5f4.png" alt="img"></p><p>进入<code>控制面板</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/a7bd6cfaecefb2739f3e866663745b70.png" alt="img"></p><p>说实话，我以为进去会是 <code>windows系统</code>，哈哈…</p><p>现在你进入后是这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/9ea73ccd21720c54b89d89a6feef12a9.png" alt="img"></p><p>原因是<code>本教程</code>发布刚一天，<code>控制面板</code>改版了…</p><p>区别也不大，我们主要用的是<code>在线文件管理器</code>，位置是：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/15f3a456fcdc39965d9beee6aa8ce327.png" alt="img"></p><p>具体的<code>文件操作</code>方式没变化</p><p>用到其它的自行寻找就好，不再重新截图…</p></li><li><p>点击<a href="https://ww.lanzous.com/ictl3qb">这里</a>将文件下载到本地（不是虚拟主机，是自己电脑），感谢蓝奏云。</p></li><li><p>将下载的文件上传到虚拟主机：</p><p>选择<code>在线文件</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/e28eef470996b478c25d6243396f0291.png" alt="img"></p><p>点击<code>上传文件</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/ec89a2d9bd0e790f6c68fe42025ad1bf.png" alt="img"></p><p>选择刚刚下载的文件，将其上传至<code>虚拟主机</code>。</p></li><li><p>解压上传的文件：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/9d818022e5ced2697d6a8fd7bc10d462.png" alt="img"></p><p>弹窗：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/a0877c4a2aac665c112816b408a12f35.png" alt="img"></p><p>解压后：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/ebe38470581a84e25c70a57034ca9c15.png" alt="img"></p></li><li><p>复制文件到 <code>www目录</code>下</p><p>进入上图框选出的文件夹，勾选全部文件并复制：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/cc8cf6895465776167f3d6c358732cf8.png" alt="img"></p><p>点击上级目录，进入 www 目录选择粘贴：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/0c6437ce9065eead8f57b420b5f71415.png" alt="img"></p></li><li><p>配置 <code>up.php</code> 文件</p><p>点击<code>编辑</code>，打开 <code>up.php</code> 文件：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/22b7df40bb3abb366a14817c77a96161.png" alt="img"></p><p>找到下面的内容：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/e24b652540f7b62ac3abdab6506c4f86.png" alt="img"></p><p>配置内容如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">define(&quot;REPO&quot;,&quot;CDN&quot;);&#x2F;&#x2F;存放图片的仓库名</span><br><span class="line">   define(&quot;USER&quot;,&quot;xingjiahui&quot;);&#x2F;&#x2F;GitHub用户名</span><br><span class="line">define(&quot;MAIL&quot;,&quot;xjhui2000@qq.com&quot;);&#x2F;&#x2F;github绑定的邮箱</span><br><span class="line">   define(&quot;TOKEN&quot;,&quot;github_token&quot;); &#x2F;&#x2F;github页面获取token,获取方法见下图</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;数据库配置文件</span><br><span class="line">   $database &#x3D; array(</span><br><span class="line">           &#39;dbname&#39; &#x3D;&gt; &#39;s9940968&#39;, &#x2F;&#x2F;虚拟主机用户名</span><br><span class="line">           &#39;host&#39; &#x3D;&gt; &#39;localhost&#39;,</span><br><span class="line">           &#39;port&#39; &#x3D;&gt; 3306,</span><br><span class="line">           &#39;user&#39; &#x3D;&gt; &#39;s9940968&#39;, &#x2F;&#x2F;虚拟主机用户名</span><br><span class="line">           &#39;pass&#39; &#x3D;&gt; &#39;******&#39;, &#x2F;&#x2F;虚拟主机密码</span><br><span class="line">       );</span><br></pre></td></tr></table></figure><p>进入 <code>github</code> 后按下图获取 <code>token</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409192555.png" alt="img"></p><p>将获取的 <code>token</code> 填到配置文件的指定位置。</p></li><li><p>导入数据库</p><p>进入 <code>www/</code> 目录：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/ef0ed74c53b4af4dda116070e5c714c6.png" alt="img"></p><p>弹出框中输入<code>密码</code>（虚拟主机密码）：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/3fc672033d5ee277eda94bc276c115fd.png" alt="img"></p></li></ol><h3 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h3><ol><li><p>查看绑定的<code>域名</code></p><p>点击<code>域名绑定</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/c76712082e3357e6a3e2b7c20f73803c.png" alt="img"></p><p>复制绑定的<code>域名</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/950daad92727f18b719b3a6a036f31f8.png" alt="img"></p></li><li><p>浏览器输入复制的域名：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/3595d2c1c9f1a11e76617a98d648c12b.png" alt="img"></p><blockquote><p>2020.11.12 更新</p></blockquote><p>如果域名无法访问：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/12/a7f56a727d4a994783fdf0df688f98bc.png" alt="img"></p><p>可以通过绑定域名解决，我这里给出两种方法（自己有域名，自己无域名）：</p><ul><li><p>自己有域名：</p><ul><li><p>绑定域名（img.plushine.cn 为例）：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/12/f636b6a3e5823b82ab300c828f707b47.png" alt="img"></p></li><li><p>添加解析记录：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/12/528328e1b13ee5653bbb424c0104ba93.png" alt="img"></p><p>注意：</p><ul><li>plushine.cn 的主机记录为：@</li><li>img.plushine.cn 的主机记录为：img</li><li>test.plushine.cn 的主机记录为：test</li><li>规律自己找…</li></ul></li></ul></li><li><p>自己无域名：</p><ul><li><p>申请一个免费的二级域名：<a href="http://www.pxixi.cn/">http://www.pxixi.cn/</a> ，（需要注册账号，方法自行摸索）</p></li><li><p>登录后，添加解析记录：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/12/383154dcbe6b039c885ae518d3615f25.png" alt="img"></p><p>注意：解析即代表申请了一个免费的二级域名，域名是：plushine.aote.xyz</p></li><li><p>域名绑定：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/12/284fe43d8ddd720945073209e7de1919.png" alt="img"></p><p>注意：绑定的域名和添加的解析记录一定要一致</p></li></ul></li></ul><p>访问新域名：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/12/06f5c93d1246821815e628d614a3f03b.png" alt="img"></p></li><li><p>测试能否上传：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/d0d383f96bf5517b238881db38bae990.png" alt="img"></p><ul><li><p>报错：<code>请求上传接口出现异常</code></p><p>解决方法：更改 <code>php版本</code></p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/3582ae7424ece29fda6373384e4a429a.png" alt="img"></p></li><li><p>图片无法显示：编辑 up.php-&gt; 搜索 @latest 把 latest 修改为 main</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/cc56b7fd3cf49e187dd3fd24b82485fb.png" alt="img"></p></li></ul></li><li><p>再次测试，上传成功：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/74fde4f474661d3c722826ceb79e1e7e.png" alt="img"></p></li></ol><p>这样<code>网页版图床</code>就完成啦！</p><h1 id="PicGo-图床工具"><a href="#PicGo-图床工具" class="headerlink" title="PicGo 图床工具"></a>PicGo 图床工具</h1><blockquote><p>需要提前安装 <a href="http://nodejs.cn/download/">node.js</a> 否则插件会安装失败！更新于 2020.07.27 16:23:20</p></blockquote><p>上面的图床需要<code>打开浏览器</code>，如果你觉得很麻烦，那么推荐你使用 <code>PicGo</code> 这款开源的<code>图床工具</code>，既不需要打开浏览器又附带了写博客刚需的一些功能，例如相册：</p><p><a href="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/603af8188ce9bcf1ee20b837a6f26fee.png"><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/603af8188ce9bcf1ee20b837a6f26fee.png" alt="img"></a></p><p>使用 <code>PicGo</code> 图床工具，务必先保证上面的<code>浏览器图床</code>测试正常！</p><h2 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h2><p><code>GitHub项目</code>地址在 <a href="https://github.com/Molunerfinn/PicGo">这里</a>，图床工具的下载链接可以在 <code>README</code> 中获取。</p><p>因为国内下载速度很慢，不限速链接在 <a href="https://ww.lanzous.com/ib5geof">这里</a>，感谢蓝奏云！</p><p>安装方法就不多说了。</p><p><a href="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/e8d839bc54d109daa3927196940ba244.png"><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/e8d839bc54d109daa3927196940ba244.png" alt="img"></a></p><h2 id="PicGo-配置"><a href="#PicGo-配置" class="headerlink" title="PicGo 配置"></a>PicGo 配置</h2><ol><li><p><code>插件设置</code>中搜索 <code>web-uploader</code> 并安装：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/a18e39c4b7506fd56542ab4b16e2c157.png" alt="img"></p><p> 安装后可以在<code>图床设置</code>中查看：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/0a2de6821fd9b0a06cfb679cb6578168.png" alt="img"></p></li><li><p>配置插件：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">API地址：http:&#x2F;&#x2F;虚拟主机用户名.m.awhost.cn&#x2F;up.php #简单方法填写获取的链接：https:&#x2F;&#x2F;chuibi.cn&#x2F;up.php?xxxxxx</span><br><span class="line">POST参数名：pic</span><br><span class="line">JSON路径：data.url</span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/292655fae7b92c22f25ba9a2ecbd526c.png" alt="img"></p></li><li><p>测试：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/84150c331e68ba4279f3f45c4f960555.png" alt="img"></p><p>上传时间过长可能是因虚拟主机<code>网络原因</code>，属正常现象（但<code>很少</code>会出现该情况）。</p><p>上传后也可能在<code>相册</code>不显示，原因是 <code>jsdelivr</code> 现在被墙的厉害，原因是：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/4df229b80fb50ff75abd6609d6de16bb.png" alt="img"></p><p>体谅下，等结束就好了！</p></li></ol><h2 id="PicGo-常用功能"><a href="#PicGo-常用功能" class="headerlink" title="PicGo 常用功能"></a>PicGo 常用功能</h2><ol><li><p>上传方式：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/2a262ff313cb8f08773a2f8f7d6baff7.png" alt="img"></p><p>另外，点击虚线框内任意位置可以选择文件上传。</p></li><li><p>链接格式：在图片上传成功后会自动将你所选取的<code>链接格式</code>复制到剪切板。</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/21/75b2b8a2fe33fc441011b7ecb6c402cd.png" alt="img"></p><ul><li><code>markdown</code>：markdown 格式</li><li><code>html</code>：html 代码</li><li><code>url</code>：url 链接，粘贴到浏览器可直接访问</li><li><code>ubb</code>：没用过…</li><li><code>custom</code>：自定义链接（下面有讲解）</li></ul></li><li><p>自定义链接：</p><p>因为 <code>markdown</code> 语句添加的图片不支持修改<code>图片宽度</code>，但 <code>markdown</code> 兼容 <code>html</code>，自定义链接：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTML</span><br><span class="line">&lt;img src&#x3D;&quot;$url&quot; width&#x3D;&quot;80%&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/d4a75afb0f9a4ee24ccdafa6b8d77359.png" alt="img"></p></li><li><p>相册的使用：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/ca22ef25c74643770040920582bc8664.png" alt="img"></p><p>注意：<code>复制链接</code>也支持 3 中所列举的格式，但如何选择？其实是根据你所选择的<code>链接格式</code>确定的，例如：</p><p> 选择的<code>链接格式</code>是 <code>html</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/b478dd9e67d2c62c7ec9fade58da11e4.png" alt="img"></p><p>在相册中点击<code>复制链接</code>按钮后所复制的<code>链接格式</code>就是 <code>html</code>。</p></li><li><p>更新：如果你的图床绑定了<code>自己的域名</code>，一定要在 <code>picGo</code> 中将 <code>API地址</code>修改成<code>绑定的域名</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/23/bd4121d1409a4634c56e7bb750819e6f.png" alt="img"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> 搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打赏系统|构建</title>
      <link href="2020/11/18/023/"/>
      <url>2020/11/18/023/</url>
      
        <content type="html"><![CDATA[<h2 id="下载并上传"><a href="#下载并上传" class="headerlink" title="下载并上传"></a>下载并上传</h2><ol><li><p>到 <a href="https://github.com/xingjiahui/Hexo-Donate">项目页</a> 选择 <code>clone or download</code> 选择 <code>Download ZIP</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li><li><p>在虚拟主机 <code>控制面板</code> 选择 <code>在线文件管理器</code> 并进入 <code>www</code> 目录下：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>解压后如图：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>框选出的 <code>文件/文件夹</code> 可删除。</p></li></ol><h2 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h2><p>点击 <code>donate_info.sql</code> 文件后的 <code>导入</code> ，提示输入 <code>数据库密码</code> ：</p><p><a href="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/bedfd6547e488be84648b139334fa047.png"><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></a></p><p>数据库密码在下图位置，复制后填入上图位置：</p><p><a href="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/11/9824fa78754002d5a1efdcfcab85c8c2.png"><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></a></p><p>填入密码，点击导入即可：</p><p><a href="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/ffe729a5131d3577fbe2d0a80f87464f.png"><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></a></p><p>注意：</p><ul><li><p>导入后若非上图结果，请检查一下填写的 <code>数据库密码</code> 是否正确</p></li><li><p>为了便于测试，导入的数据库中自带了两条数据：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>测试结束后，可自行删除！</p></li></ul><h2 id="搭建问卷网站"><a href="#搭建问卷网站" class="headerlink" title="搭建问卷网站"></a>搭建问卷网站</h2><p>其实，将项目文件导入后，网站已经搭建完成：</p><p><a href="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/611b8463e1513d64c9972825a124e040.png"><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></a></p><p>但虚拟主机自带的域名为（http），不能满足我们的需要，因此需要自定义域名（并开启https）！</p><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><ol><li><p>登录主机面板首页点击 <code>域名绑定</code>，并按下图操作：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li><li><p>域名解析记录添加方法如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li><li><p>申请ssl证书：可以在域名注册商那里申请，也可以自行百度（证书免费，不要去付费购买）</p></li><li><p>绑定ssl证书：</p><ul><li><p>将申请的ssl证书下载并解压（后缀必须是pem和key，否则代表下载的类型不对）：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li><li><p>回到面板首页，点击SSL证书，按下图操作：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li></ul></li></ol><h2 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h2><blockquote><p>面板首页中点击 ‘在线文件’ 并进入www目录，完成下面的操作</p></blockquote><ol><li><p>配置 <code>getJsonData.php</code></p><p>点击 <code>编辑</code> ：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>找到下图框选出的位置：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>还记得 <code>主机信息</code> 么，将对应的信息替换。</p></li><li><p>配置 <code>regist.php</code></p><p>点击 <code>编辑</code>，找到下图框选出的位置：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>下图位置也要修改：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li><li><p>测试数据库是否配置成功</p><p>访问上面那个域名，填写上信息：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>上传，判断是否配置成功：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p> 注意：只要是提示 <code>错误/警告</code> 一定是操作问题，认真检查。</p></li><li><p>检查数据导出是否正常：</p><p>浏览器访问：<code>域名/getJsonData.php</code></p><p>查看能否导出数据库内容：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li></ol><p>目前为止，<code>打赏页面</code> 和 <code>数据库</code> 已经配置好了，最后就是在 <code>前端</code> 把数据库中的数据展现出来。</p><h2 id="编辑前端页面"><a href="#编辑前端页面" class="headerlink" title="编辑前端页面"></a>编辑前端页面</h2><ol><li><p>fork <a href="https://github.com/xingjiahui/Hexo-Donate">Hexo-Donate</a> 这个项目</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li><li><p>fork后，在自己仓库中的Hexo-Donate项目中编辑donateJS.js文件</p><p>点击下图位置可以在线修改文件：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>修改内容为：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>注意：域名一定是完整的（包含https）。</p></li><li><p>编辑下面的代码并粘贴到前面准备的空白页面：</p><blockquote><p>Hexo框架下无论post（博客）还是page（页面）都是<code>markdown</code>格式，但<code>markdown</code>兼容<code>html</code>提供了很大的便利性。</p></blockquote><p>修改下图位置代码：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>粘贴到空白页面（markdown/html均可）：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTML</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sviptzk&#x2F;HexoStaticFile@master&#x2F;Hexo&#x2F;css&#x2F;custom.min.css&quot;&gt;</span><br><span class="line">&lt;p&gt;截至 &lt;span class&#x3D;&quot;inline-tag red&quot;&gt;nowDate&lt;&#x2F;span&gt;，共收到来自 &lt;span class&#x3D;&quot;inline-tag red&quot;&gt;personNum&lt;&#x2F;span&gt;位小伙伴的打赏，金额为</span><br><span class="line">    &lt;span class&#x3D;&quot;inline-tag red&quot;&gt;sumDonate&lt;&#x2F;span&gt; 元！&lt;&#x2F;p&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th align&#x3D;&quot;center&quot;&gt;用户名&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;th align&#x3D;&quot;center&quot;&gt;打赏方式&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;th align&#x3D;&quot;center&quot;&gt;打赏金额&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;th align&#x3D;&quot;center&quot;&gt;是否核实&lt;&#x2F;th&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;thead&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@latest&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;改成你的github用户名&#x2F;Hexo-donate@master&#x2F;donateJS.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>上面代码中引用css不符合规范，但暂时没有找到替代的方法。</li><li>粘贴该代码后，不要在其前面添加任何内容，否则会显示失败（已知bug，下版本更新）</li></ul></li><li><p>检查前端页面是否能够正常显示数据：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li></ol><h2 id="提醒功能"><a href="#提醒功能" class="headerlink" title="提醒功能"></a>提醒功能</h2><ol><li><p>到 <a href="https://qmsg.zendee.cn/">Qmsg酱</a> 这里登陆并选择一个<code>Qmsg酱小姐姐</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li><li><p>添加一个QQ号：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>注意：记得要添加小姐姐为好友呀，不然怎么给你发消息。</p></li><li><p>点击 <code>文档</code>，用接口地址替换下面代码中的<code>接口地址</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">echo &#39;&lt;script&gt;function Qmsg()&#123;var xhr&#x3D;new XMLHttpRequest();url&#x3D;&quot;接口地址?msg&#x3D;收到新的打赏啦！&quot;;url&#x3D;encodeURI(url);xhr.open(&quot;GET&quot;,url,true);xhr.send()&#125;Qmsg();&lt;&#x2F;script&gt;&#39;;</span><br></pre></td></tr></table></figure></li><li><p>在<code>www</code>目录下编辑<code>regist.php</code>文件，将上面的代码粘贴在下图位置：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p></li></ol><h1 id="后期使用"><a href="#后期使用" class="headerlink" title="后期使用"></a>后期使用</h1><ol><li><p>填写打赏问卷后，点击 <code>返回打赏列表</code> 会跳转到作者的打赏列表：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" alt="img"></p><p>想修改为自己的，可以修改虚拟主机 <code>www</code> 目录下的 <code>index.html</code> 文件：</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/dfb592536c385770cc720c92026a294c.png" alt="img"></p></li><li><p>后期维护：</p><p>当有人打赏后，根据填写的打赏方式去账户看有没有到账。</p><ul><li><p>收到打赏：将数据库中 <code>donate_confirm</code> 字段修改为 <code>YES</code></p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/0ebac5c74e1b186617efdd350df73009.png" alt="img"></p></li><li><p>未收到打赏：在数据库中将该记录删除</p><p><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/c75f22ff5da7c527a9e536fa2eea20bf.png" alt="img"></p></li></ul></li></ol><p>至此， <code>Hexo-Donate</code> 打赏系统全部安装完成！</p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p><a href="https://host.iisat.cn/">爱网云</a>、<a href="https://www.jsdelivr.com/">JsDelivr</a>、<a href="https://qmsg.zendee.cn/">Qmsg酱</a>、<a href="https://my.oschina.net/zhangxuman/blog/504983">乱世中的单纯</a></p><p><a href="https://www.florin-pop.com/blog/2019/03/double-slider-sign-in-up-form/">FLORIN POP</a>、<a href="https://blog.csdn.net/stpeace/article/details/50757929">涛歌依旧</a>、<a href="https://www.cnblogs.com/yiven/p/6491019.html">Yiven</a>、<a href="https://jingyan.baidu.com/article/a3aad71a28c76cb1fb0096b5.html">程序小能手</a></p><p><a href="https://www.php.cn/php-weizijiaocheng-361604.html">怪我咯</a>、<a href="http://mishengqiang.com/sweetalert2/">SweetAlert2</a>、<a href="https://www.cnblogs.com/bigshow1949/p/7116797.html">BigShow</a>、<a href="https://jingyan.baidu.com/article/cdddd41c2bbde413ca00e16a.html">百度经验</a></p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> 搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页脚|看板娘|友链|美化</title>
      <link href="2020/11/18/022/"/>
      <url>2020/11/18/022/</url>
      
        <content type="html"><![CDATA[<h3 id="阅读须知"><a href="#阅读须知" class="headerlink" title="阅读须知"></a>阅读须知</h3><blockquote><p>在本文开头就有说明，在此再说明一下，并不是从零搭建butterfly，只提供相关美化DIY教程，主要针对新手，每一步都算比较详细，所以可能会显得比较啰嗦，所以建议基础比较好小伙伴根据目录选择自己感兴趣的部分跳着看，不要文章没看，上来先喷一下！谢谢⊙o⊙</p></blockquote><h3 id="页面底部-footer-跳动的心"><a href="#页面底部-footer-跳动的心" class="headerlink" title="页面底部 footer 跳动的心"></a>页面底部 footer 跳动的心</h3><h4 id="Butterfly-主题"><a href="#Butterfly-主题" class="headerlink" title="Butterfly 主题"></a>Butterfly 主题</h4><p>编辑博客根目录 <code>/themes/Butterfly/layout/includes/footer.pug</code>文件，</p><p>第一步，将以下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&amp;copy;$&#123;theme.since&#125; - $&#123;nowYear&#125; By $&#123;config.author&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&amp;copy;$&#123;theme.since&#125; - $&#123;nowYear + &#39; &#39;&#125; &lt;i id&#x3D;&quot;heartbeat&quot; class&#x3D;&quot;fa fas fa-heartbeat&quot;&gt;&lt;&#x2F;i&gt; $&#123;config.author&#125;</span><br></pre></td></tr></table></figure><p>第二步，将以下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&amp;copy;$&#123;nowYear&#125; By $&#123;config.author&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&amp;copy;$&#123;nowYear + &#39; &#39;&#125; &lt;i id&#x3D;&quot;heartbeat&quot; class&#x3D;&quot;fa fas fa-heartbeat&quot;&gt;&lt;&#x2F;i&gt; $&#123;config.author&#125;</span><br></pre></td></tr></table></figure><p>将以下内容添加到 <code>&lt;head&gt;&lt;/head&gt;</code> 标签内：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;HCLonely&#x2F;images@master&#x2F;others&#x2F;heartbeat.min.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>具体放置位置，可以参考下图：<br><a href="https://img-blog.csdnimg.cn/20200420132925497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200420132925497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>这样，就有一颗跳动的心 ❤啦 ✿✿ヽ(°▽°)ノ✿<br><a href="https://img-blog.csdnimg.cn/20200420132948247.png"><img src="https://img-blog.csdnimg.cn/20200420132948247.png" alt="img"></a></p><h4 id="其他主题"><a href="#其他主题" class="headerlink" title="其他主题"></a>其他主题</h4><p>将<code>&lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt;</code>添加到需要显示的位置</p><p>同上第 2 步</p><h3 id="添加访客地图"><a href="#添加访客地图" class="headerlink" title="添加访客地图"></a>添加访客地图</h3><p>前往 <a href="https://clustrmaps.com/">clustrmaps</a> 网站注册一个帐号</p><p>找到 <code>Free Tools</code>下面的 <code>Website Widget</code>, 点击 <code>Get Map Widget</code></p><p>输入你的博客网址，点击<code>Next</code></p><p>根据你自己的喜好选择样式<code>Map widget</code>或 <code>Globe Widget</code>（本人使用后者）</p><p>找到如下代码，记住 <code>src (****** 的部分)</code>:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; id&#x3D;&quot;clstr_globe&quot; src&#x3D;&quot;**********************&quot;&gt;</span><br></pre></td></tr></table></figure><p>在 <code>themes\Butterfly\layout\includes\widget</code>文件夹新建<code>card_map.pug</code>文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">.card-widget.card-map</span><br><span class="line">  .card-content</span><br><span class="line">    .item-headline</span><br><span class="line">      i.fa.fa-globe-asia(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">      span&#x3D; _p(&#39;aside.card_map&#39;)</span><br><span class="line">    script#clstr_globe(type&#x3D;&quot;text&#x2F;javascript&quot; defer&#x3D;&quot;defer&quot; src&#x3D;&quot;此处填入你自己的代码&quot;)</span><br></pre></td></tr></table></figure><p>编辑 <code>themes\Butterfly\layout\includes\widget\index.pug</code>文件，在你想要显示的位置插入以下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">if theme.aside.card_map</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_map&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p>具体放置位置，可以参考下图：<br><a href="https://img-blog.csdnimg.cn/20200419190844832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200419190844832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>编辑 <code>butterfly.yml</code> 文件，在 <code>card_webinfo</code> 下面添加一行<code>card_map: true</code></p><p><a href="https://img-blog.csdnimg.cn/20200419191112811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200419191112811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>如果没有图标的话，就将 <code>fontawesome v5</code>版本开启</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line"># fontawesome圖標</span><br><span class="line"># 默認使用的是 fontawesome v4版本的圖標</span><br><span class="line">fontawesome_v5:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>编辑 <code>themes\Butterfly\languages\zh-CN.yml</code>文件 (请根据你的网站语言选择)，找到 <strong>card_announcement: 公告</strong> , 在下面添加一行 <strong>card_map: 访客地图</strong> (后面的文本可自定义)</p><p><a href="https://img-blog.csdnimg.cn/20200419191159352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200419191159352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>如果不想显示，直接把 <code>butterfly.yml</code>文件的<code>card_map: true</code> 改为 <code>card_map: false</code> 即可</p><h3 id="添加Pixiv-日榜"><a href="#添加Pixiv-日榜" class="headerlink" title="添加Pixiv 日榜"></a>添加Pixiv 日榜</h3><p>在 <code>themes\Butterfly\layout\includes\widget</code>文件夹新建 <code>card_pixiv.pug</code>文件，文件内容如下：</p><p>注意：最后三行要保持空格间距一样（直接复制下面代码即可）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">.card-widget.card-pixiv</span><br><span class="line"> .card-content</span><br><span class="line">  .item-headline</span><br><span class="line">    i.fa.fa-image(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">    span&#x3D; _p(&#39;aside.card_pixiv&#39;)</span><br><span class="line">    iframe(src&#x3D;&quot;https:&#x2F;&#x2F;cloud.mokeyjay.com&#x2F;pixiv&quot; frameborder&#x3D;&quot;0&quot;  style&#x3D;&quot;width:99%;height:380px;margin:0;&quot;)</span><br></pre></td></tr></table></figure><p><a href="https://cloud.mokeyjay.com/pixiv">https://cloud.mokeyjay.com/pixiv</a> 使用的是<a href="https://www.mokeyjay.com/">超能小紫</a>提供的服务，也可以自行搭建，搭建方式请看<a href="https://www.mokeyjay.com/archives/1063">这里</a></p><p>编辑 <code>themes\Butterfly\layout\includes\widget\index.pug</code> 文件，在你想要显示的位置插入以下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">if theme.aside.card_pixiv</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_pixiv&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p>具体放置位置，参考下图：<br><a href="https://img-blog.csdnimg.cn/20200419183941492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200419183941492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p><p>编辑 <code>butterfly.yml</code>文件，在 <code>card_webinfo</code> 下面添加一行 <code>card_pixiv: true</code></p><p>可以通过搜索关键词 <code>aside</code>，找到对应位置添加<br><a href="https://img-blog.csdnimg.cn/20200419184046471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200419184046471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>编辑 <code>themes\Butterfly\languages\zh-CN.yml</code>文件 (请根据你的网站语言选择)，找到 <strong>card_announcement: 公告</strong> , 在下面添加一行 <strong>card_pixiv: Pixiv日榜Top50</strong>(后面的文本可自定义)</p><p>如果不想显示，直接把 <code>butterfly.yml</code>文件的 <code>card_pixiv: true</code>改为 <code>card_pixiv: false</code>即可</p><h3 id="添加日历"><a href="#添加日历" class="headerlink" title="添加日历"></a>添加日历</h3><p>安装 <code>hexo-generator-calendar</code> 插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">cnpm install --save git:&#x2F;&#x2F;github.com&#x2F;howiefh&#x2F;hexo-generator-calendar.git</span><br></pre></td></tr></table></figure><p>下载 <code>calendar.js</code>和 <code>languages.js</code> 文件，保存到 <code>themes\Butterfly\source\js</code> 目录</p><ul><li><a href="https://github.com/pengloo53/Hexo-theme-light_cn/blob/master/source/js/calendar.js">calendar.js</a> 下载地址</li><li><a href="https://github.com/pengloo53/Hexo-theme-light_cn/blob/master/source/js/languages.js">languages.js</a> 下载地址</li></ul><p>编辑<code>calendar.js</code> 文件，在文件最后<code>&#125;(jQuery));</code>之前添加:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">$(document).ready(function () &#123;</span><br><span class="line">    $(&#39;#calendar&#39;).aCalendar(&#39;zh-CN&#39;);&#x2F;&#x2F;&#39;zh-CN&#39;请根据自己博客的语言选择</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>具体位置参考下图：<br><a href="https://img-blog.csdnimg.cn/20200419193746630.png"><img src="https://img-blog.csdnimg.cn/20200419193746630.png" alt="img"></a></p><p>编辑 <code>butterfly.yml</code> 文件，以下两个你 <code>butterfly.yml</code>文件里有哪个就用那个，不要都用！选择一个即可</p><ul><li>在 <code>CDN_USE-&gt;js</code> 下面添加如下内容（本人采用这种方式）：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">- &#x2F;js&#x2F;calendar.js</span><br><span class="line">- &#x2F;js&#x2F;languages.js</span><br></pre></td></tr></table></figure><p>具体位置参考下图：<br><a href="https://img-blog.csdnimg.cn/20200419193929972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200419193929972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p><ul><li>在 <code>inject-&gt;bottom</code>下面添加如下内容（如果用了上述方法就不要用了）：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">- &lt;script src&#x3D;&quot;&#x2F;js&#x2F;calendar.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">- &lt;script src&#x3D;&quot;&#x2F;js&#x2F;languages.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>新建 <code>calendar.styl</code>文件，保存到 <code>themes\Butterfly\source\css\_layout</code> 目录下</p><p><a href="https://raw.githubusercontent.com/pengloo53/Hexo-theme-light_cn/master/source/css/_partial/calendar.styl">源文件传送门</a></p><p>原下载处使用会有bug，你可以直接复制如下我改好的代码即可</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">#calendar</span><br><span class="line">  a</span><br><span class="line">    text-decoration none</span><br><span class="line"></span><br><span class="line">.cal-head</span><br><span class="line">  margin-bottom: 15px</span><br><span class="line">  position relative</span><br><span class="line">  height 20px</span><br><span class="line">  padding 8px 6px 2px 6px</span><br><span class="line"></span><br><span class="line">.cal-prev,.cal-next</span><br><span class="line">  position absolute</span><br><span class="line">  top 9px</span><br><span class="line">  width 16px</span><br><span class="line">  height 18px</span><br><span class="line">  padding 3px 4px</span><br><span class="line">  border 1px solid transparent</span><br><span class="line">  color #333</span><br><span class="line">  outline 0</span><br><span class="line"></span><br><span class="line">.cal-prev</span><br><span class="line">  left 8px</span><br><span class="line">  &amp;:before</span><br><span class="line">    border-right 9px solid #333</span><br><span class="line"></span><br><span class="line">.cal-next</span><br><span class="line">  right 8px</span><br><span class="line">  &amp;:before</span><br><span class="line">    border-left 9px solid #333</span><br><span class="line"></span><br><span class="line">.cal-prev:before,.cal-next:before</span><br><span class="line">  content &#39;&#39;</span><br><span class="line">  display block</span><br><span class="line">  width 0</span><br><span class="line">  height 0</span><br><span class="line">  border-top 5px solid transparent</span><br><span class="line">  border-bottom 5px solid transparent</span><br><span class="line"></span><br><span class="line">.cal-title</span><br><span class="line">  width 120px</span><br><span class="line">  margin 0 auto</span><br><span class="line">  color #333</span><br><span class="line">  font bold 14px&#x2F;18px Arial</span><br><span class="line">  text-align center</span><br><span class="line">  a</span><br><span class="line">    border 1px solid transparent</span><br><span class="line">    color #9f9f9f</span><br><span class="line"></span><br><span class="line">.cal,</span><br><span class="line">.cal th,</span><br><span class="line">.cal td</span><br><span class="line">  border 1px solid #d1d1d1</span><br><span class="line"></span><br><span class="line">.cal</span><br><span class="line">  display: table</span><br><span class="line">  border-collapse separate</span><br><span class="line">  border-spacing 0</span><br><span class="line">  border-width 1px 0 0 1px</span><br><span class="line">  table-layout fixed</span><br><span class="line">  width 100%</span><br><span class="line">  margin 0</span><br><span class="line">  th</span><br><span class="line">    background #9f9f9f</span><br><span class="line">    color #fff</span><br><span class="line">    border-width 0 1px 1px 0</span><br><span class="line">    font-weight 700</span><br><span class="line">  td</span><br><span class="line">    border-width 0 1px 1px 0</span><br><span class="line">  tbody</span><br><span class="line">    a</span><br><span class="line">      background-color #007acc</span><br><span class="line">      color #fff</span><br><span class="line">      display block</span><br><span class="line">      font-weight 700</span><br><span class="line">    .cal-today</span><br><span class="line">      background-color #66ecfd</span><br><span class="line">      color #fff</span><br><span class="line">  .cal-gray</span><br><span class="line">    color #bbb8b8</span><br><span class="line"></span><br><span class="line">[data-theme&#x3D;&#39;dark&#39;] .cal .cal-gray</span><br><span class="line">  color #505050</span><br><span class="line"></span><br><span class="line">.cal th,</span><br><span class="line">.cal td</span><br><span class="line">  font-weight normal</span><br><span class="line">  line-height 2.5625</span><br><span class="line">  padding 0</span><br><span class="line">  text-align center</span><br><span class="line"></span><br><span class="line">[data-theme&#x3D;&#39;dark&#39;] .cal .cal-foot</span><br><span class="line">  color #9f9f9f</span><br><span class="line"></span><br><span class="line">.cal .cal-foot</span><br><span class="line">  color #2ca6cb</span><br><span class="line"></span><br><span class="line">.cal-title a:hover,</span><br><span class="line">.cal-prev:hover,</span><br><span class="line">.cal-next:hover,</span><br><span class="line">.cal .cal-foot:hover,</span><br><span class="line">.cal .cal-foot:focus,</span><br><span class="line">.cal tbody a:hover,</span><br><span class="line">.cal tbody a:focus</span><br><span class="line">  background-color #686868</span><br><span class="line">  color #fff</span><br><span class="line">  cursor pointer</span><br></pre></td></tr></table></figure><p>在<code>themes\Butterfly\layout\includes\widget</code> 文件夹新建<code>card_calendar.pug</code> 文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">.card-widget.card-calendar</span><br><span class="line">  .card-content</span><br><span class="line">    .item-headline</span><br><span class="line">      i.far.fa-calendar-alt(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">      span&#x3D; _p(&#39;aside.card_calendar&#39;)</span><br><span class="line">    div.widget-wrap</span><br><span class="line">    div#calendar.widget</span><br></pre></td></tr></table></figure><p>编辑<code>themes\Butterfly\layout\includes\widget\index.pug</code> 文件，在你想要显示的位置插入以下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">if theme.aside.card_calendar</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_calendar&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p>具体位置参考下图：<br><a href="https://img-blog.csdnimg.cn/20200419194253473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200419194253473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p><p>编辑 <code>butterfly.yml</code>文件，在 <code>card_webinfo</code>下面添加一行<code>card_calendar: true</code></p><p><a href="https://img-blog.csdnimg.cn/2020041919435677.png"><img src="https://img-blog.csdnimg.cn/2020041919435677.png" alt="img"></a></p><p>编辑<code>themes\Butterfly\languages\zh-CN.yml</code>文件 (请根据你的网站语言选择)，找到 <strong>card_announcement: 公告</strong> , 在下面添加一行 <strong>card_calendar: 日历</strong> (后面的文本可自定义)</p><p><a href="https://img-blog.csdnimg.cn/20200419194436425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200419194436425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p><p>如果不想显示，直接把 <code>butterfly.yml</code>文件的<code>card_calendar: true</code>改为<code>card_calendar: false</code> 即可</p><h3 id="添加哔哩哔哩番剧页面插件"><a href="#添加哔哩哔哩番剧页面插件" class="headerlink" title="添加哔哩哔哩番剧页面插件"></a>添加哔哩哔哩番剧页面插件</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">npm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">npm install hexo-bilibili-bangumi --update --save</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>将下面的配置写入站点的配置文件<code>_config.yml</code>里 (不是主题的配置文件)。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">bangumi:</span><br><span class="line">  enable: true </span><br><span class="line">  vmid: </span><br><span class="line">  title: &#39;追番列表&#39;</span><br><span class="line">  quote: &#39;生命不息，追番不止！&#39;</span><br><span class="line">  show: 1</span><br><span class="line">  loading: &#39;&#x2F;img&#x2F;bangumi-loading.gif&#39;</span><br></pre></td></tr></table></figure><p><strong>配置介绍</strong></p><ul><li>enable: 是否启用</li><li>vmid: 哔哩哔哩番剧页面的 vmid(uid), 如何获取？</li><li>title: 该页面的标题</li><li>quote: 写在页面开头的一段话，支持 html 语法</li><li>show: 初始显示页面：0: 想看 , 1: 在看 , 2: 看过，默认为 1</li><li>loading: 图片加载完成前的 loading 图片</li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>前往你的 Hexo 博客的根目录</p><p>输入如下命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">hexo new page bangumis</span><br></pre></td></tr></table></figure><p>找到<code>source/bangumis/index.md</code>这个文件</p><p>修改这个文件，添加 <code>type: &quot;bangumis&quot;</code>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">---</span><br><span class="line">title: bangumis</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &quot;bangumis&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>防止请求次数过多插件不再自动获取番剧数据，所以请根据自己的需要在 <code>hexo generate 或 hexo deploy</code> 之前使用<code>hexo bangumi -u</code> 命令更新番剧数据！</p><p>删除数据命令:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">hexo bangumi -d</span><br></pre></td></tr></table></figure><h4 id="获取-uid"><a href="#获取-uid" class="headerlink" title="获取 uid"></a>获取 uid</h4><p>登录哔哩哔哩后前往 <a href="https://space.bilibili.com/">https://space.bilibili.com/</a> 页面，网址最后的一串数字就是 uid</p><p><strong>效果展示</strong><br><a href="https://img-blog.csdnimg.cn/2020042013115126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/2020042013115126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p><h3 id="添加卡通人物（看板娘）"><a href="#添加卡通人物（看板娘）" class="headerlink" title="添加卡通人物（看板娘）"></a>添加卡通人物（看板娘）</h3><p>输入如下命令获取 live2d：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>输入以下命令，下载相应的模型，将 <code>haruto</code> 更换成你想要的模型名称即可（本人就选haruto），更多模型选择请<a href="https://github.com/xiazeyu/live2d-widget-models">点击此处</a>，各个模型的预览请<a href="https://huaji8.top/post/live2d-plugin-2.0/">访问原作者的博客</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">npm install live2d-widget-model-haruto</span><br></pre></td></tr></table></figure><p>打开站点目录下的 <code>_config.yml</code>文件，添加如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">live2d:</span><br><span class="line">enable: true</span><br><span class="line">scriptFrom: local</span><br><span class="line">model: </span><br><span class="line">use: live2d-widget-model-haruto #模型选择</span><br><span class="line">display: </span><br><span class="line">position: right  #模型位置</span><br><span class="line">width: 150       #模型宽度</span><br><span class="line">height: 300      #模型高度</span><br><span class="line">mobile: </span><br><span class="line">show: false      #是否在手机端显示</span><br></pre></td></tr></table></figure><p>执行 <code>hexo g</code> &amp; <code>hexo s</code>，查看页面，发现就会多一个卡通人物啦 ✿✿ヽ(°▽°)ノ✿</p><p><a href="https://img-blog.csdnimg.cn/20200420075033482.png"><img src="https://img-blog.csdnimg.cn/20200420075033482.png" alt="img"></a></p><p>参考：</p><p><a href="https://blog.csdn.net/qq_36759224/article/details/85420403">Hexo 博客优化之博客美化系列（持续更新）</a></p><h3 id="地址栏添加-abbrlink"><a href="#地址栏添加-abbrlink" class="headerlink" title="地址栏添加 abbrlink"></a>地址栏添加 abbrlink</h3><p><strong>背景：</strong></p><p>不想要2020/xx/xx/xxx/xx这样比较长的说明，想要简短一点的。</p><p><strong>解决：</strong></p><p>安装 <code>hexo-abbrlink</code> 插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">npm install hexo-abbrlink</span><br></pre></td></tr></table></figure><p>编辑 站点的 <code>_config.yml</code>文件，找到 <code>permalink</code> , 改成 <strong>permalink: posts/:abbrlink/</strong></p><p>具体位置，可以参考下图：</p><p><a href="https://img-blog.csdnimg.cn/20200420073332447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200420073332447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>最后，在你写的文章 front部分，添加自定义 <code>abbrlink</code> 即可。<br><a href="https://img-blog.csdnimg.cn/20200420073353594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200420073353594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>地址栏变化，成功 ✿✿ヽ(°▽°)ノ✿<br><a href="https://img-blog.csdnimg.cn/20200420073441986.png"><img src="https://img-blog.csdnimg.cn/20200420073441986.png" alt="img"></a></p><h3 id="Gallery-相册图库"><a href="#Gallery-相册图库" class="headerlink" title="Gallery 相册图库"></a>Gallery 相册图库</h3><p>一个图库集合。</p><p>写法</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&lt;div class&#x3D;&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ul><li>name：图库名字</li><li>description：图库描述</li><li>link：连接到对应相册的地址</li><li>img-url：图库封面的地址</li></ul><p>例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&lt;div class&#x3D;&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup &#39;壁纸&#39; &#39;收藏的一些壁纸&#39; &#39;&#x2F;Gallery&#x2F;wallpaper&#39; https:&#x2F;&#x2F;i.loli.net&#x2F;2019&#x2F;11&#x2F;10&#x2F;T7Mu8Aod3egmC4Q.png %&#125;</span><br><span class="line">&#123;% galleryGroup &#39;漫威&#39; &#39;关于漫威的图片&#39; &#39;&#x2F;Gallery&#x2F;marvel&#39; https:&#x2F;&#x2F;i.loli.net&#x2F;2019&#x2F;12&#x2F;25&#x2F;8t97aVlp4hgyBGu.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup &#39;OH MY GIRL&#39; &#39;关于OH MY GIRL的图片&#39; &#39;&#x2F;Gallery&#x2F;ohmygirl&#39; https:&#x2F;&#x2F;i.loli.net&#x2F;2019&#x2F;12&#x2F;25&#x2F;hOqbQ3BIwa6KWpo.jpg %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191226003414.png"><img src="https://yangchaoyi.vip/img/loading.gif" alt="img"></a></p><h3 id="豆瓣插件（movie、book、game）"><a href="#豆瓣插件（movie、book、game）" class="headerlink" title="豆瓣插件（movie、book、game）"></a>豆瓣插件（movie、book、game）</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><p>在最外层站点 <code>_config.yml</code> （⚠️ 注意：不是主题的配置文件）添加如下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line"># 豆瓣</span><br><span class="line">douban:</span><br><span class="line">  user: 211251422</span><br><span class="line">  builtin: true</span><br><span class="line">  book:</span><br><span class="line">    title: &#39;好书推荐&#39;</span><br><span class="line">    quote: &#39;读书好，好读书，读好书&#39;</span><br><span class="line">  movie:</span><br><span class="line">    title: &#39;电影&#39;</span><br><span class="line">    quote: &#39;那些在电影院看过的电影&#39;</span><br><span class="line">  timeout: 10000</span><br></pre></td></tr></table></figure><ul><li>user: 你的豆瓣ID。打开豆瓣，登入账户，然后在右上角点击 ”个人主页“，这时候地址栏的URL大概是这样：<a href="https://www.douban.com/people/xxxxxx/">https://www.douban.com/people/xxxxxx/</a> ，其中的”xxxxxx”就是你的个人ID了。</li><li>builtin: 是否将生成页面的功能嵌入 hexo s 和 hexo g 中，默认是 false ，另一可选项为 true 。</li><li>title: 该页面的标题。</li><li>quote: 写在页面开头的一段话,支持html语法。</li><li>timeout: 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可</li></ul><h4 id="配置-config-文件"><a href="#配置-config-文件" class="headerlink" title="配置 config 文件"></a>配置 config 文件</h4><p>在你的主题的 <code>butterfly.yml</code> 文件中配置以下内容，如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line"># 如果你有使用hexo-douban，可配置這個</span><br><span class="line">douban:</span><br><span class="line">   meta: true</span><br><span class="line">   movies_img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jerryc127&#x2F;butterfly_cdn@2.1.0&#x2F;top_img&#x2F;movie.jpg</span><br><span class="line">   books_img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;blog-gallery@1.0.0&#x2F;1&#x2F;20200206161657.webp</span><br><span class="line">#   games_img:</span><br></pre></td></tr></table></figure><h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><p>前往你的 Hexo 博客的根目录</p><p>输入如下命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">hexo new page books</span><br></pre></td></tr></table></figure><p>找到<code>source/books/index.md</code>这个文件</p><p>修改这个文件，添加 <code>type: &quot;books&quot;</code>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">---</span><br><span class="line">title: 书单</span><br><span class="line">date: 2020-04-19 12:58:56</span><br><span class="line">type: &quot;books&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>同理，对于电影页面</p><p>前往你的 Hexo 博客的根目录</p><p>输入如下命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">hexo new page movies</span><br></pre></td></tr></table></figure><p>找到<code>source/movies/index.md</code>这个文件</p><p>修改这个文件，添加 <code>type: &quot;movies&quot;</code>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">---</span><br><span class="line">title: 电影</span><br><span class="line">date: 2020-04-19 12:58:56</span><br><span class="line">type: &quot;movies&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="友链界面加入自定义文字"><a href="#友链界面加入自定义文字" class="headerlink" title="友链界面加入自定义文字"></a>友链界面加入自定义文字</h3><p>具体效果如下：<br><a href="https://img-blog.csdnimg.cn/20200424114754770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200424114754770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>第一步，在<code>themes/Butterfly/layout/flink.pug</code> 文件内加入如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">p(style&#x3D;&quot;font-size:14px;font-weight:bold&quot;)&#x3D; theme.PS</span><br><span class="line">hr</span><br><span class="line">h2&#x3D; theme.require_headline</span><br><span class="line">ul</span><br><span class="line">  li&#x3D; theme.requirement1</span><br><span class="line">  li&#x3D; theme.requirement2</span><br><span class="line">  li&#x3D; theme.requirement3</span><br><span class="line">  li&#x3D; theme.requirement4</span><br><span class="line">  li&#x3D; theme.requirement5</span><br><span class="line">  li&#x3D; theme.requirement6</span><br><span class="line">hr</span><br><span class="line">h2&#x3D; theme.myInfo</span><br><span class="line">ul</span><br><span class="line">  li&#x3D; theme.info1</span><br><span class="line">  li&#x3D; theme.info2</span><br><span class="line">  li&#x3D; theme.info3</span><br><span class="line">  li&#x3D; theme.info4</span><br></pre></td></tr></table></figure><p>具体位置请参考下图：<br><a href="https://img-blog.csdnimg.cn/20200424124244315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200424124244315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>第二步，在<code>source/_data/butterfly.yml</code> 内加入如下代码（位置随意）：</p><blockquote><p>这里提供我的模板，当然你需要修改成为你自己的风格。</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line"># 友链界面美化</span><br><span class="line">PS: PS：欢迎交换友链，以下是相关注意事项。</span><br><span class="line">require_headline: A Few Requirements</span><br><span class="line">requirement1: 本站不参与商业性网站、下载站、视频站等</span><br><span class="line">requirement2: HTTP和HTTPS均可，不强制性要求小绿锁，但是只有一个IP或者带端口的不接受哦</span><br><span class="line">requirement3: 网站要有维护，定期或不定期均可，线下朋友请忽略这一条</span><br><span class="line">requirement4: 申请友链在评论区留言即可，但需先添加本站友链（申请格式如下文所述）</span><br><span class="line">requirement5: 有一定数量的原创文章，建站一周以上（大佬可以无视以上要求）</span><br><span class="line">requirement6: 如果你想联系我，在About页面中有我的相关联系方式</span><br><span class="line">myInfo: My Blog Info</span><br><span class="line">info1: &#39;name: 超逸の技术博客&#39;</span><br><span class="line">info2: &#39;link: https:&#x2F;&#x2F;yangchaoyi.vip&#x2F;&#39;</span><br><span class="line">info3: &#39;avatar: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;Chocolate1999&#x2F;cdn&#x2F;img&#x2F;avatar.png&#39;</span><br><span class="line">info4: &#39;descr: 不是只会写业务代码の前端攻城狮&#39;</span><br></pre></td></tr></table></figure><h3 id="友链链接区块加入一行小字"><a href="#友链链接区块加入一行小字" class="headerlink" title="友链链接区块加入一行小字"></a>友链链接区块加入一行小字</h3><p>具体效果图如下所示：</p><p><a href="https://img-blog.csdnimg.cn/20200424124816463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200424124816463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p><h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><p>第一步，在<code>themes/Butterfly/layout/flink.pug</code> 文件内加入如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">h4&#x3D; i.cdescr</span><br></pre></td></tr></table></figure><p>具体位置，请参考如下：</p><p><a href="https://img-blog.csdnimg.cn/20200424124920612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200424124920612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>第二步，此后我们在<code>source/_data/link.yml</code> 中就可以多加一栏变量了，例如：<br><a href="https://img-blog.csdnimg.cn/20200424124947577.png"><img src="https://img-blog.csdnimg.cn/20200424124947577.png" alt="img"></a></p><h3 id="跳过-hexo-的渲染"><a href="#跳过-hexo-的渲染" class="headerlink" title="跳过 hexo 的渲染"></a>跳过 hexo 的渲染</h3><p>或许你会问这个到底有啥用呢？来两张图你就知道了：</p><p><a href="https://img-blog.csdnimg.cn/20200424150921963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200424150921963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br><a href="https://img-blog.csdnimg.cn/20200424151000759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200424151000759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a></p><h3 id="友链样式美化"><a href="#友链样式美化" class="headerlink" title="友链样式美化"></a>友链样式美化</h3><p>本次更新新增呼吸灯效果，<code>github</code>源码仓库已同步更新。<br><a href="https://img-blog.csdnimg.cn/20200426160609547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200426160609547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>实现效果步骤如下：</p><p>将<code>themes/Butterfly/layout/flink.pug</code> 原本的文件内容删去，直接负责替换如下内容：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">#page</span><br><span class="line">  .flink#article-container</span><br><span class="line">    each i in site.data.link</span><br><span class="line">      h2&#x3D; i.class_name</span><br><span class="line">      .post-cards</span><br><span class="line">        .md-links</span><br><span class="line">          each item in i.link_list</span><br><span class="line">            .md-links-item(style&#x3D; item.color ? &#96;--primary-color:$&#123;item.color&#125;;border-width:$&#123;item.width&#125;;border-style:$&#123;item.style&#125;;animation: $&#123;item.custom&#125; $&#123;item.time&#125; infinite alternate; background:$&#123;item.background&#125;&#96; : &#39;border-width:0px;border-style:solid;animation: link_custom 0s infinite alternate;background:0&#39;)</span><br><span class="line">              a.customcolor(href&#x3D;item.link  title&#x3D;item.name target&#x3D;&quot;_blank&quot; rel&#x3D;item.remove ? &quot;external nofollow&quot; : &quot;&quot; style&#x3D;item.namecolor ? &#96;--namecolor:$&#123;item.namecolor&#125;&#96; : &#39;&#39;)</span><br><span class="line">                if theme.lazyload.enable</span><br><span class="line">                  img.lazyload(data-src&#x3D;item.avatar onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;&#96; + url_for(theme.lodding_bg.flink) + &#96;&#39;&#96; alt&#x3D;item.name,style&#x3D;item.rotate ? &#96;--primary-rotate:$&#123;item.rotate&#125;;--autotime:$&#123;item.autotime&#125;;&#96; : &#39;--primary-rotate:0deg&#39; class&#x3D;item.autorotate ? &#96;$&#123;item.autorotate&#125;&#96; : &#39;&#39;)</span><br><span class="line">                else</span><br><span class="line">                  img(src&#x3D;item.avatar onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;&#96; + url_for(theme.lodding_bg.flink) + &#96;&#39;&#96; alt&#x3D;item.name )</span><br><span class="line">                .md-links-title&#x3D; item.name </span><br><span class="line">                .md-links-des&#x3D; item.descr</span><br><span class="line">    !&#x3D; page.content</span><br><span class="line">  if page.comments !&#x3D;&#x3D; false</span><br><span class="line">    include includes&#x2F;comments&#x2F;index.pug</span><br></pre></td></tr></table></figure><p>在主题配置文件 <code>source/_data/butterfly.yml</code> 添加如下样式</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sviptzk&#x2F;HexoStaticFile@master&#x2F;Hexo&#x2F;css&#x2F;flink.min.css</span><br></pre></td></tr></table></figure><p>具体位置，你可以搜索用<code>ctrl+f</code>键搜索<code>css</code>，添加进去。<br><a href="https://img-blog.csdnimg.cn/20200426160933761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200426160933761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>当然，如果你是<code>clone</code> 的 <code>dev</code> 分支，最新版本的话，可以这样引入 <code>css</code>：</p><p>具体位置，你可以搜索用<code>ctrl+f</code>键搜索<code>inject</code>，可以直接覆盖你之前的代码或者添加进去都可以。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line"># inject</span><br><span class="line"># 插入代码到头部&lt;&#x2F;head&gt;之前 和 尾部&lt;&#x2F;body&gt;之前</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  # - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;xxxxx&quot;&gt;</span><br><span class="line">    - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sviptzk&#x2F;HexoStaticFile@master&#x2F;Hexo&#x2F;css&#x2F;flink.min.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>各种参数说明（可自行搭配）如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line"># 边框大小 默认为0 </span><br><span class="line">width: 0px</span><br><span class="line"># 边框样式 默认 solid</span><br><span class="line">style: solid</span><br><span class="line"># 边框颜色 默认淡蓝色 #49b1f5</span><br><span class="line">color: &quot;#0078e7&quot;</span><br><span class="line"># 自动旋转 可选值 flash（闪现） link_custom（单色呼吸灯） link_custom1（彩色呼吸灯）</span><br><span class="line">custom: link_custom1</span><br><span class="line"># 动画时长设定，默认为0</span><br><span class="line">time: 4s</span><br><span class="line"># name的颜色</span><br><span class="line">namecolor: &quot;#ff9191&quot;</span><br><span class="line"># descr的颜色</span><br><span class="line">descolor: &quot;#ff9191&quot;</span><br><span class="line"># 背景颜色</span><br><span class="line">background: 0</span><br><span class="line"># 鼠标悬停旋转角度</span><br><span class="line">rotate: 360deg</span><br><span class="line"># 自动旋转 latuo左旋转 rauto右旋转</span><br><span class="line">autorotate: &quot;lauto&quot;</span><br><span class="line"># 旋转的周期（时长）</span><br><span class="line">autotime: 2s</span><br><span class="line">#移除此链接的权重 0为否 非0为移除</span><br><span class="line">remove: 0</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.antmoe.com/posts/1dc865d0/index.html">小康博客：Hexo关于Butterfly的一些小修改</a></p><h3 id="添加全局吸底APlayer"><a href="#添加全局吸底APlayer" class="headerlink" title="添加全局吸底APlayer"></a>添加全局吸底APlayer</h3><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>打开 <code>themes\Butterfly\layout\includes\head.pug</code></p><p>结尾加一句</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Cpp</span><br><span class="line">include .&#x2F;third-party&#x2F;aplayer.pug</span><br></pre></td></tr></table></figure><p><a href="https://img-blog.csdnimg.cn/20200519114724631.png"><img src="https://img-blog.csdnimg.cn/20200519114724631.png" alt="img"></a></p><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>然后在<code>themes\Butterfly\layout\includes\third-party\</code>里面新建一个文件叫 <code>aplayer.pug</code> ,内容如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Cpp</span><br><span class="line">if theme.aplayer &amp;&amp; theme.aplayer.enable</span><br><span class="line">.aplayer(data-id&#x3D;theme.aplayer.id data-server&#x3D;theme.aplayer.server data-type&#x3D;theme.aplayer.type data-fixed&#x3D;theme.aplayer.fixed data-mini&#x3D;theme.aplayer.mini data-listFolded&#x3D;theme.aplayer.listFolded data-order&#x3D;theme.aplayer.order data-preload&#x3D;theme.aplayer.preload)</span><br><span class="line">each item in theme.aplayer.css</span><br><span class="line">link(rel&#x3D;&#39;stylesheet&#39;, href&#x3D;item)</span><br><span class="line">each item in theme.aplayer.js</span><br><span class="line">script(src&#x3D;item)</span><br></pre></td></tr></table></figure><h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h4><p>然后打开<code>butterfly.yml</code>(如果你没有启用的话,就打开<code>source/_data/butterfly.yml</code>) 加入以下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">##侧边栏歌单</span><br><span class="line">aplayer:</span><br><span class="line">  enable: true</span><br><span class="line">  js:</span><br><span class="line">    - https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;aplayer&#x2F;1.10.1&#x2F;APlayer.min.js</span><br><span class="line">    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;meting@1.2.0&#x2F;dist&#x2F;Meting.min.js</span><br><span class="line">  css:</span><br><span class="line">    - https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;aplayer&#x2F;1.10.1&#x2F;APlayer.min.css</span><br><span class="line">  id: 2693598459</span><br><span class="line">  server: netease </span><br><span class="line">  type: playlist</span><br><span class="line">  fixed: &#39;true&#39;</span><br><span class="line">  order: random</span><br><span class="line">  preload: none</span><br><span class="line">  listFolded: &#39;false&#39;</span><br></pre></td></tr></table></figure><h4 id="解决与TOC冲突问题"><a href="#解决与TOC冲突问题" class="headerlink" title="解决与TOC冲突问题"></a>解决与TOC冲突问题</h4><p>然后重新生成就可以看到 <code>aplayer</code>了,这里的id是我的网易云歌单号,可以修改成别的.<br>但是浏览 <code>Page</code> 时会发现 <code>aplayer</code> 会和 <code>TOC</code>(怎么又是它) 的切换按钮重合<br>打开 <code>themes\Butterfly\source\css\_global\index.styl</code><br>修改第61行</p><p><a href="https://img-blog.csdnimg.cn/20200519114915192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200519114915192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70" alt="img"></a><br>最后，大功告成 ✿✿ヽ(°▽°)ノ✿<br><a href="https://img-blog.csdnimg.cn/2020051911514933.png"><img src="https://img-blog.csdnimg.cn/2020051911514933.png" alt="img"></a></p><p>参考：<br>Author: <a href="http://home.ustc.edu.cn/~pscgylotti/blogs/2020/05/09/butterfly/">Pscgylotti</a></p><h3 id="主页冒泡特效和页脚"><a href="#主页冒泡特效和页脚" class="headerlink" title="主页冒泡特效和页脚"></a>主页冒泡特效和页脚</h3><p>首先，在 <code>themes/Butterfly/source/js</code> 目录下创建一个 <code>chocolate.js</code> 文件（名称可自定义）</p><p><a href="https://img-blog.csdnimg.cn/2020101220213955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/2020101220213955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a><br>直接复制导入如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">$(function()&#123;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 气泡</span><br><span class="line">function bubble() &#123;</span><br><span class="line">  $(&#39;#page-header&#39;).circleMagic(&#123;</span><br><span class="line">      radius: 10,</span><br><span class="line">      density: .2,</span><br><span class="line">      color: &#39;rgba(255,255,255,.4)&#39;,</span><br><span class="line">      clearOffset: 0.99</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;! function(p) &#123;</span><br><span class="line">  p.fn.circleMagic &#x3D; function(t) &#123;</span><br><span class="line">      var o, a, n, r, e &#x3D; !0,</span><br><span class="line">          i &#x3D; [],</span><br><span class="line">          d &#x3D; p.extend(&#123; color: &quot;rgba(255,0,0,.5)&quot;, radius: 10, density: .3, clearOffset: .2 &#125;, t),</span><br><span class="line">          l &#x3D; this[0];</span><br><span class="line"></span><br><span class="line">      function c() &#123; e &#x3D; !(document.body.scrollTop &gt; a) &#125;</span><br><span class="line"></span><br><span class="line">      function s() &#123; o &#x3D; l.clientWidth, a &#x3D; l.clientHeight, l.height &#x3D; a + &quot;px&quot;, n.width &#x3D; o, n.height &#x3D; a &#125;</span><br><span class="line"></span><br><span class="line">      function h() &#123;</span><br><span class="line">          if (e)</span><br><span class="line">              for (var t in r.clearRect(0, 0, o, a), i) i[t].draw();</span><br><span class="line">          requestAnimationFrame(h)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      function f() &#123;</span><br><span class="line">          var t &#x3D; this;</span><br><span class="line"></span><br><span class="line">          function e() &#123; t.pos.x &#x3D; Math.random() * o, t.pos.y &#x3D; a + 100 * Math.random(), t.alpha &#x3D; .1 + Math.random() * d.clearOffset, t.scale &#x3D; .1 + .3 * Math.random(), t.speed &#x3D; Math.random(), &quot;random&quot; &#x3D;&#x3D;&#x3D; d.color ? t.color &#x3D; &quot;rgba(&quot; + Math.floor(255 * Math.random()) + &quot;, &quot; + Math.floor(0 * Math.random()) + &quot;, &quot; + Math.floor(0 * Math.random()) + &quot;, &quot; + Math.random().toPrecision(2) + &quot;)&quot; : t.color &#x3D; d.color &#125;</span><br><span class="line">          t.pos &#x3D; &#123;&#125;, e(), this.draw &#x3D; function() &#123; t.alpha &lt;&#x3D; 0 &amp;&amp; e(), t.pos.y -&#x3D; t.speed, t.alpha -&#x3D; 5e-4, r.beginPath(), r.arc(t.pos.x, t.pos.y, t.scale * d.radius, 0, 2 * Math.PI, !1), r.fillStyle &#x3D; t.color, r.fill(), r.closePath() &#125;</span><br><span class="line">      &#125;! function() &#123;</span><br><span class="line">          o &#x3D; l.offsetWidth, a &#x3D; l.offsetHeight,</span><br><span class="line">              function() &#123;</span><br><span class="line">                  var t &#x3D; document.createElement(&quot;canvas&quot;);</span><br><span class="line">                  t.id &#x3D; &quot;canvas&quot;, t.style.top &#x3D; 0, t.style.zIndex &#x3D; 0, t.style.position &#x3D; &quot;absolute&quot;, l.appendChild(t), t.parentElement.style.overflow &#x3D; &quot;hidden&quot;</span><br><span class="line">              &#125;(), (n &#x3D; document.getElementById(&quot;canvas&quot;)).width &#x3D; o, n.height &#x3D; a, r &#x3D; n.getContext(&quot;2d&quot;);</span><br><span class="line">          for (var t &#x3D; 0; t &lt; o * d.density; t++) &#123;</span><br><span class="line">              var e &#x3D; new f;</span><br><span class="line">              i.push(e)</span><br><span class="line">          &#125;</span><br><span class="line">          h()</span><br><span class="line">      &#125;(), window.addEventListener(&quot;scroll&quot;, c, !1), window.addEventListener(&quot;resize&quot;, s, !1)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;(jQuery);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调用气泡方法</span><br><span class="line">bubble();</span><br><span class="line"></span><br><span class="line">&#x2F;* xkTool *&#x2F;</span><br><span class="line">var chocolate &#x3D; new xkTool();</span><br><span class="line">chocolate.footFish();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>最后，在主题 <code>butterfly.tml</code> 文件中，通过 <code>ctrl+f</code> 导入一下刚刚写的 <code>js</code> 文件。</p><p><a href="https://img-blog.csdnimg.cn/20201012202325605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201012202325605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>媒体插件|音乐|视频</title>
      <link href="2020/11/18/021/"/>
      <url>2020/11/18/021/</url>
      
        <content type="html"><![CDATA[<h2 id="直接插入"><a href="#直接插入" class="headerlink" title="直接插入"></a>直接插入</h2><blockquote><p>直接插入的好处是无需任何的插件</p></blockquote><h3 id="插入音乐"><a href="#插入音乐" class="headerlink" title="插入音乐"></a>插入音乐</h3><p>音乐链接获取</p><p><a href="https://gitee.com/lovelijunyi/images/raw/master/20200404094756.png"><img src="https://gitee.com/lovelijunyi/images/raw/master/20200404094756.png" alt="img"></a></p><p>生成链接</p><p><a href="https://gitee.com/lovelijunyi/images/raw/master/20200404094801.png"><img src="https://gitee.com/lovelijunyi/images/raw/master/20200404094801.png" alt="img"></a></p><p>音乐代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Html</span><br><span class="line">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;825 height&#x3D;86 src&#x3D;&quot;&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;29808783&amp;auto&#x3D;1&amp;height&#x3D;66&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意长宽</p></blockquote><h3 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h3><p>视频要注意，插入的视频必须是视频的原URL</p><p>插入视频代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&lt;iframe </span><br><span class="line">    width&#x3D;&quot;800&quot; </span><br><span class="line">    height&#x3D;&quot;450&quot; </span><br><span class="line">    src&#x3D;&#39;https:&#x2F;&#x2F;player.youku.com&#x2F;embed&#x2F;XNDE5NjYzOTg0OA&#x3D;&#x3D;&#39;</span><br><span class="line">    frameborder&#x3D;&quot;0&quot; </span><br><span class="line">    allowfullscreen&gt;</span><br><span class="line">&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意长宽，长宽可以是视频分辨率</p></blockquote><h2 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h2><blockquote><p>本文参考<a href="https://easyhexo.com/3-Plugins-use-and-config/3-5-hexo-tag-mmedia/#%E7%AE%80%E4%BB%8B">hexo-tag-mmedia</a></p></blockquote><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>hexo-tag-mmedia 是 MonoLogueChi 自用的一个媒体插入插件，在添加部分功能后发布给大家使用</p><h4 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h4><p>个人推荐的话，音乐插入建议是<strong>MetingJS音乐插件</strong>，视频的话是<strong>Bilibili视频插件</strong></p><h4 id="支持的平台"><a href="#支持的平台" class="headerlink" title="支持的平台"></a>支持的平台</h4><ul><li><a href="https://github.com/DIYgod/APlayer">Aplayer</a></li><li><a href="https://github.com/metowolf/MetingJS">Meting</a></li><li><a href="https://github.com/DIYgod/DPlayer">Dplayer</a></li><li><a href="https://www.bilibili.com/">Bilibili</a></li><li>YouTube</li><li><a href="https://github.com/zhw2590582/ArtPlayer">ArtPlayer</a></li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>本插件与以下插件冲突</p><ul><li>hexo-tag-aplayer</li><li>hexo-tag-dplayer</li><li>hexo-tag-bilibili</li></ul><p>如有安装，使用前请卸载。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">npm uninstall hexo-tag-aplayer</span><br><span class="line">npm uninstall hexo-tag-dplayer</span><br><span class="line">npm uninstall hexo-tag-bilibili</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">npm install hexo-tag-mmedia --save</span><br></pre></td></tr></table></figure><p>需要修改主目录下的<code>_config.yml</code> ，一般无需修改直接使用即可</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">mmedia:</span><br><span class="line">  aplayer:</span><br><span class="line">    cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer&#x2F;dist&#x2F;APlayer.min.js</span><br><span class="line">    style_cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer&#x2F;dist&#x2F;APlayer.min.css</span><br><span class="line">    default:</span><br><span class="line">  meting:</span><br><span class="line">    cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;meting&#x2F;dist&#x2F;Meting.min.js</span><br><span class="line">    api:</span><br><span class="line">    default:</span><br><span class="line">  dplayer:</span><br><span class="line">    cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;dplayer&#x2F;dist&#x2F;DPlayer.min.js</span><br><span class="line">    style_cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;dplayer&#x2F;dist&#x2F;DPlayer.min.css</span><br><span class="line">    hls_cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;hls.j&#x2F;dist&#x2F;hls.min.js</span><br><span class="line">    dash_cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;dashjs&#x2F;dist&#x2F;dash.all.min.js</span><br><span class="line">    shaka_dash_cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;shaka-player&#x2F;dist&#x2F;shaka-player.compiled.js</span><br><span class="line">    flv_cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;flv.js&#x2F;dist&#x2F;flv.min.js</span><br><span class="line">    webtorrent_cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;webtorrent&#x2F;webtorrent.min.js</span><br><span class="line">    default:</span><br></pre></td></tr></table></figure><p>default 项下可配置默认选项，例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">meting:</span><br><span class="line">  cdn: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;meting&#x2F;dist&#x2F;Meting.min.js</span><br><span class="line">  api:</span><br><span class="line">  default:</span><br><span class="line">    order: random</span><br></pre></td></tr></table></figure><h3 id="MetingJS音乐插件"><a href="#MetingJS音乐插件" class="headerlink" title="MetingJS音乐插件"></a>MetingJS音乐插件</h3><p>在文件直接插入以下代码即可，注意一下，如果是Typora的话需要切换成源码模式再插入</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#123;% meting &quot;001Mf4Ic1aNYYK&quot; &quot;tencent&quot; &quot;album&quot; &quot;order:random&quot; &quot;listmaxheight:180px&quot; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% meting &quot;auto:https:&#x2F;&#x2F;y.qq.com&#x2F;n&#x2F;yqq&#x2F;song&#x2F;001RGrEX3ija5X.html&quot; &quot;autoplay&quot; %&#125;</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p>基本兼容 hexo-tag-aplayer，绝大部分可以直接从 hexo-tag-aplayer 迁移，参数形式为 <code>&quot;option:vaule&quot;</code>，不懂的可以参考 <a href="https://github.com/metowolf/MetingJS#option">MetingJS</a></p><table><thead><tr><th align="left">配置项</th><th align="left">默认</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">必须</td><td align="left">音乐 id，第一个参数</td></tr><tr><td align="left">server</td><td align="left">必须</td><td align="left">音乐平台，第二个参数，可选： <code>netease</code> , <code>tencent</code> , <code>kugou</code> ,<code>xiami</code> , <code>baidu</code></td></tr><tr><td align="left">type</td><td align="left">必须</td><td align="left">音乐类型，第三个参数，可选： <code>song</code> , <code>playlist</code> , <code>album``search</code> , <code>artist</code></td></tr><tr><td align="left">auto</td><td align="left">无</td><td align="left">有 auto 选项时前面参数不需要填写，否则为必填，见示例 2</td></tr><tr><td align="left">autoplay</td><td align="left"><code>false</code></td><td align="left">自动播放，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">fixed</td><td align="left"><code>false</code></td><td align="left">吸底模式，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">mini</td><td align="left"><code>false</code></td><td align="left">迷你模式，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">listfolded</td><td align="left"><code>false</code></td><td align="left">默认折叠列表，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">mutex</td><td align="left"><code>true</code></td><td align="left">互斥，如不需互斥 <code>&quot;mutex:false&quot;</code></td></tr><tr><td align="left">theme</td><td align="left"><code>#2980b9</code></td><td align="left">主题颜色</td></tr><tr><td align="left">loop</td><td align="left"><code>all</code></td><td align="left">循环模式 ，可选值 <code>all</code> , <code>one</code> , <code>none</code></td></tr><tr><td align="left">order</td><td align="left"><code>list</code></td><td align="left">播放顺序，可选值 <code>list</code> , <code>random</code></td></tr><tr><td align="left">preload</td><td align="left"><code>auto</code></td><td align="left">预加载模式 ，可选 <code>none</code> , <code>metadata</code> , <code>auto</code></td></tr><tr><td align="left">volume</td><td align="left"><code>0.7</code></td><td align="left">默认音量，可选 <code>0-1</code></td></tr><tr><td align="left">lrctype</td><td align="left"><code>0</code></td><td align="left">歌词类型</td></tr><tr><td align="left">listmaxheight</td><td align="left"><code>340px</code></td><td align="left">播放器最大高度</td></tr><tr><td align="left">storagename</td><td align="left"><code>metingjs</code></td><td align="left"></td></tr></tbody></table><p>后端服务器可以使用官方后端，也可以使用大佬后端服务器 <a href="https://github.com/MonoLogueChi/MetingJS.Server">MetingJS.Server</a> 自建服务。</p><h4 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h4><h3 id="Aplayer音乐插件"><a href="#Aplayer音乐插件" class="headerlink" title="Aplayer音乐插件"></a>Aplayer音乐插件</h3><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><table><thead><tr><th align="left">配置项</th><th align="left">默认</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">必须</td><td align="left">曲目标题，第一个参数</td></tr><tr><td align="left">author</td><td align="left">必须</td><td align="left">曲目作者，第二个参数</td></tr><tr><td align="left">url</td><td align="left">必须</td><td align="left">音乐文件地址</td></tr><tr><td align="left">picture_url</td><td align="left"></td><td align="left">音乐对应的图片地址</td></tr><tr><td align="left">narrow</td><td align="left"><code>false</code></td><td align="left">袖珍风格，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">autoplay</td><td align="left"><code>false</code></td><td align="left">自动播放，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">width:xxx</td><td align="left"><code>100%</code></td><td align="left">播放器宽度</td></tr><tr><td align="left">lrc</td><td align="left"></td><td align="left">歌词地址</td></tr></tbody></table><p>AplayerList（不推荐使用）</p><p>警告</p><p>此模式测试不够完善，如果遇到问题请提 <a href="https://github.com/MonoLogueChi/hexo-tag-mmedia/issues">issue</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;narrow&quot;: false,             &#x2F;&#x2F; Optional, narrow style</span><br><span class="line">    &quot;autoplay&quot;: true,            &#x2F;&#x2F; Optional, autoplay song(s), not supported by mobile browsers</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,            &#x2F;&#x2F; Optional, play mode, can be &#96;random&#96; &#96;single&#96; &#96;circulation&#96;(loop) &#96;order&#96;(no loop), default: &#96;circulation&#96;</span><br><span class="line">    &quot;showlrc&quot;: 3,                &#x2F;&#x2F; Optional, show lrc, can be 1, 2, 3</span><br><span class="line">    &quot;mutex&quot;: true,               &#x2F;&#x2F; Optional, pause other players when this player playing</span><br><span class="line">    &quot;theme&quot;: &quot;#e6d0b2&quot;,         &#x2F;&#x2F; Optional, theme color, default: #b7daff</span><br><span class="line">    &quot;preload&quot;: &quot;metadata&quot;,       &#x2F;&#x2F; Optional, the way to load music, can be &#39;none&#39; &#39;metadata&#39; &#39;auto&#39;, default: &#39;auto&#39;</span><br><span class="line">    &quot;listmaxheight&quot;: &quot;513px&quot;,    &#x2F;&#x2F; Optional, max height of play list</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;CoCo&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;Jeff Williams&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;caffeine.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;caffeine.jpeg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;caffeine.txt&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;アイロニ&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;鹿乃&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;irony.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;irony.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><h3 id="Dplayer视频插件"><a href="#Dplayer视频插件" class="headerlink" title="Dplayer视频插件"></a>Dplayer视频插件</h3><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#123;% dplayer &quot;url:KeyCastOW.mp4&quot; &quot;id:DDEC4F882C0B66FAD&quot; &quot;addition:addition0&quot; &quot;addition:addition1&quot; %&#125;</span><br></pre></td></tr></table></figure><h4 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h4><p>非必填项，如果不清楚请不要填写。</p><table><thead><tr><th align="left">配置项</th><th align="left">默认</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">url</td><td align="left">必填</td><td align="left">视频地址</td></tr><tr><td align="left">pic</td><td align="left"></td><td align="left">封面</td></tr><tr><td align="left">thumbnails</td><td align="left"></td><td align="left">缩略图</td></tr><tr><td align="left">type</td><td align="left"><code>auto</code></td><td align="left">视频格式，可选 <code>auto</code> <code>hls</code> <code>dash</code> <code>shakaDash</code> <code>flv</code> <code>webtorrent</code></td></tr><tr><td align="left">id</td><td align="left"></td><td align="left">弹幕 id，建议使用视频的 CRC 或 MD5，再或使用 UUID</td></tr><tr><td align="left">api</td><td align="left"></td><td align="left">弹幕 api</td></tr><tr><td align="left">token</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">maximum</td><td align="left"><code>10000</code></td><td align="left">最大弹幕数</td></tr><tr><td align="left">user</td><td align="left"><code>DIYgod</code></td><td align="left">弹幕发送用户名</td></tr><tr><td align="left">bottom</td><td align="left"><code>15%</code></td><td align="left">弹幕底端距离</td></tr><tr><td align="left">unlimited</td><td align="left"><code>true</code></td><td align="left"></td></tr><tr><td align="left">addition</td><td align="left"></td><td align="left">额外弹幕，可重叠加多个</td></tr><tr><td align="left">suburl</td><td align="left"></td><td align="left">字幕地址</td></tr><tr><td align="left">subtype</td><td align="left"><code>webvtt</code></td><td align="left">字幕类型，可选 <code>webvtt</code> <code>ass</code></td></tr><tr><td align="left">subbottom</td><td align="left"><code>40px</code></td><td align="left">字幕底端距离</td></tr><tr><td align="left">subfontSize</td><td align="left"><code>20px</code></td><td align="left">字幕字体大小</td></tr><tr><td align="left">subcolor</td><td align="left">#fff</td><td align="left">字幕字体颜色</td></tr><tr><td align="left">autoplay</td><td align="left"><code>false</code></td><td align="left">自动播放，带有此参数表示 true，不带表示 false</td></tr><tr><td align="left">loop</td><td align="left"><code>false</code></td><td align="left">循环，带有此参数表示 true，不带表示 false</td></tr><tr><td align="left">screenshot</td><td align="left"><code>false</code></td><td align="left">截屏按钮，带有此参数表示 true，不带表示 false，此参数会造成跨域</td></tr><tr><td align="left">hotkey</td><td align="left"><code>true</code></td><td align="left">热键控制</td></tr><tr><td align="left">mutex</td><td align="left"><code>true</code></td><td align="left">互斥</td></tr><tr><td align="left">theme</td><td align="left"><code>#b7daff</code></td><td align="left">主题颜色</td></tr><tr><td align="left">lang</td><td align="left"></td><td align="left">语言，不指定会根据浏览器环境自动识别</td></tr><tr><td align="left">preload</td><td align="left"><code>auto</code></td><td align="left">预加载，可选 <code>none</code> <code>metadata</code> <code>auto</code></td></tr><tr><td align="left">logo</td><td align="left"></td><td align="left">logo 地址</td></tr><tr><td align="left">volume</td><td align="left">0.7</td><td align="left">默认音量 <code>0-1</code></td></tr><tr><td align="left">contextmenu</td><td align="left"></td><td align="left">右键菜单，可叠加</td></tr><tr><td align="left">highlight</td><td align="left"></td><td align="left">高光点，可叠加多个，例如 <code>&quot;highlight:&#123;time: 20, text: &#39;这是第 20 秒&#39;&#125;&quot;</code></td></tr><tr><td align="left">code</td><td align="left"></td><td align="left">额外代码，不懂不要填，需要写的请参考源码</td></tr></tbody></table><h4 id="演示-1"><a href="#演示-1" class="headerlink" title="演示"></a>演示</h4><p><video class="dplayer-video dplayer-video-current" webkit-playsinline="" x-webkit-airplay="allow" playsinline="" preload="auto" src="https://lovelijunyi.gitee.io/posts/KeyCastOW.mp4" style="box-sizing: content-box; outline: none; margin: 0px; padding: 0px; border-radius: 4px; max-width: 100%; z-index: 1; transition: all 0.28s ease 0s; width: 890px; height: 445px; display: block;"></video></p><p> 0:00 / 0:00</p><p>速度</p><p>洗脑循环</p><p>显示弹幕</p><p>海量弹幕</p><p>弹幕透明度</p><p>00:00</p><p>弹幕加载失败</p><h3 id="Bilibili视频插件"><a href="#Bilibili视频插件" class="headerlink" title="Bilibili视频插件"></a>Bilibili视频插件</h3><p>视频还是强烈推荐<strong>Bilibili</strong>的，毕竟视频又全又好用，关键免费</p><h4 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#123;% bilibili &quot;aid:60016166&quot; &quot;quality:high&quot; &quot;danmaku&quot; &quot;allowfullscreen&quot; %&#125;</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><table><thead><tr><th align="left">配置项</th><th align="left">默认</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">aid</td><td align="left">必填</td><td align="left">视频 av 号，填写 av 时非必填</td></tr><tr><td align="left">av</td><td align="left"></td><td align="left">视频链接地址，不要带分 P 信息，与 aid 同时填写会被覆盖</td></tr><tr><td align="left">page</td><td align="left"><code>1</code></td><td align="left">分 P，填写 av 时才会生效</td></tr><tr><td align="left">quality</td><td align="left"><code>low</code></td><td align="left">视频质量，可选 <code>high</code> <code>low</code></td></tr><tr><td align="left">danmaku</td><td align="left"><code>false</code></td><td align="left">开启弹幕，带有此参数表示 true，不带表示 false</td></tr><tr><td align="left">allowfullscreen</td><td align="left"><code>true</code></td><td align="left">是否允许全屏</td></tr><tr><td align="left">width</td><td align="left"><code>100%</code></td><td align="left">宽度</td></tr><tr><td align="left">height</td><td align="left"><code>500px</code></td><td align="left">高度</td></tr><tr><td align="left">margin</td><td align="left"><code>auto</code></td><td align="left">位置，css 属性，例： <code>&quot;margin:auto&quot;</code> <code>&quot;margin:0 0 0 auto&quot;</code></td></tr></tbody></table><h4 id="演示-2"><a href="#演示-2" class="headerlink" title="演示"></a>演示</h4><iframe class="bbplayer" src="https://player.bilibili.com/player.html?aid=60016166&amp;page=1&amp;high_quality=1&amp;danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups" style="box-sizing: border-box; outline: none; margin: 0px 0px 1rem; padding: 0px; width: 890px; height: 500px;"></iframe>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跳过渲染|页脚养鱼|永久链接</title>
      <link href="2020/11/18/020/"/>
      <url>2020/11/18/020/</url>
      
        <content type="html"><![CDATA[<h2 id="如何跳过-hexo-的渲染"><a href="#如何跳过-hexo-的渲染" class="headerlink" title="如何跳过 hexo 的渲染"></a>如何跳过 hexo 的渲染</h2><p>查看官方文档页面跳过 hexo 的渲染主要有两种方式：</p><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front matter"></a>Front matter</h3><ul><li><p>新建页面，然后将你的代码直接写入 <code>index.md</code> 中</p></li><li><p>在 Front matter 中添加 <code>layout: false</code>，此方法适用于单一的纯 HTML<br>css 页面。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">---</span><br><span class="line">title: sakura</span><br><span class="line">date: 2019-11-29 16:59:51</span><br><span class="line">type: &quot;sakura&quot;</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421114708.png"><img src="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421114708.png" alt="示例图"></a></p><p>示例图</p></li></ul><h3 id="skip-render"><a href="#skip-render" class="headerlink" title="skip_render"></a>skip_render</h3><ul><li>如果页面含有复杂的 js，layout 的方式可能容易报错，因此利用 hexo 自带的 <code>skip_render</code></li><li>在根目录【<strong>根目录</strong>】的_config.yml，你可以看到 <code>skip_render</code>，大致在 32 行。写入你想要的跳过渲染的路径</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yamlskip_render:    - &#39;fireworks&#x2F;*&#39;    - &#39;fireworks&#x2F;**&#39;</span><br></pre></td></tr></table></figure><ul><li><p>注意缩进和空格，解释一下：<code>&#39;fireworks/*&#39;</code> 表示在目录 <code>source/fireworks</code> 下的文件全部跳过渲染，<code>&#39;fireworks/**&#39;</code> 表示在目录 <code>source/fireworks/文件夹</code>下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中）。这里有点重复了，只为了你能看明白。</p></li><li><p>Hexo 最终是把 <code>md</code> 渲染为 HTML 页面，所以既然跳过渲染，那页面就只写入 HTML。如图，将新建页面的 <code>index.md</code> 直接改为 HTML（注意调整 css）<br><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421115308.png"><img src="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421115308.png" alt="文件示例图"></a></p><p>文件示例图</p></li></ul><h3 id="可以混用"><a href="#可以混用" class="headerlink" title="可以混用"></a>可以混用</h3><ul><li><p>都是跳过渲染，当然可以混用</p></li><li><p>两种方法混用</p></li><li><p>修改 md 为 HTML，直接写入 HTML，并在 Front matter 中利用 <code>layout: false</code><br>跳过渲染<br><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421121330.png"><img src="https://cdn.jsdelivr.net/gh/xiabor/img/i/20200421121330.png" alt="小圆点页面示例图"></a></p><p>小圆点页面示例图</p></li></ul><ul><li><p>若采用第二种方法，在根目录【<strong>根目录</strong>】的_config.yml 添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">skip_render:</span><br><span class="line">    - &#39;dot&#x2F;*&#39;</span><br><span class="line">    - &#39;dot&#x2F;**&#39;</span><br></pre></td></tr></table></figure></li></ul><h3 id="文章中直接嵌入-HTML"><a href="#文章中直接嵌入-HTML" class="headerlink" title="文章中直接嵌入 HTML"></a>文章中直接嵌入 HTML</h3><ul><li><p>既然 md 最终会被渲染为 HTML，那直接写 HTML 当然是可以的，但只能以文章形式展示，而不是新的页面</p></li><li><p>例如我在这嵌入一个颜色表，HTML 代码完整，前后换行留空即可</p><table><thead><tr><th>颜色名</th><th>十六进制颜色值</th><th>颜色</th></tr></thead><tbody><tr><td>SteelBlue</td><td>#4682B4</td><td>rgb(70, 130, 180)</td></tr><tr><td>Tan</td><td>#D2B48C</td><td>rgb(210, 180, 140)</td></tr><tr><td>Teal</td><td>#008080</td><td>rgb(0, 128, 128)</td></tr><tr><td>Thistle</td><td>#D8BFD8</td><td>rgb(216, 191, 216)</td></tr><tr><td>Tomato</td><td>#FF6347</td><td>rgb(255, 99, 71)</td></tr><tr><td>Turquoise</td><td>#40E0D0</td><td>rgb(64, 224, 208)</td></tr><tr><td>Violet</td><td>#EE82EE</td><td>rgb(238, 130, 238)</td></tr><tr><td>VioletRed</td><td>#D02090</td><td>rgb(208, 32, 144)</td></tr><tr><td>Wheat</td><td>#F5DEB3</td><td>rgb(245, 222, 179)</td></tr><tr><td>White</td><td>#FFFFFF</td><td>rgb(255, 255, 255)</td></tr><tr><td>WhiteSmoke</td><td>#F5F5F5</td><td>rgb(245, 245, 245)</td></tr><tr><td>Yellow</td><td>#FFFF00</td><td>rgb(255, 255, 0)</td></tr><tr><td>YellowGreen</td><td>#9ACD32</td><td>rgb(154, 205, 50)</td></tr></tbody></table></li></ul><h2 id="永久链接"><a href="#永久链接" class="headerlink" title="永久链接"></a>永久链接</h2><h3 id="默认链接"><a href="#默认链接" class="headerlink" title="默认链接"></a>默认链接</h3><p>默认的链接格式为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br></pre></td></tr></table></figure><p>如果文章名是中文，由于编码生成的链接会很长，况且不利于 SEO</p><h3 id="利用字段替换链接"><a href="#利用字段替换链接" class="headerlink" title="利用字段替换链接"></a>利用字段替换链接</h3><p>根据官方文档 <a href="https://hexo.io/zh-cn/docs/permalinks">hexo.io/docs</a>，可以利用一个字段定义永久链接</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>:year</td><td>文章的发表年份（4 位数）</td></tr><tr><td>:month</td><td>文章的发表月份（2 位数）</td></tr><tr><td>:i_month</td><td>文章的发表月份（去掉开头的零）</td></tr><tr><td>:day</td><td>文章的发表日期 (2 位数)</td></tr><tr><td>:i_day</td><td>文章的发表日期（去掉开头的零）</td></tr><tr><td>:hour</td><td>文章发表时的小时 (2 位数)</td></tr><tr><td>:minute</td><td>文章发表时的分钟 (2 位数)</td></tr><tr><td>:title</td><td>文件名称</td></tr><tr><td>:post_title</td><td>文章标题</td></tr><tr><td>:id</td><td>文章 ID (not persistent across cache reset)</td></tr><tr><td>:category</td><td>分类。如果文章没有分类，则是 default_category 配置信息。</td></tr></tbody></table><p>例如：在 front matter 中加入 id：xxxx</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">---</span><br><span class="line">title: title</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">id: xxxx</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在 hexo 根目录加入或修改 permalink</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">permalink: posts&#x2F;:id.html&#x2F;</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>这样文章地址就会变为 <code>https://xxx.com/posts/id.html</code>，无需插件也能设置永久链接。</p><h3 id="abbrlink-插件"><a href="#abbrlink-插件" class="headerlink" title="abbrlink 插件"></a>abbrlink 插件</h3><ul><li>项目地址：<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></li><li>安装插件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><ul><li>在根目录 <code>blog\scaffolds\post.md</code> 中添加 abbrlink 字段（不加也行）</li><li>根目录 config.yml 下设置</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">permalink: posts&#x2F;:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">alg: crc32  # crc16(default) and crc32</span><br><span class="line">rep: hex    # dec(default) and hex</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>hexo clean 之后本地预览时便可重新生成永久链接，文章 front matter 会多一个 abbrlink 字段</p><p>永久链接格式为 <code>https://xxx.com/posts/abbrlink.html</code></p><ul><li>插件参数</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">abbrlink:</span><br><span class="line">alg: crc32  #support crc16(default) and crc32</span><br><span class="line">rep: hex    #support dec(default) and hex</span><br><span class="line"></span><br><span class="line">crc16 &amp; hex</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;66c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;65535.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;8ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;posts&#x2F;1690090958.html</span><br></pre></td></tr></table></figure><h3 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h3><ul><li>虽然 abbrlink 是自动生成的，可以在文章的 front matter 自定义修改。</li><li>以前用了 hexo 默认链接 <code>year/:month/:day/:title/</code>，安装插件插件后所有文章链接都会发生变化，那么评论怎么办？</li></ul><p><em>对于我这样的小破站，好不容易才有几条评论，就这样丢失了心有不甘啊</em></p><p>想到了几个解决方案：</p><ol><li><p>既然可以自定义 abbrlink，那只要将根目录配置改为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">permalink: :abbrlink</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>这样的话再把需要留下评论的页面 front matter 改回原来的链接格式 <code>year/:month/:day/:title/</code>，<strong>不仅仅是格式，日期名称也必须和原来保持一致</strong></p></li><li><p>群友提示，如果像我一样用的 valine 评论，可以直接在 leancloud 后台修改 URL，valine 绑定的相对路径，哪怕更换域名，只要保证文章链接一致，评论便可保留。<br><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/QQ%E6%88%AA%E5%9B%BE20200619095538.png"><img src="https://cdn.jsdelivr.net/gh/xiabor/img/i/QQ%E6%88%AA%E5%9B%BE20200619095538.png" alt="leancloud"></a></p><p>leancloud</p></li></ol><h3 id="常用链接格式"><a href="#常用链接格式" class="headerlink" title="常用链接格式"></a>常用链接格式</h3><table><thead><tr><th>permalink</th><th>格式预览</th></tr></thead><tbody><tr><td>:abbrlink/</td><td>xxx.com/xxx</td></tr><tr><td>:abbrlink.html/</td><td>xxx.com/xxx.html</td></tr><tr><td>posts/:abbrlink.html/</td><td>xxx.com/posts/xxx.html</td></tr><tr><td>article/:abbrlink.html/</td><td>xxx.com/article/xxx.html</td></tr></tbody></table><h3 id="pinyin-插件"><a href="#pinyin-插件" class="headerlink" title="pinyin 插件"></a>pinyin 插件</h3><ul><li><p>将中文链接转拼音，安装插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure></li><li><p>在 Hexo 根目录下的 _config.yml 文件中，修改以下的配置项：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">permalink: article&#x2F;:title.html</span><br><span class="line">permalink_pinyin:</span><br><span class="line">enable: true</span><br><span class="line">separator: &#39;-&#39;  # default: &#39;-&#39;</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>永久链接格式为</p></li></ul>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;xxx.com&#x2F;posts&#x2F;wen-zhang-ming.html</span><br></pre></td></tr></table></figure><ul><li>实用性不是很好，如果标题文字很多，链接依然会很长。</li></ul><h2 id="如何在页脚养鱼"><a href="#如何在页脚养鱼" class="headerlink" title="如何在页脚养鱼"></a>如何在页脚养鱼</h2><p>效果就在页脚，是不是很想要？这里简述 butterfly 主题的引入方法，其他主题类似，实在不行建议更换 butterfly 主题</p><p>！！！不要修改源码，若已修改请恢复原样<br>在主题配置的 <code>inject</code> 引入 js: <a href="https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fishes.js">https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fishes.js</a> <strong>即可</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">- &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;xiabo2&#x2F;CDN@latest&#x2F;fishes.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>调整页脚阴影透明度 <code>themes\butterfly\source\css\_layout\footer.styl</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">background-color: alpha($dark-black, .1)</span><br></pre></td></tr></table></figure><p>文章页页脚宽度多余导致出现横向滚动条，新建 <code>xxx.css</code>，添加以下 css 引入 <code>inject</code> 即可（若设置了全局背景去掉固定高度 <code>height: 160px</code> 引入即可）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">&#x2F;* 鱼塘固定宽度 *&#x2F;</span><br><span class="line">canvas:not(#ribbon-canvas), #web_bg &#123;</span><br><span class="line">    margin-bottom: -0.5rem;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 160px</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><details green="" open="" style="box-sizing: border-box; outline: none; margin: 0.5rem 0px; padding: 16px; display: block; border-radius: 4px; font-size: 0.7375rem; transition: all 0.28s ease 0s; border: 1px solid rgba(61, 197, 80, 0.3); line-height: 1.3; background: rgb(255, 255, 255);"><summary style="box-sizing: border-box; outline: none; margin: -16px -16px 0px; padding: 16px; display: block; cursor: pointer; border-radius: 4px 4px 0px 0px; color: rgb(85, 85, 85); font-size: 0.775rem; font-weight: 700; position: relative; background: rgb(235, 249, 237); line-height: normal; border-bottom: 1px solid rgba(61, 197, 80, 0.3);"><span>&nbsp;</span><p style="box-sizing: border-box; outline: none; margin: 0px 0px 0.5rem; padding: 0px 0px 0px 0.5rem; display: inline; border-bottom: none !important;">修改源码实现方法（其它主题可参考此处）</p></summary><div class="content" style="box-sizing: border-box; outline: none; margin: 0px -16px -16px; padding: 16px;"><ol style="box-sizing: border-box; outline: none; margin: 0.4rem 0px 0px; padding: 0px 0px 0px 0.8rem; list-style: none; counter-reset: li 0;"><li style="box-sizing: border-box; outline: none; margin: 0.2rem 0px; padding: 0.1rem 0.5rem 0.1rem 1.5rem; position: relative;"><p style="box-sizing: border-box; outline: none; margin: 0px 0px 0.5rem; padding: 0px 0px 0px 0.5rem;">先将扒来的 code 转为 pug</p><p style="box-sizing: border-box; outline: none; margin: 0px 0px 0.5rem; padding: 0px 0px 0px 0.5rem;"><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/Snipaste_2020-07-05_10-36-45.png" data-fancybox="group" data-caption="htmltopug" class="fancybox" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px !important; background-color: transparent; cursor: url(&quot;https://cdn.jsdelivr.net/gh/emeomo/vieu@master/S2.cur&quot;), auto !important; color: rgb(99, 143, 255); text-decoration: none; transition: all 0.2s ease 0s; overflow-wrap: break-word; display: inline-block; flex-flow: column nowrap; justify-content: center; align-items: center; overflow: hidden; border-radius: 2px; width: 790px; text-align: center;"><img src="https://cdn.jsdelivr.net/gh/xiabor/img/i/Snipaste_2020-07-05_10-36-45.png" alt="htmltopug" data-ll-status="loaded" class="loaded" style="box-sizing: border-box; outline: none; margin: 0px auto 0.8rem; padding: 0px; border-style: none; max-width: 100%; transition: all 0.2s ease 0s; display: block;"></a></p><div class="img-alt is-center" style="box-sizing: border-box; outline: none; margin: -0.5rem 0px 0.5rem; padding: 0px; text-align: center; color: rgb(76, 73, 72); position: fixed;">htmltopug</div><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">写进<span>&nbsp;</span><code style="box-sizing: border-box; outline: none; margin: 0px; padding: 0.1rem 0.2rem; font-family: consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif !important; font-size: 1em; background: rgba(27, 31, 35, 0.05); color: rgb(244, 116, 102); word-break: break-word; overflow-wrap: break-word;">\themes\butterfly\layout\includes\footer.pug</code><span>&nbsp;</span>末尾<p></p><figure class="highlight html" style="box-sizing: border-box; outline: none; margin: 0px 0px 1.2rem; padding: 0px; overflow: auto; background: rgb(33, 33, 33); color: rgb(238, 255, 255); line-height: 20px; position: relative; border-radius: 7px; box-shadow: rgba(0, 0, 0, 0.4) 0px 5px 10px 0px; transform: translateZ(0px);"><div class="highlight-tools" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: relative; overflow: hidden; width: 800px; height: 1.5rem; background: rgb(28, 28, 28); color: rgba(238, 255, 255, 0.8); font-size: 14px;"><i class="fas fa-angle-down code-expand" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0.4rem 0.7rem; -webkit-font-smoothing: antialiased; display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; line-height: 1; font-family: &quot;Font Awesome 5 Free&quot;; font-weight: 900; position: absolute; cursor: pointer; transition: all 0.3s ease 0s; transform: rotate(0deg); right: 0px;"></i><div class="code-lang" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: absolute; left: 1.7rem; text-transform: capitalize; font-weight: bold; font-size: 0.8rem; line-height: 1.5rem;">Html</div><div class="copy-notice" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: absolute; top: 0.25rem; right: 2.8rem; opacity: 0;"></div><i class="fas fa-paste copy-button" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; -webkit-font-smoothing: antialiased; display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; line-height: 1; font-family: &quot;Font Awesome 5 Free&quot;; font-weight: 900; position: absolute; top: 0.4rem; right: 1.8rem; cursor: pointer; transition: color 0.2s ease 0s;"></i></div><table style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; display: block; width: 800px; border-spacing: 0px; border-collapse: collapse; empty-cells: show; overflow: auto; border: none;"><tbody style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><tr style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><td class="code" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: none; vertical-align: middle;"><pre style="box-sizing: border-box; outline: none; margin: 0px; padding: 8px 0.5rem; font-family: consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif !important; font-size: 1em; overflow: auto; background: rgb(33, 33, 33); color: rgb(238, 255, 255); line-height: 20px; border: none; width: 547.2px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">#jsi-flying-fish-container.container</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">script(src='js/fish.js')</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">style.</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    @media only screen and (max-width: 767px){</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    #sidebar_search_box input[type=text]{width:calc(100% - 24px)}</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    }</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"></pre></td></tr></tbody></table></figure></li><li style="box-sizing: border-box; outline: none; margin: 0.2rem 0px; padding: 0.1rem 0.5rem 0.1rem 1.5rem; position: relative;"><p style="box-sizing: border-box; outline: none; margin: 0px 0px 0.5rem; padding: 0px 0px 0px 0.5rem;">然后在<span>&nbsp;</span><code style="box-sizing: border-box; outline: none; margin: 0px; padding: 0.1rem 0.2rem; font-family: consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif !important; font-size: 1em; background: rgba(27, 31, 35, 0.05); color: rgb(244, 116, 102); word-break: break-word; overflow-wrap: break-word;">inject</code><span>&nbsp;</span>引入 js:<span>&nbsp;</span><a href="https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fish.js" target="_blank" rel="noopener" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; background-color: transparent; cursor: url(&quot;https://cdn.jsdelivr.net/gh/emeomo/vieu@master/S2.cur&quot;), auto !important; color: rgb(99, 143, 255); text-decoration: none; transition: all 0.2s ease 0s; overflow-wrap: break-word;">https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fish.js</a></p><figure class="highlight yaml" style="box-sizing: border-box; outline: none; margin: 0px 0px 1.2rem; padding: 0px; overflow: auto; background: rgb(33, 33, 33); color: rgb(238, 255, 255); line-height: 20px; position: relative; border-radius: 7px; box-shadow: rgba(0, 0, 0, 0.4) 0px 5px 10px 0px; transform: translateZ(0px);"><div class="highlight-tools" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: relative; overflow: hidden; width: 800px; height: 1.5rem; background: rgb(28, 28, 28); color: rgba(238, 255, 255, 0.8); font-size: 14px;"><i class="fas fa-angle-down code-expand" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0.4rem 0.7rem; -webkit-font-smoothing: antialiased; display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; line-height: 1; font-family: &quot;Font Awesome 5 Free&quot;; font-weight: 900; position: absolute; cursor: pointer; transition: all 0.3s ease 0s; transform: rotate(0deg); right: 0px;"></i><div class="code-lang" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: absolute; left: 1.7rem; text-transform: capitalize; font-weight: bold; font-size: 0.8rem; line-height: 1.5rem;">Yaml</div><div class="copy-notice" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: absolute; top: 0.25rem; right: 2.8rem; opacity: 0;"></div><i class="fas fa-paste copy-button" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; -webkit-font-smoothing: antialiased; display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; line-height: 1; font-family: &quot;Font Awesome 5 Free&quot;; font-weight: 900; position: absolute; top: 0.4rem; right: 1.8rem; cursor: pointer; transition: color 0.2s ease 0s;"></i></div><table style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; display: block; width: 800px; border-spacing: 0px; border-collapse: collapse; empty-cells: show; overflow: auto; border: none;"><tbody style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><tr style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><td class="code" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: none; vertical-align: middle;"><pre style="box-sizing: border-box; outline: none; margin: 0px; padding: 8px 0.5rem; font-family: consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif !important; font-size: 1em; overflow: auto; background: rgb(33, 33, 33); color: rgb(238, 255, 255); line-height: 20px; border: none; width: 660.8px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="bullet" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">-</span> <span class="string" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; color: rgb(195, 232, 141);">&lt;script</span> <span class="string" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; color: rgb(195, 232, 141);">src="https://cdn.jsdelivr.net/gh/xiabo2/CDN@latest/fish.js"&gt;&lt;/script&gt;</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"></pre></td></tr></tbody></table></figure></li><li style="box-sizing: border-box; outline: none; margin: 0.2rem 0px; padding: 0.1rem 0.5rem 0.1rem 1.5rem; position: relative;"><p style="box-sizing: border-box; outline: none; margin: 0px 0px 0.5rem; padding: 0px 0px 0px 0.5rem;">引入之后效果如下，页脚太高，<code style="box-sizing: border-box; outline: none; margin: 0px; padding: 0.1rem 0.2rem; font-family: consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif !important; font-size: 1em; background: rgba(27, 31, 35, 0.05); color: rgb(244, 116, 102); word-break: break-word; overflow-wrap: break-word;">themes\butterfly\source\css\_layout\footer.styl</code><span>&nbsp;</span>调整下 css 即可 (补充：调整页脚阴影透明度为 0.1)<br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/fish.gif" data-fancybox="group" data-caption="页脚跳动的鱼" class="fancybox" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px !important; background-color: transparent; cursor: url(&quot;https://cdn.jsdelivr.net/gh/emeomo/vieu@master/S2.cur&quot;), auto !important; color: rgb(99, 143, 255); text-decoration: none; transition: all 0.2s ease 0s; overflow-wrap: break-word; display: inline-block; flex-flow: column nowrap; justify-content: center; align-items: center; overflow: hidden; border-radius: 2px; width: 790px; text-align: center;"><img src="https://cdn.jsdelivr.net/gh/xiabor/img/i/fish.gif" alt="页脚跳动的鱼" data-ll-status="loaded" class="loaded" style="box-sizing: border-box; outline: none; margin: 0px auto 0.8rem; padding: 0px; border-style: none; max-width: 100%; transition: all 0.2s ease 0s; display: block;"></a></p><div class="img-alt is-center" style="box-sizing: border-box; outline: none; margin: -0.5rem 0px 0.5rem; padding: 0px; text-align: center; color: rgb(76, 73, 72); position: fixed;">页脚跳动的鱼</div><p></p><figure class="highlight" style="box-sizing: border-box; outline: none; margin: 0px 0px 1.2rem; padding: 0px; overflow: auto; background: rgb(33, 33, 33); color: rgb(238, 255, 255); line-height: 20px; position: relative; border-radius: 7px; box-shadow: rgba(0, 0, 0, 0.4) 0px 5px 10px 0px; transform: translateZ(0px);"><div class="highlight-tools" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: relative; overflow: hidden; width: 800px; height: 1.5rem; background: rgb(28, 28, 28); color: rgba(238, 255, 255, 0.8); font-size: 14px;"><i class="fas fa-angle-down code-expand" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0.4rem 0.7rem; -webkit-font-smoothing: antialiased; display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; line-height: 1; font-family: &quot;Font Awesome 5 Free&quot;; font-weight: 900; position: absolute; cursor: pointer; transition: all 0.3s ease 0s; transform: rotate(0deg); right: 0px;"></i><div class="code-lang" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: absolute; left: 1.7rem; text-transform: capitalize; font-weight: bold; font-size: 0.8rem; line-height: 1.5rem;">Code</div><div class="copy-notice" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: absolute; top: 0.25rem; right: 2.8rem; opacity: 0;"></div><i class="fas fa-paste copy-button" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; -webkit-font-smoothing: antialiased; display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; line-height: 1; font-family: &quot;Font Awesome 5 Free&quot;; font-weight: 900; position: absolute; top: 0.4rem; right: 1.8rem; cursor: pointer; transition: color 0.2s ease 0s;"></i></div><table style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; display: block; width: 800px; border-spacing: 0px; border-collapse: collapse; empty-cells: show; overflow: auto; border: none;"><tbody style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><tr style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><td class="code" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: none; vertical-align: middle;"><pre style="box-sizing: border-box; outline: none; margin: 0px; padding: 8px 0.5rem; font-family: consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif !important; font-size: 1em; overflow: auto; background: rgb(33, 33, 33); color: rgb(238, 255, 255); line-height: 20px; border: none; width: 376.8px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-id" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">#footer-wrap</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">position</span>: <span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">absolute</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">padding</span>: 1<span class="selector-class" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">.2rem</span> 1<span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">rem</span> 1<span class="selector-class" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">.4rem</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">color: $light-grey</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">text-align</span>: <span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">center</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">left</span>: 0</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">right</span>: 0</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">top</span><span class="selector-pseudo" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">:0</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">bottom</span>: 0</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;"><span class="selector-id" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">#footer</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">  if hexo-config('footer_bg') != false</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    &amp;<span class="selector-pseudo" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">:before</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    <span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">position</span>: <span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">absolute</span></span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    <span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">width</span>: 100%</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    <span class="selector-tag" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;">height</span>: 100%</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    background-color: alpha($dark-black, .1)</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><span class="line" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; height: 1rem;">    content: ''</span><br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"></pre></td></tr></tbody></table></figure></li><li style="box-sizing: border-box; outline: none; margin: 0.2rem 0px; padding: 0.1rem 0.5rem 0.1rem 1.5rem; position: relative;"><p style="box-sizing: border-box; outline: none; margin: 0px 0px 0.5rem; padding: 0px 0px 0px 0.5rem;">另外，还是会出现报错，<br style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px;"><a href="https://cdn.jsdelivr.net/gh/xiabor/img/i/fish20200702225229.png" data-fancybox="group" data-caption="报错" class="fancybox" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px !important; background-color: transparent; cursor: url(&quot;https://cdn.jsdelivr.net/gh/emeomo/vieu@master/S2.cur&quot;), auto !important; color: rgb(99, 143, 255); text-decoration: none; transition: all 0.2s ease 0s; overflow-wrap: break-word; display: inline-block; flex-flow: column nowrap; justify-content: center; align-items: center; overflow: hidden; border-radius: 2px; width: 790px; text-align: center;"><img src="https://cdn.jsdelivr.net<iframe name="easyXDM_default8419_provider" id="easyXDM_default8419_provider" src="https://embed.widgetpack.com/widget/xdm/index.html?xdm_e=https%3A%2F%2Fxiabor.com&amp;xdm_c=default8419&amp;xdm_p=1" frameborder="0" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; position: absolute !important; top: -2000px !important; left: 0px !important;"></iframe>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单独页面|渲染|js</title>
      <link href="2020/11/18/019/"/>
      <url>2020/11/18/019/</url>
      
        <content type="html"><![CDATA[<p>Hexo 是一个轻量、快速，简单和强大的博客框架，当我们需要发布博文的时候，只需要将写好的文章（MarkDown文件）放入本地的 <code>\source\_posts</code> 文件夹，然后再推送上去就行了，原理就是当我们在执行 <code>hexo g</code> 命令时，<code>.md</code> 文件就会被转化成 HTML 文件，但是有时候我们需要新建一个独立的页面，这个页面不使用主题的渲染，具有自己独立的样式，可以放一些自己的作品，相册什么的，以下就介绍这种独立页面的实现方法。</p><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p>  使用 Hexo 提供的跳过渲染配置，在博客根目录的配置文件 <code>_config.yml</code> 里找到 <code>skip_render</code> 关键字，在后面添加想要跳过渲染的页面，比如我们创建 <code>\source\about\index.html</code>， 配置文件填写：<code>skip_render: about\**</code>，那么就表示 <code>\source\about</code> 里所有的文件将跳过渲染，里面的文件将会被直接复制到 public 文件夹，此时就会得到一个独立的 about 页面；官方文档：<a href="https://hexo.io/docs/configuration">https://hexo.io/docs/configuration</a></p><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p>  在文章头部的 Front-matter 里添加配置 <code>layout: false</code> 来跳过渲染配置，比如我们要使 about 页面跳过渲染，创建 <code>\source\about\index.md</code>，将这个页面的相关 HTML 代码写进<code>.md</code>文件并保存，然后在 <code>index.md</code> 的头部写入：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">xxxxxxxxxxxxx</span><br><span class="line">xx HTML代码 xx</span><br><span class="line">xxxxxxxxxxxxx</span><br><span class="line">&#123;% endraw %&#125;</span><br><span class="line">12345678</span><br></pre></td></tr></table></figure><p>PS：Front-matter 是 <code>.md</code> 文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/docs/front-matter">https://hexo.io/docs/front-matter</a><br><code>.md</code>文件中的 HTML 代码要用 <code>` 和 `</code> 包起来，使其能正确编译里面的代码</p><h3 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h3><p>在文章单独加入独立js脚本文件</p><p>md里可以写   js代码 </p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日历|鼠标特效果|星星</title>
      <link href="2020/11/18/018/"/>
      <url>2020/11/18/018/</url>
      
        <content type="html"><![CDATA[<ol><li>自定义样式的修改</li><li>插件的总结</li></ol><p>自己没怎么学过前端的知识，好多都是瞎折腾，有错误请指正！</p><p>说起主题，我前前后后用过有Next、Matery到现在的Butterfly。</p><p>刚开始Next主题是我搭建博客的最开始用的，黑白简约，功能也很多，但是缺点也是整体感觉太单调和不扁平化，然后我又网上看到了Matery主题(这种卡片式的博客一下子就吸引到我了)，接触了很多修改主题的方式，还加了群，群里小伙伴真的是很nice啊！</p><p>折腾了又一阵，我觉得Matery主题也有一些不方便，不太容易快速查找博客，分类、标签不直接，现在用了Butterfly，可玩性很高！开发主题的大佬居然和自己的年龄也差不多(差距啊:sob:),下面记录一下自己折腾的记录：</p><h3 id="鼠标特效"><a href="#鼠标特效" class="headerlink" title="鼠标特效"></a>鼠标特效</h3><p>鼠标拖动掉星星效果如下：</p><p><a href="https://cdn.jsdelivr.net/gh/SkironYong/skironImgs/img/20200415233821.gif"><img src="https://cdn.jsdelivr.net/gh/SkironYong/skironImgs/img/20200415233821.gif" alt="img"></a></p><ol><li><p>在<code>themes/Butterfly/source/js/third-part</code>目录下新建<code>cursor.js</code>文件，文件的网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.1.7/source/js/cursor.js">传送门</a>，将里面的内容复制到cursor.js中即可。</p></li><li><p>在主题配置文件<code>butterfly.yml</code>CDN处的<code>ClickShowText</code>后面加上一句 <code>/js/third-party/cursor.js</code> 引入js地址</p></li><li><p>打开<code>themes/Butterfly/layout/includes</code>目录下的<code>additional-js.pug</code>文件,在鼠标特效的下面位置处添加代码</p></li></ol><p>   Js</p>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if theme.cursor &amp;&amp; theme.cursor.enable</span><br><span class="line">  script(src&#x3D;url_for(theme.CDN.cursor)</span><br></pre></td></tr></table></figure><ol start="4"><li>在主题配置文件butterfly.yml中鼠标特效的地方开启我们的特效开关</li></ol><p>   Yml</p>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cursor: </span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h3 id="文章日历"><a href="#文章日历" class="headerlink" title="文章日历"></a>文章日历</h3><p>想在侧边栏实现文章日历📅的效果，可以记录发布文章的日期和频率，这里就要用到<code>hexo-generator-calendar</code>插件</p><p><a href="https://cdn.jsdelivr.net/gh/SkironYong/skironImgs/img/20200416203448.PNG"><img src="https://cdn.jsdelivr.net/gh/SkironYong/skironImgs/img/20200416203448.PNG" alt="img"></a></p><ol><li>安装<code>hexo-generator-calendar</code>插件</li></ol><p>   Shell</p>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install git:&#x2F;&#x2F;github.com&#x2F;howiefh&#x2F;hexo-generator-calendar.git --save</span><br></pre></td></tr></table></figure><ol start="2"><li><p>下载<code>calendar.js</code>和<code>languages.js</code>文件，保存到<code>themes\Butterfly\source\js</code>目录</p><ul><li><a href="https://github.com/pengloo53/Hexo-theme-light_cn/blob/master/source/js/calendar.js">calendar.js</a></li><li><a href="https://github.com/pengloo53/Hexo-theme-light_cn/blob/master/source/js/languages.js">languages.js</a></li></ul></li><li><p>编辑calendar.js文件，在最后一行 <code>&#125;(jQuery));</code> 的前面加上:</p></li></ol><p>   Javascript</p>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(document).ready(function () &#123;</span><br><span class="line">    $(&#39;#calendar&#39;).aCalendar(&#39;zh-CN&#39;);&#x2F;&#x2F;&#39;zh-CN&#39;请根据自己博客的语言选择</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="4"><li>编辑<code>butterfly.yml</code>文件，插入script插件：</li></ol><p>   Yaml</p>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    # - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;xxxxx&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src&#x3D;&quot;xxxx&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">      - &lt;script src&#x3D;&quot;&#x2F;js&#x2F;calendar.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">      - &lt;script src&#x3D;&quot;&#x2F;js&#x2F;languages.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>下载<a href="https://raw.githubusercontent.com/pengloo53/Hexo-theme-light_cn/master/source/css/_partial/calendar.styl">calendar.styl</a>，保存到<code>themes\Butterfly\source\css\ _layout</code>目录</li></ol><p>下载的<code>calendar.styl</code>文件样式有问题，可以根据自己的需要修改</p><p>Stylus</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#calendar</span><br><span class="line">  a</span><br><span class="line">    text-decoration none</span><br><span class="line"></span><br><span class="line">.cal-head</span><br><span class="line">  margin-bottom: 15px</span><br><span class="line">  position relative</span><br><span class="line">  height 20px</span><br><span class="line">  padding 8px 6px 2px 6px</span><br><span class="line"></span><br><span class="line">.cal-prev,.cal-next</span><br><span class="line">  position absolute</span><br><span class="line">  top 9px</span><br><span class="line">  width 16px</span><br><span class="line">  height 18px</span><br><span class="line">  padding 3px 4px</span><br><span class="line">  border 1px solid transparent</span><br><span class="line">  color #333</span><br><span class="line">  outline 0</span><br><span class="line"></span><br><span class="line">.cal-prev</span><br><span class="line">  left 8px</span><br><span class="line">  &amp;:before</span><br><span class="line">  border-right 9px solid #333</span><br><span class="line"></span><br><span class="line">.cal-next</span><br><span class="line">  right 8px</span><br><span class="line">  &amp;:before</span><br><span class="line">    border-left 9px solid #333</span><br><span class="line"></span><br><span class="line">.cal-prev:before,.cal-next:before</span><br><span class="line">  content &#39;&#39;</span><br><span class="line">  display block</span><br><span class="line">  width 0</span><br><span class="line">  height 0</span><br><span class="line">  border-top 5px solid transparent</span><br><span class="line">  border-bottom 5px solid transparent</span><br><span class="line"></span><br><span class="line">.cal-title</span><br><span class="line">  width 120px</span><br><span class="line">  margin 0 auto</span><br><span class="line">  color #333</span><br><span class="line">  font bold 14px&#x2F;18px Arial</span><br><span class="line">  text-align center</span><br><span class="line">  a</span><br><span class="line">    border 1px solid transparent</span><br><span class="line">    color #9f9f9f</span><br><span class="line"></span><br><span class="line">.cal,</span><br><span class="line">.cal th,</span><br><span class="line">.cal td</span><br><span class="line">  border 1px solid #d1d1d1</span><br><span class="line"></span><br><span class="line">.cal</span><br><span class="line">  display: table</span><br><span class="line">  border-collapse separate</span><br><span class="line">  border-spacing 0</span><br><span class="line">  border-width 1px 0 0 1px</span><br><span class="line">  table-layout fixed</span><br><span class="line">  width 100%</span><br><span class="line">  margin 0</span><br><span class="line">  th</span><br><span class="line">    background #9f9f9f</span><br><span class="line">    color #fff</span><br><span class="line">    border-width 0 1px 1px 0</span><br><span class="line">    font-weight 700</span><br><span class="line">  td</span><br><span class="line">    border-width 0 1px 1px 0</span><br><span class="line">  tbody</span><br><span class="line">    a</span><br><span class="line">      background-color #007acc</span><br><span class="line">      color #fff</span><br><span class="line">      display block</span><br><span class="line">      font-weight 700</span><br><span class="line">    .cal-today</span><br><span class="line">      background-color #66ecfd</span><br><span class="line">      color #fff</span><br><span class="line">  .cal-gray</span><br><span class="line">    color #bbb8b8</span><br><span class="line"></span><br><span class="line">[data-theme&#x3D;&#39;dark&#39;] .cal .cal-gray</span><br><span class="line">  color #505050</span><br><span class="line"></span><br><span class="line">.cal th,</span><br><span class="line">.cal td</span><br><span class="line">  font-weight normal</span><br><span class="line">  line-height 2.5625</span><br><span class="line">  padding 0</span><br><span class="line">  text-align center</span><br><span class="line"></span><br><span class="line">[data-theme&#x3D;&#39;dark&#39;] .cal .cal-foot</span><br><span class="line">  color #9f9f9f</span><br><span class="line"></span><br><span class="line">.cal .cal-foot</span><br><span class="line">  color #2ca6cb</span><br><span class="line"></span><br><span class="line">.cal-title a:hover,</span><br><span class="line">.cal-prev:hover,</span><br><span class="line">.cal-next:hover,</span><br><span class="line">.cal .cal-foot:hover,</span><br><span class="line">.cal .cal-foot:focus,</span><br><span class="line">.cal tbody a:hover,</span><br><span class="line">.cal tbody a:focus</span><br><span class="line">  background-color #686868</span><br><span class="line">  color #fff</span><br><span class="line">  cursor pointer</span><br></pre></td></tr></table></figure><ol><li>在<code>themes\Butterfly\layout\includes\widget</code> 文件夹新建 <code>card_calendar.pug</code> 文件，文件内容如下：</li></ol><p>Code</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.card-widget.card-calendar</span><br><span class="line">  .card-content</span><br><span class="line">    .item-headline</span><br><span class="line">      i.far.fa-calendar-alt(aria-hidden&#x3D;&quot;true&quot;)</span><br><span class="line">      span&#x3D; _p(&#39;aside.card_calendar&#39;)</span><br><span class="line">    div.widget-wrap</span><br><span class="line">    div#calendar.widget</span><br></pre></td></tr></table></figure><ol><li>编辑 <code>themes\Butterfly\layout\includes\widget\index.pug</code> 文件，在你想要显示的位置插入以下代码：</li></ol><p>Code</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if theme.aside.card_calendar</span><br><span class="line">  include .&#x2F;card_calendar.pug</span><br></pre></td></tr></table></figure><ol><li>编辑<code>butterfly.yml</code>文件，在<code>card_webinfo</code>下面添加一行<code>card_calendar: true</code></li><li>编辑 <code>themes\Butterfly\languages\zh-CN.yml</code> 文件 (请根据你的网站语言选择)，找到 <code>card_announcement: 公告</code> , 在下面添加一行 <code>card_calendar: 文章日历</code> (后面的文本可自定义)</li><li>如果不想显示直接把<code>butterfly.yml</code>文件的<code>card_calendar: true</code>改为<code>card_calendar: false</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO安装|命令行</title>
      <link href="2020/11/18/017/"/>
      <url>2020/11/18/017/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><ul><li><a href="https://nodejs.org/en/">node.js官方下载地址</a></li><li>从上面的链接下载node.js，并安装。<ul><li>注意：官方链接可能需要<strong>翻墙</strong></li><li>注意：我的操作系统是<strong>Windows 7 (64bit)</strong></li></ul></li></ul><h2 id="设置npm淘宝镜像站"><a href="#设置npm淘宝镜像站" class="headerlink" title="设置npm淘宝镜像站"></a>设置npm淘宝镜像站</h2><ul><li>npm默认的源的下载速度可能很慢，建议使用淘宝镜像替换。</li><li>执行下面的命令，将npm的源设置成淘宝镜像站。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry <span class="string">&quot;https://registry.npm.taobao.org&quot;</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="申请Github账号"><a href="#申请Github账号" class="headerlink" title="申请Github账号"></a>申请Github账号</h2><ul><li><a href="https://github.com/join?source=header-home">Github注册页面</a></li><li>输入<strong>用户名，Email，密码</strong>，注册账号。比如我的用户名是：xuezhisd</li></ul><h3 id="创建博客仓库"><a href="#创建博客仓库" class="headerlink" title="创建博客仓库"></a>创建博客仓库</h3><ul><li>注意，仓库名应该为：用户名.github.io。比如，我的仓库名是：**<a href="https://github.com/xuezhisd/xuezhisd.github.io">xuezhisd.github.io</a>**。</li></ul><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><ul><li><a href="https://git-scm.com/downloads/">git下载地址</a></li><li>下载git安装文件，双击执行安装。</li></ul><h3 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h3><ul><li>打开git bash终端。</li><li>设置user.name和user.email。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><ul><li>生成ssh密匙</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><ul><li>此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。</li></ul><h3 id="将公匙添加到github上"><a href="#将公匙添加到github上" class="headerlink" title="将公匙添加到github上"></a>将公匙添加到github上</h3><ul><li>详细教程自行baidu。</li><li>用户头像→Settings→SSH and GPG keys→New SSH key→将id_rsa.pub中的内容复制到Key文本框中，然后点击Add SSH key(添加SSH)按钮。</li></ul><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><ul><li>执行以下命令安装hexo。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装hexo</span></span><br><span class="line">npm install hexo-cli g</span><br><span class="line"><span class="comment"># 初始化博客文件夹</span></span><br><span class="line">hexo init blog</span><br><span class="line"><span class="comment"># 切换到该路径</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment"># 安装hexo的扩展插件</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 安装其它插件</span></span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">1234567891011121314151617</span><br></pre></td></tr></table></figure><h2 id="初探hexo"><a href="#初探hexo" class="headerlink" title="初探hexo"></a>初探hexo</h2><ul><li>第一次使用hexo，在本地创建服务器使用。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 生成静态页面</span><br><span class="line">hexo generate</span><br><span class="line"># 开启本地服务器</span><br><span class="line">hexo s</span><br><span class="line">1234</span><br></pre></td></tr></table></figure><ul><li><p>打开浏览器，地址栏中输入：<strong><a href="http://localhost:4000/">http://localhost:4000/</a></strong>,应该可以看见刚刚创建的博客了。</p></li><li><p>问题：为什么访问</p><p><a href="http://localhost:4000/">http://localhost:4000/</a></p><p>，无反应？</p><ul><li>解决方法：可能是由于端口问题引起的。使用Ctrl+C中断本地服务，使用命令<code>hexo s -p 5000</code>重新开启本地服务，访问**<a href="http://localhost:5000/**%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2%E4%BA%86%E3%80%82">http://localhost:5000/**可以看到博客页面了。</a></li></ul></li></ul><h2 id="将hexo博客部署到github上"><a href="#将hexo博客部署到github上" class="headerlink" title="将hexo博客部署到github上"></a>将hexo博客部署到github上</h2><ul><li>修改配置文件<strong>blog/_config.yml</strong>，修改deploy项的内容，如下所示：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment 注释</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  # 类型</span><br><span class="line">  type: git</span><br><span class="line">  # 仓库</span><br><span class="line">  repo: git@github.com:xuezhisd&#x2F;xuezhisd.github.io.git</span><br><span class="line">  # 分支</span><br><span class="line">  branch: master</span><br><span class="line">123456789</span><br></pre></td></tr></table></figure><ul><li>注意：<strong>type: git</strong>中的冒号后面由空格。</li><li>注意：将<a href="mailto:&#x67;&#105;&#116;&#x40;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;">&#x67;&#105;&#116;&#x40;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;</a>:<strong>xuezhisd/xuezhisd</strong>.github.io.git中的用户名换成自己的用户名<a href="mailto:&#x67;&#105;&#116;&#64;&#x67;&#x69;&#x74;&#x68;&#117;&#98;&#x2e;&#x63;&#x6f;&#109;">&#x67;&#105;&#116;&#64;&#x67;&#x69;&#x74;&#x68;&#117;&#98;&#x2e;&#x63;&#x6f;&#109;</a>:<strong>github_username/github_username</strong>.github.io.git。</li></ul><h3 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h3><ul><li>输入下面的命令将hexo博客部署到github中：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 清空静态页面</span><br><span class="line">hexo clean</span><br><span class="line"># 生成静态页面</span><br><span class="line">hexo generate</span><br><span class="line"># 部署 </span><br><span class="line">hexo deploy</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><ul><li>打开网页，输入<a href="http://github_username.github.io，打开github上托管的博客。如我的博客地址是：http://xuezhisd.github.io。">http://github_username.github.io，打开github上托管的博客。如我的博客地址是：http://xuezhisd.github.io。</a></li></ul><h1 id="hexo命令缩写"><a href="#hexo命令缩写" class="headerlink" title="hexo命令缩写"></a>hexo命令缩写</h1><ul><li>hexo支持命令缩写，如下所示。<code>hexo g</code>等价于<code>hexo generate</code></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g：hexo generate</span><br><span class="line">hexo c：hexo clean</span><br><span class="line">hexo s：hexo server</span><br><span class="line">hexo d：hexo deploy</span><br><span class="line">1234</span><br></pre></td></tr></table></figure><h1 id="hexo组合命令"><a href="#hexo组合命令" class="headerlink" title="hexo组合命令"></a>hexo组合命令</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清除、生成、启动</span></span><br><span class="line">hexo clean &amp;&amp; hexo g -s</span><br><span class="line"><span class="comment"># 清除、生成、部署</span></span><br><span class="line">hexo clean &amp;&amp; hexo g -d</span><br><span class="line">1234</span><br></pre></td></tr></table></figure><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="hexo-deploy没有反应？"><a href="#hexo-deploy没有反应？" class="headerlink" title="hexo deploy没有反应？"></a>hexo deploy没有反应？</h2><ul><li>修改配置文件：<strong>_config.yml</strong>时，冒号后面没加空格。</li></ul><h2 id="hexo-s-网站打不开？"><a href="#hexo-s-网站打不开？" class="headerlink" title="hexo s 网站打不开？"></a>hexo s 网站打不开？</h2><ul><li>端口占用，换个端口就好了。执行命令<code>hexo s -p 5000</code>，并在浏览器地址栏输入<a href="http://localhost:5000，回车访问。">http://localhost:5000，回车访问。</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>评论系统|测评</title>
      <link href="2020/11/18/016/"/>
      <url>2020/11/18/016/</url>
      
        <content type="html"><![CDATA[<p>静态博客纵有万般好，但不得不承认其常常需要很多奇技淫巧</p><p>评论系统便是其代表之一。</p><p>我尝试过数种第三方评论系统（Disqus/Gitalk/Valine/LiveRe(来必力)/畅言），并在其中反复横跳，丢失了不少可爱的评论，也很遗憾未能找到一款真正百无挑剔的评论系统。</p><blockquote><p>一个事物的发展往往是一个波浪式前进、循环往复式上升的过程。</p></blockquote><p>我将简单对我使用过的评论系统之利弊进行对比分析（可能包含许多个人色彩），以便各位看官参考。</p><hr><h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a><a href="http://disqus.com/">Disqus</a></h3><p><a href="http://disqus.com/">Disqus</a> 作为当前最大的第三方评论系统，功能强大，也不用担心数据跑路。<br>使用广泛，一个账号可以通用许多博客评论，甚至可以和均使用 Disqus 作为评论系统的网站建立联系，形成社区。</p><p>但对于国内来说，却有一个致命缺点，需要科学上网。</p><blockquote><p>还可以使用 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a>，为无法连通 Disqus 的访客通过 Disqus API 在前端页面渲染一个评论列表。但真正想要评论，仍须科学上网。<br><a href="https://github.com/fooleap/disqus-php-api">disqus-php-api</a> 则可以代理 Disqus，我尝试使用了一下，填写作者的 API 时，竟然直接创建到<a href="https://disqus.com/home/forum/fooleap/">作者的讨论</a>里了……也就是说还是需要自建，又稍微脱离了使用第三方评论的初心。</p></blockquote><p>我原本已经痛定思痛准备更换 Disqus 了，却发现其加载的请求与资源相当多（即便我已经关闭了 Disqus 的追踪和返利链接），最终还是退缩起来。</p><p>其实如果不是因为被墙，我还是很想直接用 Disqus 的，但是我还是有评论就很高兴的人，所以不想因此而有过高门槛。</p><h3 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a><a href="https://gitalk.github.io/">Gitalk</a></h3><p>在 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 诞生之前，还有一款 <a href="https://github.com/imsun/gitment/">Gitment</a>。</p><p>应该说 Gitment 是第一款利用 GitHub Issues 的评论系统。但是作者前后维护不到三个月便弃坑了。<br>虽然开源项目无可指责，但自己作为满怀期待的初期用户着实还是有些不开心。</p><p>Gitalk 相比 Gitment 则持续维护了很久。所以首先肯定与感谢作者的开源精神与贡献。</p><p>不过中途因为 GitHub API 的安全策略改变，每次进入文章都会调用 Gitalk 而收到了一大堆的安全警告邮件。</p><blockquote><p>现在已经修复 <a href="https://github.com/gitalk/gitalk/issues/343">GitHub app API query parameter deprecation</a></p></blockquote><p>而关闭了一段时间，也一直没有再启用。</p><p>以及 Gitalk 调用 OAuth 时会申请获取对所有公开项目的读<strong>写</strong>权限，如下图所示。</p><p><img src="https://i.loli.net/2020/05/17/FOLHuTXn1JZYmrb.jpg" alt="gitalk-security.jpg"></p><p>你可以到<a href="https://gitalk.github.io/">此处</a>尝试登陆。</p><blockquote><p>这似乎是因为 GitHub 无法继续划分权限。</p></blockquote><p>也就是说使用 Gitalk 评论的用户必须完全相信博主的 OAuth 不会作恶，同时因为 GitHub OAuth 不支持 CORS (<a href="https://github.com/isaacs/github/issues/330">OAuth web flow endpoints don’t support CORS</a>)，<code>access_token</code> 还必须经过 <code>https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token</code> 这一代理才能获取。</p><p>当然也可以选择自建，但是不是有些脱离选择静态博客的初心了呢。~~</p><p>所以我着实有些不放心，也从用户的角度没有自信能完全取得游客的信任。（有些用户使用 GitHub OAuth 时可能没有注意到这里，所以也算提个醒。）</p><p>我最理想的情况是 gitalk 在不传入 <code>clientSecret</code> 等参数，只提供必要的 <code>repo</code> 时，可以渲染文章对应标题的 Issue 评论内容。（类似于 Sukka 的 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a>）</p><blockquote><p>感觉理论上是可以实现的，毕竟本来 Issue 就都是公开的。GitHub 也有完备的 <a href="https://developer.github.com/v3/">API</a>。</p></blockquote><p>然后当用户想要评论时，点击链接跳转到对应 Issue 进行回复即可。这样登陆验证等全交给 GitHub 来做就可以了。<br><a href="https://utteranc.es/">utterances</a> 似乎很不错，可以作为 Gitalk 的替代品。</p><h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a><a href="https://valine.js.org/">Valine</a></h3><p>当 Gitalk 关闭后，<a href="https://github.com/xCss/Valine">Valine</a> 一直是我在使用的方案。</p><blockquote><p>关于邮件提醒等功能则可以使用 <a href="https://github.com/DesertsP/Valine-Admin">Valine-Admin</a></p></blockquote><p>但是最近 Valine 不知何故在 <a href="https://github.com/xCss/Valine/blob/master/README.md">README</a> 里写上了 <code>由于某些原因，src目录将从v1.4.0后暂停更新.</code>。</p><p>也就是说 Valine 相当于开始闭源。</p><p>且在闭源后，作者在其中加入了百度统计（<a href="https://github.com/xCss/Valine/issues/258">v1.4.2, v1.4.1 will always load stats plugin from hm.baidu.com</a>），我翻看了 <a href="https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/Valine.min.js">v1.14.14</a> 似乎没有再找到相关代码。</p><p>加之昨日，LeanCloud 始终登不上去（只是我个人，询问了其他朋友都正常，自己睡了一觉后也正常了），让我有点担忧起评论的数据。<br>说到底，其实一直都是在白嫖的 <a href="https://leancloud.cn/">LeanCloud</a> 开发版的免费资源，而这数据本身就算丢失了 LeanCloud 也无需对此负责。</p><p>所以对于是否继续使用 Valine 也有所动摇起来。</p><h3 id="畅言"><a href="#畅言" class="headerlink" title="畅言"></a><a href="http://changyan.kuaizhan.com/">畅言</a></h3><p>国内搜狐旗下的评论系统。（算是国内还幸存的屈指可数的几家）（多说、网易云跟帖均已关闭。）</p><p>但是，都 2020 年了，官网还没有强制 <code>https</code> 跳转还是比较稀奇的。</p><p>过去我曾经使用过，印象里它会自行给你插广告且占位很大，此外用户还须绑定手机号。</p><p>所以基本不考虑。</p><h3 id="来必力-LiveRe"><a href="#来必力-LiveRe" class="headerlink" title="来必力 LiveRe"></a><a href="https://livere.com/">来必力 LiveRe</a></h3><p><a href="https://livere.com/">LiveRe 来必力</a> 是一家来自韩国的评论系统，支持多种 SNS 账号连接登陆（QQ、微信、GitHub、百度、微博、豆瓣、Twitter 等等），很接地气。<br>且好处是<strong>不</strong>需要科学上网（官网甚至是备案过的），但是国内访问速度还是比较慢。</p><p>因其体量，仍旧担心是否能够坚持下去不倒闭。毕竟国外用户大多数会直接选择 Disqus，而这也不是国内本土产品。截至目前官网显示的客户量竟然只有 1,350 个，对于已经运行数年的网站来说，是不是有些过少了呢？</p><p>但光就其功能上来说，还是值得一用的。</p><hr><h3 id="utterances"><a href="#utterances" class="headerlink" title="utterances"></a><a href="https://utteranc.es/">utterances</a></h3><p>一个轻量的基于 GitHub Issues 的评论挂件。</p><p>评论区里朋友的推荐。使用 <a href="https://github.com/utterances-bot">utterances-bot</a> 在没有 Issue 时，自动帮我们发起 Issue，使用 GitHub App 进行权限认证，请求了更少的用户权限。</p><p>使用方便，只需要插入脚本即可，且只需要授权一次，在其他使用该插件的评论中可以直接评论。</p><p>此前一直挂着梯子没注意，实际上 utterances 需要请求 GitHub 的 API，所以不开梯子也很难成功加载。</p><blockquote><p><a href="https://beaudar.lipk.org/">Beaudar - 表达</a> 执手对影成双 做的 Utterances 的中文版本。</p></blockquote><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><table><thead><tr><th>第三方评论系统</th><th>开源</th><th>速度</th><th>是否被墙</th><th>可否实现 PJAX</th><th>数据可靠性</th></tr></thead><tbody><tr><td>Disqus</td><td>否</td><td>慢</td><td>是</td><td>可以</td><td>市场占有率高，可靠</td></tr><tr><td>Gitalk</td><td>是</td><td>中等</td><td>否</td><td><a href="https://github.com/gitalk/gitalk/issues/205">不可以</a></td><td>GitHub 还在一天，就永远不用担心</td></tr><tr><td>LiveRe</td><td>否</td><td>较慢</td><td>否</td><td>不可以</td><td>存疑</td></tr><tr><td>Valine</td><td>薛定谔的开源</td><td>快</td><td>否</td><td>可以</td><td>取决于 LeanCloud（看你是不是付费用户了）</td></tr></tbody></table><p>以下是同一个页面加载不同评论系统时 <code>Dev Tools -&gt; Network</code> 的信息。（None 为不加载评论系统）</p><blockquote><p>Gitalk 懒得配置了，速度应该在 LiveRe 与 Valine 之间，影响不大。</p></blockquote><table><thead><tr><th>name</th><th>request</th><th>transferred</th><th>resources</th><th>Finish</th><th>DOMCOntentLoaded</th><th>Load</th></tr></thead><tbody><tr><td>None</td><td>35</td><td>315 kB</td><td>850 kB</td><td>1.53 s</td><td>672 ms</td><td>1.52s</td></tr><tr><td>Disqus</td><td>94</td><td>1.9 MB</td><td>4.0 MB</td><td>16.51 s</td><td>1.38 s</td><td>2.24 s</td></tr><tr><td>LiveRe</td><td>60</td><td>1.1 MB</td><td>3.2 MB</td><td>13.06 s</td><td>1.14 s</td><td>1.98 s</td></tr><tr><td>Valine</td><td>43</td><td>408 kB</td><td>1.1 MB</td><td>5.66 s</td><td>1.29 s</td><td>1.83 s</td></tr></tbody></table><p>简而言之，Disqus 最重最慢，Valine 最轻最快。与之对应的自然是功能强弱。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>回顾下来，我现在最能信任的还是 GitHub 与 Disqus。体量足够大，不用担心跑路。<br>虽然很想直接用 Disqus，但是我本身就不是产出硬核技术文章的人，对于想要评论的游客要求科学上网未免有些苛刻。</p><p>GitHub 倒是既慷慨又实用，所以要是能渲染 Issue 评论预览，想评论的点击链接跳转对应 Issue 就好了。</p><p>所以我目前的解决方案是 Valine 和 GitHub Issues 混用。（但是结果大家基本都是直接用的 Valine ……）</p><p>评论区的 GitHub Issues 我设置了跳转搜索对应文章标题的 Issue，当没有相关 Issue 时，大家也可以通过预置的 Comment 评论模版，新建 Issue。</p><blockquote><p>但是因为要多跳几个链接，无法直接显示在评论区中预览，所以基本没有人用。<br>不过我认为相比 Valine 的数据（保不准哪天我就因为各种原因不得不抛弃它了），显然 GitHub 要更为可靠些。所以重要的留言可以考虑留在 Issue 里哦～</p></blockquote><p>GitHub 最近则在内测 <a href="https://github.com/zeit/now/discussions/">Discussions</a> 感觉也是一个不错的交流方式（其实是论坛），权限方面或许会更加友好，值得期待。</p><p><a href="https://utteranc.es/">utterances</a> 同样基于 GitHub Issues，可以抵消权限方面的担忧。当使用了 GitHub API，对于国内来说访问还是很慢。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>up酱|气泡|标题|手机端|页脚|滚动条|颜色</title>
      <link href="2020/11/18/015/"/>
      <url>2020/11/18/015/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>此篇文章会持续随着 <code>Butterfly主题</code>版本更新，如果你喜欢那就 <code>Ctrl+D</code> 吧😉</p><p>此次修改<code>无修改源码</code>，全部采用外部引用 <code>JS</code>、<code>CSS</code> 覆盖实现<br>可放心使用，后期如需主题升级，可直接根据主题作者文档升级即可。<br>遇到的一切问题本贴不给予回复处理</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li>安装或者切换主题后 <code>hexo s</code> 打开 <code>http://localhost:4000/</code> 后抱错</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">extends includes&#x2F;layout.pug block content #recent-posts.recent-posts include includes&#x2F;recent-posts.pug include includes&#x2F;pagination.pug</span><br></pre></td></tr></table></figure><p>未安装 <code>pug</code> 依赖和<code>渲染插件</code>依赖</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="CSS-修改"><a href="#CSS-修改" class="headerlink" title="CSS 修改"></a>CSS 修改</h2><p>新建 <code>Hexo-Butterfly\themes\Butterfly-Master\source\css\Lete.css</code>(css 文件名自定义)</p><h3 id="自定义字体"><a href="#自定义字体" class="headerlink" title="自定义字体"></a>自定义字体</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 自定义字体 *&#x2F;</span><br><span class="line">@font-face &#123;</span><br><span class="line">    font-family: &#39;sleek&#39;;</span><br><span class="line">    src: url(&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN2&#x2F;zaxiang&#x2F;sleek.woff2&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件，找到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yml</span><br><span class="line"># Global font settings</span><br><span class="line"># Don&#39;t modify the following settings unless you know how they work (非必要不要修改)</span><br><span class="line">font:</span><br><span class="line">  font-family: &#39;sleek&#39; # 全局字体</span><br><span class="line">  code-font: &#39;sleek&#39; # 如果你想让代码块也使用自定义字体</span><br></pre></td></tr></table></figure><h3 id="UP-酱"><a href="#UP-酱" class="headerlink" title="UP 酱"></a>UP 酱</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 隐藏回到顶部按钮，替换为up酱 *&#x2F;</span><br><span class="line"></span><br><span class="line">#go-up i &#123;</span><br><span class="line">    display: none;</span><br><span class="line">    background-color: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#go-up &#123;</span><br><span class="line">    background-color: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#upj &#123;</span><br><span class="line">    transform: translate(-70px, -80px) !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="目录折叠按钮颜色"><a href="#目录折叠按钮颜色" class="headerlink" title="目录折叠按钮颜色"></a>目录折叠按钮颜色</h3><p>也就是左下角的那个按钮</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 目录隐藏按钮颜色 *&#x2F;</span><br><span class="line"></span><br><span class="line">#toggle-sidebar &#123;</span><br><span class="line">    color: #e58a8a !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="版权去划线"><a href="#版权去划线" class="headerlink" title="版权去划线"></a>版权去划线</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 版权链接去掉下划线 *&#x2F;</span><br><span class="line"></span><br><span class="line">.layout_post .post-copyright .post-copyright-info a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="博主昵称颜色"><a href="#博主昵称颜色" class="headerlink" title="博主昵称颜色"></a>博主昵称颜色</h3><p>也就是首页侧边栏头像下面那个昵称</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 博主昵称颜色 *&#x2F;</span><br><span class="line">.author-info__name &#123;</span><br><span class="line">    color: #ff7242;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="评论框样式优化"><a href="#评论框样式优化" class="headerlink" title="评论框样式优化"></a>评论框样式优化</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 评论框  *&#x2F;</span><br><span class="line"></span><br><span class="line">.vwrap &#123;</span><br><span class="line">    box-shadow: 2px 2px 5px #bbb;</span><br><span class="line">    background: rgba(255, 255, 255, 0.3);</span><br><span class="line">    border-radius: 8px;</span><br><span class="line">    padding: 30px;</span><br><span class="line">    margin: 30px 0px 30px 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;* 提交按钮 *&#x2F;</span><br><span class="line"></span><br><span class="line">#vcomment button &#123;</span><br><span class="line">    padding: 0.3rem 0.8rem;</span><br><span class="line">    border-color: #fff;</span><br><span class="line">    background-color: #e58a8a;</span><br><span class="line">    color: #fff;</span><br><span class="line">    font-size: 0.7rem;</span><br><span class="line">    -webkit-transition: all 0.3s;</span><br><span class="line">    -moz-transition: all 0.3s;</span><br><span class="line">    -o-transition: all 0.3s;</span><br><span class="line">    -ms-transition: all 0.3s;</span><br><span class="line">    transition: all 0.3s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;* 评论区代码块 *&#x2F;</span><br><span class="line"></span><br><span class="line">.v[data-class&#x3D;v] code &#123;</span><br><span class="line">    color: #c7254e;</span><br><span class="line">    background-color: #F9F2F4;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 设置评论框 *&#x2F;</span><br><span class="line"></span><br><span class="line">.vcard &#123;</span><br><span class="line">    box-shadow: 2px 2px 5px #bbb;</span><br><span class="line">    background: rgba(255, 255, 255, 0.3);</span><br><span class="line">    border-radius: 8px;</span><br><span class="line">    padding: 30px;</span><br><span class="line">    margin: 30px 0px 0px 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;* 取消回复聊天框 *&#x2F;</span><br><span class="line"></span><br><span class="line">.vquote .vcard &#123;</span><br><span class="line">    box-shadow: 2px 2px 5px transparent;</span><br><span class="line">    background: rgba(255, 255, 255, 0.0);</span><br><span class="line">    padding: 0px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页脚透明"><a href="#页脚透明" class="headerlink" title="页脚透明"></a>页脚透明</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 页脚透明 *&#x2F;</span><br><span class="line"></span><br><span class="line">#footer &#123;</span><br><span class="line">    background: transparent !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="a-标签颜色"><a href="#a-标签颜色" class="headerlink" title="a 标签颜色"></a>a 标签颜色</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* a标签默认颜色 *&#x2F;</span><br><span class="line"></span><br><span class="line">#article-container a &#123;</span><br><span class="line">    color: #00c4b6;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 鼠标悬停时的颜色 *&#x2F;</span><br><span class="line"></span><br><span class="line">#article-container a:hover &#123;</span><br><span class="line">    color: #e58a8a;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*a标签颜色*&#x2F;</span><br><span class="line">a &#123;</span><br><span class="line">    color: #00c4b6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页博客昵称颜色"><a href="#首页博客昵称颜色" class="headerlink" title="首页博客昵称颜色"></a>首页博客昵称颜色</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 首页中间打字效果上方 *&#x2F;</span><br><span class="line">#page-header #site_title &#123;</span><br><span class="line">    color: #80bdab;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 顶部导航栏 *&#x2F;</span><br><span class="line">#nav a &#123;</span><br><span class="line">    color: #f9f2f4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页脚超链接"><a href="#页脚超链接" class="headerlink" title="页脚超链接"></a>页脚超链接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;*页脚a标签字体颜色*&#x2F;</span><br><span class="line">#footer-wrap a &#123;</span><br><span class="line">    color: #00c4b6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页脚字体颜色"><a href="#页脚字体颜色" class="headerlink" title="页脚字体颜色"></a>页脚字体颜色</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;*页脚自定义字段字体颜色*&#x2F;</span><br><span class="line">&#x2F;* 也就是配置文件里的footer_custom_text *&#x2F;</span><br><span class="line">.footer_custom_text &#123;</span><br><span class="line">    color: #00c4b6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="手机端显示"><a href="#手机端显示" class="headerlink" title="手机端显示"></a>手机端显示</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;*移动端优化：去除归档、标签、最新文章、公告、、只保留网站统计*&#x2F;</span><br><span class="line"></span><br><span class="line">@media screen and (max-width: 800px) &#123;</span><br><span class="line">    #aside_content div:not(:last-child) &#123;</span><br><span class="line">        display: none;</span><br><span class="line">        font-size: 13px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 鼠标图标 *&#x2F;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;Jkll8I.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*a标签*&#x2F;</span><br><span class="line"></span><br><span class="line">a:hover &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*按钮*&#x2F;</span><br><span class="line"></span><br><span class="line">button:hover &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#rightside&gt;div&gt;button,</span><br><span class="line">#rightside&gt;div&gt;a &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    margin-bottom: 2px;</span><br><span class="line">    width: 30px;</span><br><span class="line">    height: 30px;</span><br><span class="line">    color: var(--btn-color);</span><br><span class="line">    text-align: center;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;* 打赏 *&#x2F;</span><br><span class="line"></span><br><span class="line">.post-reward .reward-button &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;* 文章标签 *&#x2F;</span><br><span class="line"></span><br><span class="line">.layout_post .tag_share .post-meta__tags &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;* 评论区 *&#x2F;</span><br><span class="line"></span><br><span class="line">.vcol * &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.v[data-class&#x3D;v] .vicon &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.v[data-class&#x3D;v] .vbtn &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;* 回复 *&#x2F;</span><br><span class="line"></span><br><span class="line">.vat &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*i标签*&#x2F;</span><br><span class="line"></span><br><span class="line">i:hover &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*up酱*&#x2F;</span><br><span class="line"></span><br><span class="line">#upj:hover &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*页脚a标签*&#x2F;</span><br><span class="line"></span><br><span class="line">#footer-wrap a:hover &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;*分页器*&#x2F;</span><br><span class="line"></span><br><span class="line">#pagination .page-number:hover &#123;</span><br><span class="line">    cursor: url(https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN@1.0&#x2F;Use&#x2F;JkuClT.png), auto;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 分页器的三个点(...) *&#x2F;</span><br><span class="line">.space &#123;</span><br><span class="line">    color: #00c4b6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 滚动条 *&#x2F;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">    width: 10px;</span><br><span class="line">    height: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">    background-color: #e58a8a;</span><br><span class="line">    background-image: -webkit-linear-gradient( 45deg, rgba(255, 255, 255, 0.4) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.4) 75%, transparent 75%, transparent);</span><br><span class="line">    border-radius: 2em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">    background-color: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-moz-selection &#123;</span><br><span class="line">    color: #fff;</span><br><span class="line">    background-color: #e58a8a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打字效果渐变"><a href="#打字效果渐变" class="headerlink" title="打字效果渐变"></a>打字效果渐变</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">&#x2F;* 打字效果渐变 *&#x2F;</span><br><span class="line"></span><br><span class="line">@-webkit-keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-moz-keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        background-position: 100% 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        background-position: 0 50%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#subtitle &#123;</span><br><span class="line">    background: linear-gradient(-45deg, #ee7752, #ce3e75, #23a6d5, #23d5ab);</span><br><span class="line">    background-size: 400% 400%;</span><br><span class="line">    -webkit-animation: Gradient 10s ease infinite;</span><br><span class="line">    -moz-animation: Gradient 10s ease infinite;</span><br><span class="line">    animation: Gradient 10s ease infinite;</span><br><span class="line">    -o-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    -webkit-background-clip: text;</span><br><span class="line">    -webkit-text-fill-color: transparent;</span><br><span class="line">    border-top-left-radius: 10px;</span><br><span class="line">    border-top-right-radius: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#subtitle:before &#123;</span><br><span class="line">    background-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JS-修改"><a href="#JS-修改" class="headerlink" title="JS 修改"></a>JS 修改</h2><p>新建 <code>Hexo-Butterfly\themes\Butterfly-Master\source\js\Lete.js</code>(js 文件名自定义)</p><h3 id="UP-酱-1"><a href="#UP-酱-1" class="headerlink" title="UP 酱"></a>UP 酱</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">&#x2F;*添加图片top*&#x2F;</span><br><span class="line">var top_up &#x3D; &quot;&lt;img id&#x3D;&#39;upj&#39; class&#x3D;&#39;upj&#39; style&#x3D;&#39;max-width: 1000%; transform: translate(-70px,-70px);&#39; src&#x3D;&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;lete114&#x2F;CDN&#x2F;Use&#x2F;up.gif&#39; title&#x3D;&#39;回到顶部&#39; &gt;&quot;;</span><br><span class="line">&#x2F;*添加到返回顶部按钮下*&#x2F;</span><br><span class="line">document.getElementById(&quot;go-up&quot;).innerHTML +&#x3D; top_up;</span><br></pre></td></tr></table></figure><h3 id="手机端"><a href="#手机端" class="headerlink" title="手机端"></a>手机端</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">&#x2F;* 手机客户端导航栏默认隐藏 *&#x2F;</span><br><span class="line">var mobile_sidebar_menus &#x3D; document.getElementById(&quot;mobile-sidebar-menus&quot;);</span><br><span class="line">var menus_item_child &#x3D; mobile_sidebar_menus.getElementsByClassName(&quot;menus_item_child&quot;);</span><br><span class="line">var menus_expand &#x3D; mobile_sidebar_menus.getElementsByClassName(&quot;expand&quot;);</span><br><span class="line">for (var i &#x3D; 0; i &lt; menus_item_child.length; i++) &#123;</span><br><span class="line">    menus_item_child[i].style.display &#x3D; &quot;none&quot;;</span><br><span class="line">    menus_expand[i].className +&#x3D; &quot; closed&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="卖萌标题"><a href="#卖萌标题" class="headerlink" title="卖萌标题"></a>卖萌标题</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">&#x2F;&#x2F; 可爱的Title</span><br><span class="line">var OriginTitle &#x3D; document.title;</span><br><span class="line">var titleTime;</span><br><span class="line">document.addEventListener(&#39;visibilitychange&#39;, function() &#123;</span><br><span class="line">    if (document.hidden) &#123;</span><br><span class="line">        $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;&#x2F;img&#x2F;favicon.ico&quot;);</span><br><span class="line">        document.title &#x3D; &#39;(つェ⊂) 我藏好了哦~~&#39;;</span><br><span class="line">        clearTimeout(titleTime);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;&#x2F;img&#x2F;favicon.ico&quot;);</span><br><span class="line">        document.title &#x3D; &#39;(*´∇｀*) 被你发现啦~~&#39; + OriginTitle;</span><br><span class="line">        titleTime &#x3D; setTimeout(function() &#123;</span><br><span class="line">            document.title &#x3D; OriginTitle;</span><br><span class="line">        &#125;, 2000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="气泡"><a href="#气泡" class="headerlink" title="气泡"></a>气泡</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">&#x2F;&#x2F; 气泡</span><br><span class="line">function qipao() &#123;</span><br><span class="line">    $(&#39;#page-header&#39;).circleMagic(&#123;</span><br><span class="line">        radius: 10,</span><br><span class="line">        density: .2,</span><br><span class="line">        color: &#39;rgba(255,255,255,.4)&#39;,</span><br><span class="line">        clearOffset: 0.99</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;! function(p) &#123;</span><br><span class="line">    p.fn.circleMagic &#x3D; function(t) &#123;</span><br><span class="line">        var o, a, n, r, e &#x3D; !0,</span><br><span class="line">            i &#x3D; [],</span><br><span class="line">            d &#x3D; p.extend(&#123; color: &quot;rgba(255,0,0,.5)&quot;, radius: 10, density: .3, clearOffset: .2 &#125;, t),</span><br><span class="line">            l &#x3D; this[0];</span><br><span class="line"></span><br><span class="line">        function c() &#123; e &#x3D; !(document.body.scrollTop &gt; a) &#125;</span><br><span class="line"></span><br><span class="line">        function s() &#123; o &#x3D; l.clientWidth, a &#x3D; l.clientHeight, l.height &#x3D; a + &quot;px&quot;, n.width &#x3D; o, n.height &#x3D; a &#125;</span><br><span class="line"></span><br><span class="line">        function h() &#123;</span><br><span class="line">            if (e)</span><br><span class="line">                for (var t in r.clearRect(0, 0, o, a), i) i[t].draw();</span><br><span class="line">            requestAnimationFrame(h)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function f() &#123;</span><br><span class="line">            var t &#x3D; this;</span><br><span class="line"></span><br><span class="line">            function e() &#123; t.pos.x &#x3D; Math.random() * o, t.pos.y &#x3D; a + 100 * Math.random(), t.alpha &#x3D; .1 + Math.random() * d.clearOffset, t.scale &#x3D; .1 + .3 * Math.random(), t.speed &#x3D; Math.random(), &quot;random&quot; &#x3D;&#x3D;&#x3D; d.color ? t.color &#x3D; &quot;rgba(&quot; + Math.floor(255 * Math.random()) + &quot;, &quot; + Math.floor(0 * Math.random()) + &quot;, &quot; + Math.floor(0 * Math.random()) + &quot;, &quot; + Math.random().toPrecision(2) + &quot;)&quot; : t.color &#x3D; d.color &#125;</span><br><span class="line">            t.pos &#x3D; &#123;&#125;, e(), this.draw &#x3D; function() &#123; t.alpha &lt;&#x3D; 0 &amp;&amp; e(), t.pos.y -&#x3D; t.speed, t.alpha -&#x3D; 5e-4, r.beginPath(), r.arc(t.pos.x, t.pos.y, t.scale * d.radius, 0, 2 * Math.PI, !1), r.fillStyle &#x3D; t.color, r.fill(), r.closePath() &#125;</span><br><span class="line">        &#125;! function() &#123;</span><br><span class="line">            o &#x3D; l.offsetWidth, a &#x3D; l.offsetHeight,</span><br><span class="line">                function() &#123;</span><br><span class="line">                    var t &#x3D; document.createElement(&quot;canvas&quot;);</span><br><span class="line">                    t.id &#x3D; &quot;canvas&quot;, t.style.top &#x3D; 0, t.style.zIndex &#x3D; 0, t.style.position &#x3D; &quot;absolute&quot;, l.appendChild(t), t.parentElement.style.overflow &#x3D; &quot;hidden&quot;</span><br><span class="line">                &#125;(), (n &#x3D; document.getElementById(&quot;canvas&quot;)).width &#x3D; o, n.height &#x3D; a, r &#x3D; n.getContext(&quot;2d&quot;);</span><br><span class="line">            for (var t &#x3D; 0; t &lt; o * d.density; t++) &#123;</span><br><span class="line">                var e &#x3D; new f;</span><br><span class="line">                i.push(e)</span><br><span class="line">            &#125;</span><br><span class="line">            h()</span><br><span class="line">        &#125;(), window.addEventListener(&quot;scroll&quot;, c, !1), window.addEventListener(&quot;resize&quot;, s, !1)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;(jQuery);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调用气泡方法</span><br><span class="line">qipao();</span><br></pre></td></tr></table></figure><h3 id="页脚博主"><a href="#页脚博主" class="headerlink" title="页脚博主"></a>页脚博主</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">$(document).ready(function(e) &#123;</span><br><span class="line">    $(&#39;.copyright&#39;).html(&#39;©2020 &lt;i style&#x3D;&quot;color:#FF6A6A;animation: announ_animation 0.8s linear infinite;&quot; class&#x3D;&quot;fa fa-heartbeat&quot;&gt;&lt;&#x2F;i&gt; whiteshds&#39;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>打开主题配置文件找到 <code>inject</code><br>在 <code>bottom</code> 下添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yml</span><br><span class="line">bottom:</span><br><span class="line">  - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;blog.lete114.top&#x2F;css&#x2F;Lete.css&quot;&gt;</span><br><span class="line">  - &lt;script data-pjax src&#x3D;&quot;https:&#x2F;&#x2F;blog.lete114.top&#x2F;js&#x2F;Lete.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章加密</title>
      <link href="2020/11/18/014/"/>
      <url>2020/11/18/014/</url>
      
        <content type="html"><![CDATA[<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>一旦你输入了正确的密码，它就会被存储在本地浏览器的localStorage中。按个按钮，密码将会被清空。若博客中又脚本，它将被正确地执行。</li><li>支持按标签加密。</li><li>所有的核心功能都是由原生的API所提供的。在Node.js中，我们使用Crypto。在浏览器中，我们使用Web Crypto API。</li><li>PBKDF2，SHA256被用作复制密钥，AES256-CBC被用作加解密，我们还使用HMAC来验证密文的来源，并确保其纠正。</li><li>广泛地使用Promise来进行异步操作，从而确保线程不被杜塞。</li><li>过时的浏览器将无法正常显示，因此，请升级您的浏览器。</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><ul><li><strong>将“ password”添加到您的文章信息头就像这样</strong>：</li></ul><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2020-03-13 21:12:21</span><br><span class="line">password: muyiio</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="按标签加密"><a href="#按标签加密" class="headerlink" title="按标签加密"></a>按标签加密</h2><ul><li><strong>修改文章信息头如下：</strong></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line">- 加密文章tag</span><br><span class="line">date: <span class="number">2020</span>-<span class="number">03</span>-<span class="number">13</span> <span class="number">21</span>:<span class="number">12</span>:<span class="number">21</span></span><br><span class="line">password: muyiio</span><br><span class="line"><span class="keyword">abstract</span>: 这里有东西被加密了，需要输入密码查看哦。</span><br><span class="line">message: 您好，这里需要密码。</span><br><span class="line">wrong_pass_message: 抱歉，这个密码看着不太对，请再试试。</span><br><span class="line">wrong_hash_message: 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li><strong>对博客根目录_config添加如下字段：</strong></li></ul><figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># 安全</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  abstract: 这里有东西被加密了，需要输入密码查看哦。</span><br><span class="line">  message: 您好, 这里需要密码.</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: tagName, password: 密码A&#125;</span><br><span class="line">  - &#123;name: tagName, password: 密码B&#125;</span><br><span class="line">  template: &lt;div id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;&#123;&#123;hbeWrongPassMessage&#125;&#125;&quot; data-whm=&quot;&#123;&#123;hbeWrongHashMessage&#125;&#125;&quot;&gt;&lt;div class=&quot;hbe-input-container&quot;&gt;&lt;input type=&quot;password&quot; id=&quot;hbePass&quot; placeholder=&quot;&#123;&#123;hbeMessage&#125;&#125;&quot; /&gt;&lt;label&gt;&#123;&#123;hbeMessage&#125;&#125;&lt;/label&gt;&lt;div class=&quot;bottom-line&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;&#123;&#123;hbeHmacDigest&#125;&#125;&quot;&gt;&#123;&#123;hbeEncryptedData&#125;&#125;&lt;/script&gt;&lt;/div&gt;</span><br><span class="line">  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br></pre></td></tr></table></figure><h2 id="对-TOC-文章进行加密"><a href="#对-TOC-文章进行加密" class="headerlink" title="对 TOC 文章进行加密"></a>对 TOC 文章进行加密</h2><p>如果您有一篇文章使用了TOC，您需要修改模板的部分代码。这里以matery主题作为示例：</p><ul><li><strong>在hexo/themes/matery/layout/_partial/article.ejs找到article.ejs。</strong></li><li><strong>然后找到&lt;％post.content％&gt;这段代码，通常在30行左右。</strong></li><li><strong>使用如下的代码来替代它：</strong></li></ul><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;% if(post.toc == true)&#123; %&gt;</span><br><span class="line">  &lt;div id=&quot;toc-div&quot; class=&quot;toc-article&quot; &lt;% if (post.encrypt == true) &#123; %&gt;style=&quot;display:none&quot; &lt;% &#125; %&gt;&gt;</span><br><span class="line">    &lt;strong class=&quot;toc-title&quot;&gt;Index&lt;/strong&gt;</span><br><span class="line">      &lt;% if (post.encrypt == true) &#123; %&gt;</span><br><span class="line">        &lt;%- toc(post.origin, &#123;list_number: true&#125;) %&gt;</span><br><span class="line">      &lt;% &#125; else &#123; %&gt;</span><br><span class="line">        &lt;%- toc(post.content, &#123;list_number: true&#125;) %&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;%- post.content %&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO部署|域名（3）</title>
      <link href="2020/11/18/013/"/>
      <url>2020/11/18/013/</url>
      
        <content type="html"><![CDATA[<h1 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h1><p>既然我们访问国外的网站慢，那么我们就在国内的平台上部署我们的博客。</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>首先我们得有自己的域名，没有真么办？Freenom选择自己喜欢的域名。</p><h1 id="hexo部署到coding服务器"><a href="#hexo部署到coding服务器" class="headerlink" title="hexo部署到coding服务器"></a>hexo部署到coding服务器</h1><ol><li><p>首先在<a href="https://dev.tencent.com/">coding</a>上注册账号，然后新建一个项目，项目必须填:你的用户名.coding.me。</p></li><li><p>导入公钥，可以用之前生成github的公钥</p></li><li><p>修改hexo根目录下的</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_config.yml</span><br></pre></td></tr></table></figure><p>的deploy如下:</p></li></ol><p>   yaml</p>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository:</span><br><span class="line">    github: git@github.com:yourname&#x2F;yourname.github.io.git</span><br><span class="line">    coding: git@e.coding.net:yourname&#x2F;yourname.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ol start="4"><li>把本地文件上传到coding上</li></ol><p>   bash</p>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>   这个时候我们已经看到我们的配置文件已经上传上来了</p><ol start="5"><li>选择构建与部署中的<strong>静态网站</strong>，实名认证过后就可以发布我们的博客了</li></ol><h1 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h1><h2 id="coding域名绑定"><a href="#coding域名绑定" class="headerlink" title="coding域名绑定"></a>coding域名绑定</h2><p>当我们部署好后会给我们一串很长的域名，这个时候就需要把我们购买的域名解析到这个域名上</p><p>在万网或者腾讯云的域名解析设置中添加记录</p><p>添加两条记录类型为<code>CNAME</code>，主机类型分别为<code>www</code>和<code>@</code>，记录值为coding给你的很长一串的域名，注意不要http<br>然后在coding的静态网站中选择设置，添加域名</p><p><strong>注意</strong>：一定要添加两条，一条带<code>www.</code>的，一条不带<code>www.</code>的，如果没加带www.的解析别人用<code>www.yourname.com</code>将无法访问到你的博客，同理，不添加无www.的解析别人无法访问youname.com</p><p>等待几分钟后，就可以用你的自定义域名访问到你的博客了</p><h2 id="github域名绑定"><a href="#github域名绑定" class="headerlink" title="github域名绑定"></a>github域名绑定</h2><p>与coding绑定域名同理，但是在<code>解析线路</code>哪里要设置成境外，这样才能达到分流的效果<br>在hexo博客的<code>/source/</code>文件新增一个无后缀名的<code>CNAME</code>文件，内容为你的域名，然后在<code>git d</code>到github上，这时在你github仓库中的<code>Settubgs</code>中就会发现已经绑定好域名了。<br>这样国内的用户访问的就是你coding上部署博客，而国外的用户访问的就是你github上的博客了</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> 域名 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO主题|升级（2）</title>
      <link href="2020/11/18/012/"/>
      <url>2020/11/18/012/</url>
      
        <content type="html"><![CDATA[<h1 id="主题的安装和升级"><a href="#主题的安装和升级" class="headerlink" title="主题的安装和升级"></a>主题的安装和升级</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在你博客的根目录里</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone -b master https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;Butterfly</span><br></pre></td></tr></table></figure><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>修改站点的配置文件<code>_config.yml</code>把主题改为<code>Butterfly</code></p><p>yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: Butterfly</span><br></pre></td></tr></table></figure><p>如果你没有pug以及stylus的渲染器，请下载安装:<code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code> or <code>yarn add hexo-renderer-pug hexo-renderer-stylus</code></p><h2 id="平滑升级"><a href="#平滑升级" class="headerlink" title="平滑升级"></a>平滑升级</h2><p>为了让主题的平滑升级，<code>Butterfly</code>使用了<a href="https://hexo.io/docs/data-files.html">data files</a>特性。</p><p>推荐把默认主题的配置文件<code>_config.yml</code>复制到Hexo工作目录下的<code>source/_data/butterfly.yml</code>，如果<code>source/_data</code>的目录不存在那就创建一个。</p><p>注意·如果你创建了<code>butterfly.yml</code>，他将会替换主题的默认配置文件<code>_config.yml</code>里的配置项(<strong>不是合并而是替换</strong>)，之后你就只需要通过<code>git pull</code>的方式就可以平滑的升级<code>theme-butterfly</code>了。</p><h1 id="主题页面"><a href="#主题页面" class="headerlink" title="主题页面"></a>主题页面</h1><h2 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h2><p>markdown</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">type: (tags,link,categories这三个页面需要配置)</span><br><span class="line">comments: (是否开启评论，默认true)</span><br><span class="line">description:</span><br><span class="line">top_img: (设置顶部图)</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h2><p>markdown</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img: (除非特定，可以不写)</span><br><span class="line">comments: 是否显示评论(除非设置false,可以不写)</span><br><span class="line">cover: 缩略图</span><br><span class="line">toc: 是否显示toc(除非特定文章设置，可以写)</span><br><span class="line">toc_number: 是否显示toc数字(除非特定文章设置，可以不写)</span><br><span class="line">copyright: 是否显示版权(除非特定文章设置，可以不写)</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h2><ol><li>前往你的Hexo博客根目录</li><li>输入<code>hexo new page tags</code></li><li>你会找到<code>source/tags/index.md</code>这个文件</li><li>修改这个文件：</li></ol><p>markdown</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">tite: 标签</span><br><span class="line">date: 2019-12-1 00:00:00</span><br><span class="line">type: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h2><ol><li>前往你的Hexo博客的根目录</li><li>输入<code>hexo new page categories</code></li><li>你会找到<code>source/categories/index.md</code>这个文件</li><li>修改这个文件:</li></ol><p>markdown</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2019-12-1 00:00:00</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p>为你的博客添加友情链接！</p><h3 id="创建友情链接"><a href="#创建友情链接" class="headerlink" title="创建友情链接"></a>创建友情链接</h3><ol><li>前往你的Hexo博客的根目录</li><li>输入<code>hexo new page link</code></li><li>你会找到<code>source/link/index.md</code>这个文件</li><li>修改这个文件:</li></ol><p>markdown</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2019-12-1 00:00:00</span><br><span class="line">type: link</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="友情链接添加"><a href="#友情链接添加" class="headerlink" title="友情链接添加"></a>友情链接添加</h3><p>在Hexo博客根目录中的<code>source/_data</code>创建一个文件<code>link.yml</code></p><p>yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class:</span><br><span class="line">  class_name: 友情链接</span><br><span class="line">  link_list:</span><br><span class="line">    1:</span><br><span class="line">      name: xxx</span><br><span class="line">      link: https:&#x2F;&#x2F;xxx.com</span><br><span class="line">      avatar: https:&#x2F;&#x2F;xxx&#x2F;xxx&#x2F;avatar.png (也可以是本地文件)</span><br><span class="line">      descr: 添加描述</span><br><span class="line">    2：</span><br><span class="line">      name: xxx</span><br><span class="line">      link: https:&#x2F;&#x2F;xxx.com</span><br><span class="line">      avatar: https:&#x2F;&#x2F;xxx&#x2F;xxx&#x2F;avatar.png (也可以是本地文件)</span><br><span class="line">      descr: 添加描述</span><br><span class="line"></span><br><span class="line">class2:</span><br><span class="line">  class_name: 无效链接</span><br><span class="line">  link_list:</span><br><span class="line">    1:</span><br><span class="line">      name: xxx</span><br><span class="line">      link: https:&#x2F;&#x2F;xxx.com</span><br><span class="line">      avatar: https:&#x2F;&#x2F;xxx&#x2F;xxx&#x2F;avatar.png (也可以是本地文件)</span><br><span class="line">      descr: 添加描述</span><br><span class="line">     2:</span><br><span class="line">       name: xxx</span><br><span class="line">      link: https:&#x2F;&#x2F;xxx.com</span><br><span class="line">      avatar: https:&#x2F;&#x2F;xxx&#x2F;xxx&#x2F;avatar.png (也可以是本地文件)</span><br><span class="line">      descr: 添加描述</span><br></pre></td></tr></table></figure><h3 id="友情链接界面设置"><a href="#友情链接界面设置" class="headerlink" title="友情链接界面设置"></a>友情链接界面设置</h3><p>需要添加友情链接，可以在<code>Butterfly.yml</code>配置<br>可以在友情链接上协商自己的个人资料，方便他人添加</p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Flink:</span><br><span class="line">  headline: 友情链接</span><br><span class="line">  info_headline: 我的Blog资料</span><br><span class="line">  name: Blog 名字: xxx</span><br><span class="line">  address: Blog 地址: https:&#x2F;&#x2F;xxx.com</span><br><span class="line">  avatar: Blog 头像: https:&#x2F;&#x2F;xxx.com</span><br><span class="line">  info: Blog 简介: xxx,xxx</span><br><span class="line">  comment: 如需交换友链，请留言</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h2><ul><li>站点配置文件<code>_config.yml</code>是hexo根目录下的配置文件</li><li><code>butterfly.yml</code>是<code>Butterfly</code>的配置文件，他需要你手动将主题目录下的<code>config.yml</code>文件复制到hexo根目录的<code>source/_data/butterfly.yml</code>中。如果文件或文件夹不存在，请手动创建。</li></ul><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><p>修改站点配置文件<code>_config.yml</code>的<code>language</code>参数</p><p>默认语言是en</p><p>主题支持三种语言</p><ul><li>default(en)</li><li>zh-CN(简体中文)</li><li>zh-TW(繁体中文)</li></ul><h2 id="网站资料"><a href="#网站资料" class="headerlink" title="网站资料"></a>网站资料</h2><p>修改网站各种资料，列入标题、副标题和邮箱等个人资料，请修改博客根目录的<code>_config.yml</code></p><h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h2><p>配置<code>butterfly.yml</code></p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: &#x2F; || fa fa-home</span><br><span class="line">  Archives: &#x2F;archives&#x2F; || fa fa-archive</span><br><span class="line">  Tags: &#x2F;tags&#x2F; || fa fa-tags</span><br><span class="line">  Categories: &#x2F;categories&#x2F; || fa fa-folder-open</span><br><span class="line">  Link: &#x2F;link&#x2F; || fa fa-link</span><br><span class="line">  About: &#x2F;about&#x2F; || fa fa-heart</span><br><span class="line">  list||fa fa-list:</span><br><span class="line">    - Music || &#x2F;music&#x2F; || fa fa-music</span><br><span class="line">    - Movie || &#x2F;movies&#x2F; || fa fa-film</span><br></pre></td></tr></table></figure><p>必须是<code>/xxx/</code>，后面<code>||</code>分开，然后写图标名，菜单名可以自己修改</p><p>格式化：</p><p>显示名称：</p><p>路径||icon</p><p>sub-menu格式</p><p>名称||icon:</p><ul><li><a href="http://www.c-hasel.cn/img/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/page.png">http://www.c-hasel.cn/img/hexo主题配置/page.png</a>)</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p><code>Butterfly</code>支持5种高亮模式:</p><ul><li>default</li><li>darker</li><li>pale night</li><li>light</li><li>ocean</li></ul><p>配置<code>butterfly.yml</code></p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">highlight_theme: light</span><br></pre></td></tr></table></figure><p>default</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-default.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-default.png" alt="img"></a></p><p>darker</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-darker.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-darker.png" alt="img"></a></p><p>pale night</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-pale-night.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-pale-night.png" alt="img"></a></p><p>light</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-light.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-light.png" alt="img"></a></p><p>ocean</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-ocean.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-ocean.png" alt="img"></a></p><h3 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h3><p>主题支持代码复制功能</p><p>配置<code>butterfly.yml</code></p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">highlight_copy: true</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-copy.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-copy.png" alt="img"></a></p><h3 id="代码框展开-关闭"><a href="#代码框展开-关闭" class="headerlink" title="代码框展开/关闭"></a>代码框展开/关闭</h3><p>在默认情况下，代码框自动展开，可设置是否所有代码框都关闭状态，点击<code>&gt;</code>可展开代码</p><p>配置<code>butterfly.yml</code></p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">highlight_shrink: true #代码框不可展开，需点击&#39;&gt;&#39;打开</span><br></pre></td></tr></table></figure><p><code>highlight_shrink: true</code><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-true.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-true.png" alt="img"></a><br><code>highlight_shrink: flase</code><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-false.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-false.png" alt="img"></a></p><h3 id="代码换行"><a href="#代码换行" class="headerlink" title="代码换行"></a>代码换行</h3><p>在默认情况下，<code>hexo-highlight</code>在编译的时候不会实现代码自动换行，如果你不希望在代码块的区域里有横向滚动条的话，那么你可以考虑开启这个功能。</p><p>配置<code>butterfly.yml</code></p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code_word_wrap: true</span><br></pre></td></tr></table></figure><p>然后找到你站点的Hexo配置文件<code>_config.yml</code>将<code>line_number</code>改成<code>false</code>:</p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: flase</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br></pre></td></tr></table></figure><p>设置<code>code_word_wrap</code>之前：</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-before.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-before.png" alt="img"></a></p><p>设置<code>code_word_wrap</code>之后：</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-after.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-after.png" alt="img"></a></p><h2 id="社交图片"><a href="#社交图片" class="headerlink" title="社交图片"></a>社交图片</h2><p>Butterfly支持<a href="https://fontawesome.com/v4.7.0/">font-awesome v4</a>和<a href="https://fontawesome.com/icons?from=io">font-awecome v5</a>.如需开启<a href="https://fontawesome.com/icons?from=io">font-awecome v5</a>，需要在<code>Butterfly.yml</code>上开启</p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CDN_USE:</span><br><span class="line">  css:</span><br><span class="line">    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome@latest&#x2F;css&#x2F;font-awesome.min.css</span><br><span class="line">    - https:&#x2F;&#x2F;use.fontawesome.com&#x2F;releases&#x2F;v5.8.1&#x2F;css&#x2F;all.css</span><br></pre></td></tr></table></figure><p>无论V4还是V5，书写格式都是一样的<code>图标名：url</code></p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  fa fa-github: https:&#x2F;&#x2F;github.com&#x2F;xxx</span><br><span class="line">  fa fa-rsss: &#x2F;atom.xml</span><br></pre></td></tr></table></figure><p>图标可以在这寻找<br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-fontawesome.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-fontawesome.png" alt="img"></a><br><a href="http://www.c-hasel.cn/img/hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/moble.jpg">http://www.c-hasel.cn/img/hexo主题配置/moble.jpg</a>)</p><h2 id="主页文章节选-自动节选和文章页description"><a href="#主页文章节选-自动节选和文章页description" class="headerlink" title="主页文章节选(自动节选和文章页description)"></a>主页文章节选(自动节选和文章页description)</h2><p>因为主题UI的关系，<code>主页文章节选</code>只支持<code>自动节选</code>和<code>文章页description</code>。优先选择<code>自动节选</code></p><p>在<code>butterfly.yml</code>里可以开启<code>auto_excerpt</code>的选项，你的文章将会在自动截取部分显示在主页(默认显示150个字)</p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>如果没有开启<code>自动节选</code>，则会显示文章页front-matter里面设置的<code>description</code><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-description.png"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-description.png" alt="img"></a></p><p>注意:如果开启了自动节选功能，代码块的显示将有可能不正常。</p><h2 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h2><p><code>顶部图</code>有两种配置:具体url和(留空·true和false，三个效果一样)</p><h3 id="page页"><a href="#page页" class="headerlink" title="page页"></a>page页</h3><h4 id="当具体url时"><a href="#当具体url时" class="headerlink" title="当具体url时"></a>当具体url时</h4><p>主页的顶部图可以在<code>Butterfly.yml</code>设置<code>index_img</code></p><p>archives页的顶部图可以在<code>Butterfly.yml</code>设置<code>archive_img</code></p><p>其他<code>page</code>页的顶部图可以在各自的md页面设置<code>front-matter</code>中的<code>top_img</code></p><p>页面如果没有设置各自的<code>top_img</code>则会显示<code>default_top_img</code>图片</p><h4 id="当顶部图留空·true和false"><a href="#当顶部图留空·true和false" class="headerlink" title="当顶部图留空·true和false"></a>当顶部图留空·true和false</h4><p>主页会显示纯颜色的顶部图</p><p>其他page的顶部图没有设置时，也会显示纯颜色的顶部图</p><h3 id="post页"><a href="#post页" class="headerlink" title="post页"></a>post页</h3><p><code>post</code>页的顶部图会优先显示各自<code>front-matter</code>中的<code>top_img</code>，如果没有设置，则会缩略图(即各自<code>front-matter</code>中的<code>cover</code>)，如果没有则会显示<code>default_top_img</code>图片</p><h2 id="文章相关项"><a href="#文章相关项" class="headerlink" title="文章相关项"></a>文章相关项</h2><p>这个选项是用来显示文章相关的相关信息的</p><p>配置<code>butterfly.yml</code></p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  date_type: both #or created or updated 文章日期是创建日或者更新日或者都显示</span><br><span class="line">  categories: true # or false 是否显示分类</span><br><span class="line">  tags: true # or false 是否显示标签</span><br></pre></td></tr></table></figure><p>在文章顶部的资料</p><p><code>date_type:</code>可设置文章日期显示创建日期(<code>created</code>)或者更新日期(<code>updated</code>)或者两种都显示(<code>both</code>)</p><p><code>categories</code>是否显示分类<br><code>tags</code>是否显示标签</p><p>为你的博客文章展示文章版权和许可协议。</p><p>配置<code>butterfly.yml</code></p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  license: CC BY-NC-SA 4.0</span><br><span class="line">  license_url: https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;4.0&#x2F;</span><br></pre></td></tr></table></figure><p>如果有文章(例如：转载文章)不需要显示版权，可以在文章Front-matter单独设置</p><p>yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">copyright: false</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO搭建|配置（1）</title>
      <link href="2020/11/18/011/"/>
      <url>2020/11/18/011/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo博客搭建教程以及基本配置"><a href="#hexo博客搭建教程以及基本配置" class="headerlink" title="hexo博客搭建教程以及基本配置"></a>hexo博客搭建教程以及基本配置</h1><h1 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以生成静态页面托管在github和coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/">hexo官网</a>进行详细的查看。</p><p>教程分为三个部分：</p><ul><li>hexo的初级搭建部署到github page上</li><li>hexo的基本配置、主题的应用、实现多终端工作</li></ul><h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1><h2 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h2><p>1.安装Git<br>2.安装Node.js<br>3.安装Hexo<br>4.GitHub创建个人仓库<br>5.生成SSH添加到GitHub<br>6.将hexo部署到GitHub<br>7.发布文章</p><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p>windows:到git官网上下载，<a href="https://gitforwindows.org/">Download git</a>，下载后会有Git Bash的命令行工具，以后就用这个工具来使用git。<br>linux:对linux来说实在太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><p>安装好后,用<code>git --version</code>来查看一下版本</p><h3 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2.安装nodejs"></a>2.安装nodejs</h3><p>Hexo是基于nodejs编写的，所以需要安装一下nodehs和里面的npm工具<br>windows:<a href="https://nodejs.org/en/download/">nodejs</a>选择LTS版本就行了</p><p>linux:</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>安装完成后，输入如下命令检查是否安装成功</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>顺便说一下，Windows在git安装好后，就可以直接使用git bash来敲命令了，不用自带的cmd，cmd有点难用</p><h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h3><p>git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后<code>cd</code>到这个文件夹下(或者在这个文件夹下直接右键git bash打开)<br>输入命令(Windows和linux相同)</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>依旧用<code>hexo -v</code>检查一下版本，如果没有报错就安装完成了<br>接下来初始化hexo</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure><p>这个myblog可以自定义<br>然后输入如下命令</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd myblog &#x2F;&#x2F;进入myblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹目录下有:</p><ul><li>node_modules: 依赖包</li><li>public: 存放生成的页面</li><li>scaffolds: 生成文章的一些模板</li><li>source: 用来存放你的文章</li><li>themes: 主题</li><li>_config.yml: 博客的配置文件</li></ul><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g &#x2F;&#x2F;生成静态页面</span><br><span class="line">hexo server &#x2F;&#x2F;本地预览</span><br></pre></td></tr></table></figure><p>在浏览器输入localhost:4000就可以看到你生成的博客了。</p><p>ctrl+c关闭服务</p><h3 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4.GitHub创建个人仓库"></a>4.GitHub创建个人仓库</h3><p>首先，你要注册一个github账户<br>注册完成后，在github.com中看到你个New repository,新建仓库</p><p>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，部署到GitHub page的时候才会被识别，也就xxx.github.io，xxx就是你注册GitHub的用户名</p><p>点击create repository</p><h3 id="5-生成SSH添加到Cithub"><a href="#5-生成SSH添加到Cithub" class="headerlink" title="5.生成SSH添加到Cithub"></a>5.生成SSH添加到Cithub</h3><p>回到git bash中</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot; </span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这里的yourname是你GitHub的用户名，youremail是你GitHub的邮箱。<br>检查是否输入正确</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>然后创建SSH</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygent -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>一路回车，这个时候他会告诉你已经生成了.ssh的文件，在.ssh文件夹中会看到这三个文件</p><p><code>id_rsa</code>是你这台电脑的私人秘钥，<code>id_rsa.pub</code>是公钥，在GitHub的setting中点击<code>New SSH key</code>把你的<code>id_rsa.pub</code>里面的信息复制进去<br>查看是否成功</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6.将hexo部署到GitHub"></a>6.将hexo部署到GitHub</h3><p>这一步我们将hexo和GitHub关联起来，把hexo生成的文章部署到GitHub上，打开myblog中的<code>_config.yml</code>,翻到最后，修改一下<br>YourgithubName就是你GitHub的账户</p><p>yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubNmae.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>注意冒号后面要空格<br>这个时候要先安装deploy-git，也就是部署命令，这样你才能用命令部署到GitHub.</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --seve</span><br></pre></td></tr></table></figure><p>然后</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p><code>hexo clean</code>是清除缓存，也可以不加<br><code>hexo generate</code>生成静态文章，可以缩写为<code>hexo g</code><br><code>hexo deploy</code>部署文章，可以缩写为<code>hexo d</code><br>注意deploy是要输入你的username和password<br>没有报错就说明部署成功了，过一会儿就可以在<code>https://yourname.github.io</code>这个网站看到你的博客了<br>这个时候我们发现每次deploy的时候都要输入username和password，我们可以打开站点配置文件<code>_config.yml</code>把我们之前修改的<code>repo: https://github.com/YourgithubName/YourgithubName.github.io.git</code>修改为</p><p>yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">repo: git@github.com:YourgithubName&#x2F;YourgithubName.github.io.git</span><br></pre></td></tr></table></figure><p>这样就不用每次都输入username和password了。</p><h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><p>hexo基本配置、主题更换等</p><h2 id="1-hexo基本配置"><a href="#1-hexo基本配置" class="headerlink" title="1.hexo基本配置"></a>1.hexo基本配置</h2><p>在myblog文件夹目录下的<code>_config.yml</code>，就是整个hexo框架的基本配置文件了，可以在这里修改大部分的配置文件。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方的配置</a>描述。</p><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>title</code></td><td>网站标题</td></tr><tr><td><code>subtitle</code></td><td>网站副标题</td></tr><tr><td><code>description</code></td><td>网站描述</td></tr><tr><td><code>author</code></td><td>你的名字</td></tr><tr><td><code>language</code></td><td>网站使用的语言</td></tr><tr><td><code>timezone</code></td><td>网站时区，默认使用电脑时区</td></tr></tbody></table><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于你站点的简单描述，通常建议包含你网站的关键词。<code>author</code>参与用于主题显示文章的作者。</p><h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>url</code></td><td>网址</td></tr><tr><td><code>root</code></td><td>网站根目录</td></tr><tr><td><code>permalink</code></td><td>文章的<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a>格式</td></tr><tr><td><code>permalink_defaults</code></td><td>永久链接中各部分的默认值</td></tr></tbody></table><p>这里需要把<code>url</code>改成你的网站域名</p><p>permalink，也就是你生成某个文章时的那个链接格式</p><p>比如我新建一个文章叫<code>temp.md</code>，那么这个时候他自动生成的地址就是<br><code>http://yoursite.com/2018/09/05/temp</code></p><p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找。</p><table><thead><tr><th>参数</th><th>结果</th></tr></thead><tbody><tr><td><code>:year/:month/:day/:title/</code></td><td>2013/0714/hello-world</td></tr><tr><td><code>:year-:month-:day:title.html</code></td><td>2013-07-14-hello-world.html</td></tr><tr><td><code>:category/:title</code></td><td>foo/bar/hello-world</td></tr></tbody></table><p>再往下翻，中间这些都默认就好了。</p><p>yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: landscape</span><br><span class="line"></span><br><span class="line">#Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deploymen.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  barnch: [branch]</span><br></pre></td></tr></table></figure><p><code>theme</code>就是选择主题，也就是在<code>theme</code>这个文件夹下，在官网有很多<a href="https://hexo.io/themes/">主题</a>，可以自行下载放在<code>theme</code>这个文件夹下，在修改主配置文件的<code>theme</code>参数就可以了，默认安装的是<code>lanscape</code>这个主题。</p><p>接下来这个<code>deploy</code>就是网站的部署，<code>repo</code>就是仓库(<code>Repository</code>)的简写。<code>branch</code>选择仓库的哪个分支。这个之前已经修改过了，不在赘述，在后面双平台部署的时候会再次用到。</p><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter是文件最上方以<code>---</code>分隔的区域，用于指定个别文件的变量，举例来说：</p><p>yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello Word</span><br><span class="line">deat: 2013&#x2F;7&#x2F;13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>下面是预先定义的参数，你可以在模板中使用这些参数值并加以利用。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td></tr><tr><td><code>title</code></td><td>标题</td></tr><tr><td><code>date</code></td><td>建立时间</td></tr><tr><td><code>update</code></td><td>更新时间</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td></tr><tr><td><code>tags</code></td><td>标签(不适用于分页)</td></tr><tr><td><code>categories</code></td><td>分类(不适用于分页)</td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td></tr></tbody></table><p>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说<code>Foo,Bar</code>不等于<code>Bar,Foo</code>;而标签没有顺序性和层次性。</p><p>yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line"> - Diary</span><br><span class="line"> tags:</span><br><span class="line"> - PS3</span><br><span class="line"> - Games</span><br></pre></td></tr></table></figure><h3 id="layout（布局）"><a href="#layout（布局）" class="headerlink" title="layout（布局）"></a>layout（布局）</h3><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new paper</span><br></pre></td></tr></table></figure><p>他其实是默认使用的是<code>post</code>这个布局，也就是<code>source</code>文件夹下的<code>_post</code>里面</p><p>Hexo有三种默认布局：<code>post</code>、<code>page</code>和<code>draft</code>，它们分别对应不同的路径，而你自定义的其他布局和<code>post</code>相同，都将存储到<code>source/_post</code>文件夹。</p><table><thead><tr><th>布局</th><th>路径</th></tr></thead><tbody><tr><td><code>post</code></td><td><code>source/_post</code></td></tr><tr><td><code>page</code></td><td><code>source</code></td></tr><tr><td><code>draft</code></td><td><code>source/_drafts</code></td></tr></tbody></table><p>而new这个命令其实是:</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new [layout]&lt;title&gt;</span><br></pre></td></tr></table></figure><p>只不过这个layout默认是post罢了。</p><h3 id="page"><a href="#page" class="headerlink" title="page"></a>page</h3><p>如果你想另起一页，那就可以使用</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page board</span><br></pre></td></tr></table></figure><p>系统会自动给你的source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是<code>http://xxx.xxx/board</code></p><h3 id="draft"><a href="#draft" class="headerlink" title="draft"></a>draft</h3><p>draft是草稿的意思，也就是你想写文章，又不希望被看到，那么可以</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></table></figure><p>这样会在source/_draft中新建一个newpage.mad文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><p>如果你的草稿写完了，想要发表到post中</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></table></figure><p>就会自动把newpage.md发送到post中。</p><h2 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2.更换主题"></a>2.更换主题</h2><p>到这里，如果你觉得默认的<code>landscape</code>主题不好看，那么可以在<a href="https://hexo.io/themes/">官网的主题</a>中，选择你喜欢的一个主题修改就可以啦。这里有200多个主题可选，最受欢迎的也就那么几个，不如<a href="https://theme-next.org/">NexT主题</a>，非常的简洁好看，大多数人都选择这个，关于这个的教程也比较多。我用的是<a href="https://jerryc.me/">butterfly</a>这个主题，这个主题比较炫酷，我会在后面详细的讲解butterfly这个主题的一些配置。</p><h2 id="3-git分支进行多终端工作"><a href="#3-git分支进行多终端工作" class="headerlink" title="3.git分支进行多终端工作"></a>3.git分支进行多终端工作</h2><p>问题来了，如果你现在在你的笔记本上写博客，部署在了网站上，那么你在家里用台式主机，或者办公室的台式机，发现你电脑里面没有博客文件，或者要换电脑了，最后不知道怎么移动文件，怎么办？</p><p>在这里我们就可以利用git的分支系统进行多终端工作了，这样每次打开不一样的电脑，只需要进行简单的配置在github上把文件同步下来，就可以无缝操作了。</p><h3 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h3><p>机制是这样的，由于<code>hexo d</code>上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件。可以看到，并没有source等源文件在内</p><p>也就是长传的是本地目录里自动生成的<code>.deploy_git</code>里面。<br>其他文件，包括我们写在source里面的，和配置文件，主题文件，都没有上传到github<br>所以可以利用git的分支管理，将源文件上传至github的另一个分支即可。</p><h3 id="上传分支"><a href="#上传分支" class="headerlink" title="上传分支"></a>上传分支</h3><p>首先，先在github上新建一个分支，然后在这个仓库的setting中，选择默认分支为hexo分支（每次同步的时候就不用制定分之，比较方便）。</p><p>然后在本地的任意目录夏，打开git bsah</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.cm:yourname&#x2F;yourname.github.io.git</span><br></pre></td></tr></table></figure><p>将其克隆到本地，因为默认分支已经设成了hexo，所以clone时只克隆了hexo。</p><p>接下来在克隆到本地的<code>yourname.gitbhu.io</code>中，把除了.git文件夹外的所有文件都删掉</p><p>把之前我们写的博客源文件全部复制过来，除了<code>.deploy_git</code>。复制过来的源文件应该有一个<code>.gitignore</code>，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这类文件不需要git:</p><p>yml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line"> Thumbs.db</span><br><span class="line"> db.json</span><br><span class="line"> *.log</span><br><span class="line"> node_modules&#x2F;</span><br><span class="line"> public&#x2F;</span><br><span class="line"> .deploy*&#x2F;</span><br></pre></td></tr></table></figure><p>注意，如果你之前克隆过theme中的主题文件，那么应该把主题文件中的<code>.git</code>文件夹删掉，因为git不能嵌套上传，最好是显示影藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置就在别的电脑上用不了了。</p><p>而后</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add</span><br><span class="line">git commit -m &quot;add branch&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>这样就上传完了，可以去你的github上看一看hexo分支有没有上传上去，其中<code>mode_modules</code>、<code>public</code>、<code>db.json</code>已经被忽略了，没有关系，不需要上传，因为在别的电脑上需要重新输入命令安装。</p><h3 id="更新电脑操纵"><a href="#更新电脑操纵" class="headerlink" title="更新电脑操纵"></a>更新电脑操纵</h3><p>一样的，跟之前的环境搭建一样</p><ul><li>安装git</li></ul><p>  bash</p>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><ul><li>设置git全局邮箱和用户名</li></ul><p>  bash</p>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourgithubname&quot;</span><br><span class="line">git config --global user.email &quot;yourgithubemail&quot;</span><br></pre></td></tr></table></figure><ul><li>设置 ssh key</li></ul><p>  bash</p>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br><span class="line">#验证是否成功</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><ul><li>安装nodejs</li></ul><p>  bash</p>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><ul><li>安装hexo</li></ul><p>  bash</p>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>  但是不需要初始化了</p><p>直接在任意文件夹下</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@..........</span><br></pre></td></tr></table></figure><p>然后进入克隆到的文件夹：</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd xxx.github.io</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --seve</span><br></pre></td></tr></table></figure><p>生成，部署:</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>然后就可以开始写你的新博客了</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new newpage</span><br></pre></td></tr></table></figure><h3 id="tips"><a href="#tips" class="headerlink" title="tips:"></a>tips:</h3><p>1.不要忘了，每次写完最好都把源文件上传一下</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;xxx&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>2.如果是已经编辑过的电脑上，已经有了clone文件夹了，那么，每次只要和远端同步一下就可以了</p><p>bash</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>到这里我们的博客差不多已经做完了。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一图流背景</title>
      <link href="2020/11/18/010/"/>
      <url>2020/11/18/010/</url>
      
        <content type="html"><![CDATA[<h2 id="步骤1：去除背景"><a href="#步骤1：去除背景" class="headerlink" title="步骤1：去除背景"></a>步骤1：去除背景</h2><p>在根目录”\source\js”文件下复制某个JS，重命名为”background.js”</p><p>打开该文件，删除原有代码，将以下代码粘贴进去。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JS</span><br><span class="line">var full_page &#x3D; document.getElementsByClassName(&quot;full_page&quot;);</span><br><span class="line">if (full_page.length !&#x3D; 0) &#123;</span><br><span class="line">  full_page[0].style.background &#x3D; &quot;transparent&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存后在主题的”config”中的”inject”处引入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  # - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;xxx.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src&#x3D;&quot;xxxx&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">      - &lt;script src&#x3D;&quot;&#x2F;js&#x2F;background.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>在主题的”config.yml”中，搜索”banner”关键词。</p><p>将以下图片链接去掉。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line"># the banner image of home page</span><br><span class="line">index_img:</span><br><span class="line"></span><br><span class="line"># if the banner of page not setting, it will show the top_img</span><br><span class="line">default_top_img:</span><br><span class="line"></span><br><span class="line"># the banner image of archive page</span><br><span class="line">archive_img:</span><br><span class="line"></span><br><span class="line"># the banner image of tag page</span><br><span class="line"># note: tag page, not tags page (子標籤頁面的 top_img)</span><br><span class="line">tag_img:</span><br><span class="line"></span><br><span class="line"># the banner image of category page</span><br><span class="line"># note: category page, not categories page (子分類頁面的 top_img)</span><br><span class="line">category_img:</span><br></pre></td></tr></table></figure><p>搜索关键词”background”,将颜色设置为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line"># Website Background (設置網站背景)</span><br><span class="line"># can set it to color or image (可設置圖片 或者 顔色)</span><br><span class="line"># The formal of color: &#39;#49B202&#39;</span><br><span class="line"># The formal of image: url(http:&#x2F;&#x2F;xxxxxx.com&#x2F;xxx.jpg)</span><br><span class="line"># White color will be shown as default</span><br><span class="line">background: &#39;#00000000&#39;</span><br></pre></td></tr></table></figure><p>PS：最好不要使用背景美化的飘带效果。</p><p>修改主题文件”\source\css_layout”的”head.styl”文件</p><p>将transition和background-color:注释掉。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">#page-header</span><br><span class="line">  position: relative</span><br><span class="line">  width: 100%</span><br><span class="line"></span><br><span class="line">  background-attachment: scroll</span><br><span class="line">  background-position: center center</span><br><span class="line">  background-size: cover</span><br><span class="line">  background-repeat: no-repeat</span><br><span class="line">  &#x2F;&#x2F;transition: all .5s</span><br><span class="line">  &#x2F;&#x2F;background-color: $light-blue</span><br></pre></td></tr></table></figure><p>此时只要你将背景换成图片，就可以一图流了。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line"></span><br><span class="line"># Website Background (設置網站背景)</span><br><span class="line"># can set it to color or image (可設置圖片 或者 顔色)</span><br><span class="line"># The formal of color: &#39;#49B202&#39;</span><br><span class="line"># The formal of image: url(http:&#x2F;&#x2F;xxxxxx.com&#x2F;xxx.jpg)</span><br><span class="line"># White color will be shown as default</span><br><span class="line">background: url(http:&#x2F;&#x2F;zfe.space&#x2F;images&#x2F;tianqizhizi.jpg)</span><br></pre></td></tr></table></figure><p>这时候你会发现如果是大块纯色页面打开时候会白一下，同时页脚的背景很碍事。</p><p>这时候我们需要额外加入一定CSS。</p><p>首先”F12”,用开发者工具取色。</p><p>首先”F12”,用开发者工具取色。</p><p>在根目录”\source\css”文件路径下复制某个css，重命名为”background.css”</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">body&#123;</span><br><span class="line"></span><br><span class="line">background-color:#0090d6;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#footer &#123;</span><br><span class="line"></span><br><span class="line">background: #00000000;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>白色的影响就减小了，当然效果根据图片不同，效果不同。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四种方法布局</title>
      <link href="2020/11/18/009/"/>
      <url>2020/11/18/009/</url>
      
        <content type="html"><![CDATA[<h2 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h2><p>圣杯HTML结构：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&#39;main&#39;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;middle&quot;&gt;中间的&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;left&quot;&gt;左边的&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;right&quot;&gt;右边的&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h2 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h2><p>双飞翼HTML结构为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&#39;main&#39;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;middle&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;inner_middle&quot;&gt;中间的&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;left&quot;&gt;左边的&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;right&quot;&gt;右边的&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h2 id="一、float-margin"><a href="#一、float-margin" class="headerlink" title="一、float+margin"></a>一、float+margin</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">    .main&#123;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">        background: #eee;</span><br><span class="line">    &#125;</span><br><span class="line">    .left&#123;</span><br><span class="line">        background: red;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 280px;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;    </span><br><span class="line">    .right&#123;</span><br><span class="line">        background: blue;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 290px;</span><br><span class="line">        float: right;</span><br><span class="line">    &#125;</span><br><span class="line">    .middle&#123;</span><br><span class="line">        background: green;</span><br><span class="line">        height: 300px;</span><br><span class="line">        margin-left: 200px;</span><br><span class="line">        margin-right: 200px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;main&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;left&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;right&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;middle&quot;&gt;&lt;&#x2F;div&gt;        </span><br><span class="line">    &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>网上还有人用padding替换margin的方法，感兴趣的自己去查。</p><h2 id="二、Position"><a href="#二、Position" class="headerlink" title="二、Position"></a>二、Position</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">    .main&#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    .left&#123;</span><br><span class="line">        background: red;</span><br><span class="line">        height: 300px;</span><br><span class="line">        width: 200px;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">    &#125;    </span><br><span class="line">    .right&#123;</span><br><span class="line">        background: blue;</span><br><span class="line">        height: 300px;</span><br><span class="line">        width: 200px;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    .middle&#123;</span><br><span class="line">        background: green;</span><br><span class="line">        height: 300px;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;main&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;left&quot;&gt;&lt;&#x2F;div&gt;        </span><br><span class="line">        &lt;div class&#x3D;&quot;center&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;middle&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>网上有人提到这个方法在某些情况下会出现bug，具体没有深入了解过。</p><h2 id="三、Flex"><a href="#三、Flex" class="headerlink" title="三、Flex"></a>三、Flex</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">    .main&#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line">    &#125;</span><br><span class="line">    .left&#123;</span><br><span class="line">        background: red;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 300px;</span><br><span class="line">    &#125;    </span><br><span class="line">    .right&#123;</span><br><span class="line">        background: blue;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 300px;</span><br><span class="line">    &#125;</span><br><span class="line">    .middle&#123;</span><br><span class="line">        background: green;</span><br><span class="line">        height: 300px;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;main&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;left&quot;&gt;&lt;&#x2F;div&gt;        </span><br><span class="line">        &lt;div class&#x3D;&quot;middle&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;right&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>低版本的浏览器有兼容的问题，在网上也看到有人用order控制位置</p><h2 id="四、Grid"><a href="#四、Grid" class="headerlink" title="四、Grid"></a>四、Grid</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">    .main&#123;</span><br><span class="line">        display: grid;</span><br><span class="line">        height: 300px;</span><br><span class="line">    &#125;</span><br><span class="line">    .left&#123;</span><br><span class="line">        background: red;</span><br><span class="line">        grid-row:1;</span><br><span class="line">        grid-column:1&#x2F;2;</span><br><span class="line">    &#125;    </span><br><span class="line">    .right&#123;</span><br><span class="line">        background: blue;</span><br><span class="line">        grid-row:1;</span><br><span class="line">        grid-column:4&#x2F;5;</span><br><span class="line">    &#125;</span><br><span class="line">    .middle&#123;</span><br><span class="line">        background: green;</span><br><span class="line">        grid-row:1;</span><br><span class="line">        grid-column:2&#x2F;4;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;main&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;left&quot;&gt;&lt;&#x2F;div&gt;        </span><br><span class="line">        &lt;div class&#x3D;&quot;middle&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;right&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>API图</title>
      <link href="2020/11/18/008/"/>
      <url>2020/11/18/008/</url>
      
        <content type="html"><![CDATA[<h1 id="APi"><a href="#APi" class="headerlink" title="APi"></a>APi</h1><p>必应每日一图:</p><p>速度: ★★★★★</p><p><a href="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</a></p><p>必应当日图片：</p><p><a href="https://hdpublic.getlove.cn/5e248b127cf10517f92cf0cf">https://hdpublic.getlove.cn/5e248b127cf10517f92cf0cf</a>.</p><p>个人制作：</p><p>速度: ★★★★</p><p>1080P：</p><p><a href="https://api.xygeng.cn/bing/1920.php">https://api.xygeng.cn/bing/1920.php</a></p><p>720P：</p><p><a href="https://api.xygeng.cn/bing/1366.php">https://api.xygeng.cn/bing/1366.php</a></p><p>1366*768 分辨率图片地址：</p><p><a href="https://api.dujin.org/bing/1366.php">https://api.dujin.org/bing/1366.php</a></p><p>1920*1080 分辨率：</p><p><a href="https://api.dujin.org/bing/1920.php">https://api.dujin.org/bing/1920.php</a></p><p>二次元：</p><p><a href="https://api.ixiaowai.cn/api/api.php">https://api.ixiaowai.cn/api/api.php</a></p><p><a href="http://www.dmoe.cc/random.php">http://www.dmoe.cc/random.php</a></p><p>风景：</p><p><a href="https://api.ixiaowai.cn/gqapi/gqapi.php">https://api.ixiaowai.cn/gqapi/gqapi.php</a></p><p>随机美女：</p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E">https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E</a></p><p><a href="https://cdn.mom1.cn/?mom=302">https://cdn.mom1.cn/?mom=302</a></p><p>福利：</p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E7%BE%8E%E8%85%BF">https://uploadbeta.com/api/pictures/random/?key=%E7%BE%8E%E8%85%BF</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E6%80%A7%E6%84%9F">https://uploadbeta.com/api/pictures/random/?key=%E6%80%A7%E6%84%9F</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=%E8%BD%A6%E6%A8%A1">https://uploadbeta.com/api/pictures/random/?key=%E8%BD%A6%E6%A8%A1</a></p><h1 id="2-食用方法："><a href="#2-食用方法：" class="headerlink" title="2 食用方法："></a>2 食用方法：</h1><p>打开 butterfly.yml 后搜以下代码</p><p>index_img:(首页图)</p><p>default_top_img:(默认头部图)</p><p>default_cover: （文章默认图）</p><p>archive_img:（时间轴头部图）</p><p>tag_img:（标签头部图）</p><p>category_img:（分类头部图）</p><p>附上我的 butterfly.yml 设置：</p><p>Code</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># the banner image of index</span><br><span class="line">index_img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;a2396837&#x2F;hexophoto&#x2F;hexophoto&#x2F;itl.cat_airport-wallpaper_399806.png</span><br><span class="line"></span><br><span class="line"># if the banner of page not setting,it will show the top_img</span><br><span class="line">default_top_img: https:&#x2F;&#x2F;uploadbeta.com&#x2F;api&#x2F;pictures&#x2F;random&#x2F;?key&#x3D;BingEverydayWallpaperPicture</span><br><span class="line"></span><br><span class="line"># the default cover of the post</span><br><span class="line">default_cover: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jerryc127&#x2F;butterfly_cdn@2.1.0&#x2F;top_img&#x2F;default.png</span><br><span class="line"></span><br><span class="line"># the banner image of archive page</span><br><span class="line">archive_img: https:&#x2F;&#x2F;uploadbeta.com&#x2F;api&#x2F;pictures&#x2F;random&#x2F;?key&#x3D;BingEverydayWallpaperPicture</span><br><span class="line"></span><br><span class="line"># the banner image of tag page</span><br><span class="line">tag_img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jerryc127&#x2F;butterfly_cdn@2.1.0&#x2F;top_img&#x2F;tag.png</span><br><span class="line"></span><br><span class="line"># the banner image of category page</span><br><span class="line">category_img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jerryc127&#x2F;butterfly_cdn@2.1.0&#x2F;top_img&#x2F;category.jpg</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圣杯&amp;双飞翼布局</title>
      <link href="2020/11/18/007/"/>
      <url>2020/11/18/007/</url>
      
        <content type="html"><![CDATA[<h2 id="圣杯布局-amp-双飞翼布局"><a href="#圣杯布局-amp-双飞翼布局" class="headerlink" title="圣杯布局&amp;双飞翼布局"></a>圣杯布局&amp;双飞翼布局</h2><p>我们能够发现，其实圣杯布局和双飞翼布局非常相像。因为圣杯布局是阿里巴巴的玉伯（Sea.js的创始人）根据圣杯布局来改造的。用于两边的子面板固定，中间区域自适应的布局。</p><p>圣杯布局存在一个缺点：就是当我们的 <code>.middle</code> 设置的宽度比两边小的时候，布局就会乱掉。双飞翼在中间的区域添加了一个子节点，给父节点添加margin属性来左右面板留出空间。用margin来撑开空间。</p><p>所以综合起来，双飞翼布局和圣杯布局的区别在于：</p><ul><li>双飞翼布局给主面板添加了一个父标签用来通过margin给子面板腾出空间。</li><li>双飞翼布局不用设置相对布局，以及对应的left和right值。</li></ul><p>当然，基于float布局的圣杯布局和双飞翼布局都有自己的缺陷，当前的趋势是flex和grid布局，代码更少更加灵活。圣杯布局对于我们对CSS的理解和布局的理解还是有帮助的。</p><h2 id="圣杯布局和双飞翼布局的源码"><a href="#圣杯布局和双飞翼布局的源码" class="headerlink" title="圣杯布局和双飞翼布局的源码"></a>圣杯布局和双飞翼布局的源码</h2><h3 id="圣杯布局的源码"><a href="#圣杯布局的源码" class="headerlink" title="圣杯布局的源码"></a>圣杯布局的源码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;圣杯布局&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body,header,div,h4,footer&#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        header&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        .container&#123;</span><br><span class="line">            height: 200px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            padding: 0 200px;    &#x2F;*利用和下面的.left&#123;position: relative;left:-200px;&#125;</span><br><span class="line">            以及.right&#123;position: relative;right:-200px;&#125;来避免中间的内容区被缩放时的左右div给覆盖*&#x2F;</span><br><span class="line">        &#125;</span><br><span class="line">        .middle&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: #ECECEC;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .left&#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            position: relative;</span><br><span class="line">            left: -200px;</span><br><span class="line">            margin-left: -100%;    &#x2F;*紧贴左边*&#x2F;</span><br><span class="line">            background-color: blue;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .right&#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            position: relative;</span><br><span class="line">            right: -200px;</span><br><span class="line">            margin-left: -200px;    &#x2F;*紧贴右边*&#x2F;</span><br><span class="line">            background-color: yellow;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        footer&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: black;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;header&gt;&lt;h4&gt;内容区&lt;&#x2F;h4&gt;&lt;&#x2F;header&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;middle&quot;&gt;&lt;h4&gt;中间弹性区&lt;&#x2F;h4&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;left&quot;&gt;&lt;h4&gt;左边栏&lt;&#x2F;h4&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;right&quot;&gt;&lt;h4&gt;右边栏&lt;&#x2F;h4&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;footer&gt;&lt;h4&gt;footer内容区&lt;&#x2F;h4&gt;&lt;&#x2F;footer&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="双飞翼布局的源码"><a href="#双飞翼布局的源码" class="headerlink" title="双飞翼布局的源码"></a>双飞翼布局的源码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;双飞翼布局&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body,header,div,h4,footer&#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        header&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        .container&#123;</span><br><span class="line">            height: 200px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        .middle&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: #ECECEC;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .in&#123;</span><br><span class="line">            padding: 0 200px 0 200px;</span><br><span class="line">        &#125;</span><br><span class="line">        .left&#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            margin-left: -100%;    &#x2F;*紧贴左边*&#x2F;</span><br><span class="line">            background-color: blue;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .right&#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            margin-left: -200px;    &#x2F;*紧贴右边*&#x2F;</span><br><span class="line">            background-color: yellow;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        footer&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: black;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;header&gt;&lt;h4&gt;内容区&lt;&#x2F;h4&gt;&lt;&#x2F;header&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;middle&quot;&gt;&lt;div class&#x3D;&quot;in&quot;&gt;&lt;h4&gt;中间弹性区&lt;&#x2F;h4&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;left&quot;&gt;&lt;h4&gt;左边栏&lt;&#x2F;h4&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;right&quot;&gt;&lt;h4&gt;右边栏&lt;&#x2F;h4&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;footer&gt;&lt;h4&gt;footer内容区&lt;&#x2F;h4&gt;&lt;&#x2F;footer&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三栏布局</title>
      <link href="2020/11/18/006/"/>
      <url>2020/11/18/006/</url>
      
        <content type="html"><![CDATA[<h2 id="1-圣杯布局-、-双飞翼布局"><a href="#1-圣杯布局-、-双飞翼布局" class="headerlink" title="1.[圣杯布局]、[双飞翼布局]"></a>1.[圣杯布局]、[双飞翼布局]</h2><h2 id="2-绝对定位法"><a href="#2-绝对定位法" class="headerlink" title="2.绝对定位法"></a>2.绝对定位法</h2><p>左右div设置为绝对定位；左div设置为 <code>left: 0px;</code>右div设置为 <code>right: 0px;</code></p><p>如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        html,body&#123;</span><br><span class="line">            margin: 0px;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">        h3&#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            margin: 20px 0 0;</span><br><span class="line">        &#125;</span><br><span class="line">        #left,#right&#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: #ffe6b8;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 120px;</span><br><span class="line">        &#125;</span><br><span class="line">        #left&#123;</span><br><span class="line">            left: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">        #right&#123;</span><br><span class="line">            right: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">        #center&#123;</span><br><span class="line">            margin: 2px 210px;</span><br><span class="line">            background-color: #eee;</span><br><span class="line">            height: 200px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;实现三列宽度自适应布局&lt;&#x2F;h3&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;left&quot;&gt;我是左边&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;right&quot;&gt;我是右边&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;center&quot;&gt;我是中间&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>该布局的不足：因为是绝对定位，如果页面上有其他的内容，top的值要小心处理，最好给CSS样式进行一个初始化。</p><h2 id="3-使用自身浮动法"><a href="#3-使用自身浮动法" class="headerlink" title="3.使用自身浮动法"></a>3.使用自身浮动法</h2><p>自身浮动法的原理就是使用对左右使用分别使用float:left和float:right，float使左右两个元素脱离文档流，中间元素正常在正常文档流中，使用margin指定左右外边距对其进行一个定位。</p><p>如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Javascript</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        html,body&#123;</span><br><span class="line">            margin: 0px;</span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">        h3&#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            margin: 20px 0 0;</span><br><span class="line">        &#125;</span><br><span class="line">        #left,#right&#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: #ffe6b8;</span><br><span class="line">        &#125;</span><br><span class="line">        #left&#123;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        #right&#123;</span><br><span class="line">            float: right;</span><br><span class="line">        &#125;</span><br><span class="line">        #center&#123;</span><br><span class="line">            margin: 2px 210px;</span><br><span class="line">            background-color: #eee;</span><br><span class="line">            height: 200px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;实现三列宽度自适应布局&lt;&#x2F;h3&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;left&quot;&gt;我是左边&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;right&quot;&gt;我是右边&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;center&quot;&gt;我是中间&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>该布局法的好处是受外界影响小，但是不足是 三个元素的顺序，center一定要放在最后，这是和绝对定位不一样的地方，center占据文档流位置，所以一定要放在最后，左右两个元素位置没有关系。当浏览器窗口很小的时候，右边元素会被击倒下一行。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鼠标|雪花|樱花|右键|标题|气泡|底栏</title>
      <link href="2020/11/18/005/"/>
      <url>2020/11/18/005/</url>
      
        <content type="html"><![CDATA[<h3 id="输入如下命令获取-live2d-："><a href="#输入如下命令获取-live2d-：" class="headerlink" title="输入如下命令获取 live2d ："></a>输入如下命令获取 live2d ：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install --save hexo-helper-live2d  </span><br></pre></td></tr></table></figure><p>输入以下命令，下载相应的模型，将 <code>packagename</code> 更换成模型名称即可</p><h3 id="打开站点目录下的-config-yml-文件，添加如下代码："><a href="#打开站点目录下的-config-yml-文件，添加如下代码：" class="headerlink" title="打开站点目录下的 _config.yml 文件，添加如下代码："></a>打开站点目录下的 _config.yml 文件，添加如下代码：</h3><p>Yaml</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">enable: true</span><br><span class="line">scriptFrom: local</span><br><span class="line">model: </span><br><span class="line">use: live2d-widget-model-haruto #模型选择</span><br><span class="line">display: </span><br><span class="line">position: right  #模型位置</span><br><span class="line">width: 150       #模型宽度</span><br><span class="line">height: 300      #模型高度</span><br><span class="line">mobile: </span><br><span class="line">show: false      #是否在手机端显示</span><br></pre></td></tr></table></figure><p>设置好过后我们就拥有了一个卡通人物</p><h2 id="自定义鼠标指针样式"><a href="#自定义鼠标指针样式" class="headerlink" title="自定义鼠标指针样式"></a>自定义鼠标指针样式</h2><h3 id="选好指针样式"><a href="#选好指针样式" class="headerlink" title="选好指针样式"></a>选好指针样式</h3><h3 id="应用到博客"><a href="#应用到博客" class="headerlink" title="应用到博客"></a>应用到博客</h3><p>参考过本博客主题结构，定位到<code>\hexo\themes\butterfly\source\css\index.styl</code><br>将以下代码复制到最开头</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**普通指针样式**&#x2F;</span><br><span class="line">body </span><br><span class="line">  cursor url(&#39;xxxx.cur&#39;),default</span><br><span class="line">&#x2F;**链接指针样式**&#x2F;</span><br><span class="line">a </span><br><span class="line">  &amp;:hover </span><br><span class="line">    cursor url(&#39;xxxx.cur&#39;),pointer</span><br></pre></td></tr></table></figure><p>这样就好了~</p><h2 id="浏览器网页标题修改♂（欺骗）"><a href="#浏览器网页标题修改♂（欺骗）" class="headerlink" title="浏览器网页标题修改♂（欺骗）"></a>浏览器网页标题修改♂（欺骗）</h2><p>在<code>hexo\themes\butterfly\source\js</code>中添加<code>crash_cheat.js</code><br>填入内容（别忘了修改成自己喜欢的）：</p><p>Javascript</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"> var OriginTitle &#x3D; document.title;</span><br><span class="line"> var titleTime;</span><br><span class="line"> document.addEventListener(&#39;visibilitychange&#39;, function () &#123;</span><br><span class="line">     if (document.hidden) &#123;</span><br><span class="line">         $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;&#x2F;joke.ico&quot;);</span><br><span class="line">         document.title &#x3D; &#39;！！这里这里 ◕ ں ◕ &#39;;</span><br><span class="line">         clearTimeout(titleTime);</span><br><span class="line">     &#125;</span><br><span class="line">     else &#123;</span><br><span class="line">         $(&#39;[rel&#x3D;&quot;icon&quot;]&#39;).attr(&#39;href&#39;, &quot;&#x2F;favicon.ico&quot;);</span><br><span class="line">         document.title &#x3D; &#39;(ฅ&gt;ω&lt;*ฅ) 喵喵爱你哟~&#39; + OriginTitle;</span><br><span class="line">         titleTime &#x3D; setTimeout(function () &#123;</span><br><span class="line">             document.title &#x3D; OriginTitle;</span><br><span class="line">         &#125;, 2000);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>然后在<code>hexo\themes\butterfly\layout\includes\layout.pug</code>文件中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">script(type&#x3D;&#39;text&#x2F;javascript&#39;, src&#x3D;&#39;&#x2F;js&#x2F;crash_cheat.js&#39;)</span><br></pre></td></tr></table></figure><h2 id="雪花背景特效"><a href="#雪花背景特效" class="headerlink" title="雪花背景特效"></a>雪花背景特效</h2><p>雪花特效有两种，使用方法雷同上一个浏览器标题欺骗，在<code>hexo\themes\butterfly\source\js</code>中建立snow.js 文件，粘贴以下代码：</p><p>Javascript</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*样式一*&#x2F;</span><br><span class="line">(function($)&#123;</span><br><span class="line">$.fn.snow &#x3D; function(options)&#123;</span><br><span class="line">var $flake &#x3D; $(&#39;&lt;div id&#x3D;&quot;snowbox&quot; &#x2F;&gt;&#39;).css(&#123;&#39;position&#39;: &#39;absolute&#39;,&#39;z-index&#39;:&#39;9999&#39;, &#39;top&#39;: &#39;-50px&#39;&#125;).html(&#39;&amp;#10052;&#39;),</span><br><span class="line">documentHeight &#x3D; $(document).height(),</span><br><span class="line">documentWidth&#x3D; $(document).width(),</span><br><span class="line">defaults &#x3D; &#123;</span><br><span class="line">minSize: 10,</span><br><span class="line">maxSize: 20,</span><br><span class="line">newOn: 1000,</span><br><span class="line">flakeColor: &quot;#AFDAEF&quot; &#x2F;* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF *&#x2F;</span><br><span class="line">&#125;,</span><br><span class="line">options&#x3D; $.extend(&#123;&#125;, defaults, options);</span><br><span class="line">var interval&#x3D; setInterval( function()&#123;</span><br><span class="line">var startPositionLeft &#x3D; Math.random() * documentWidth - 100,</span><br><span class="line">startOpacity &#x3D; 0.5 + Math.random(),</span><br><span class="line">sizeFlake &#x3D; options.minSize + Math.random() * options.maxSize,</span><br><span class="line">endPositionTop &#x3D; documentHeight - 200,</span><br><span class="line">endPositionLeft &#x3D; startPositionLeft - 500 + Math.random() * 500,</span><br><span class="line">durationFall &#x3D; documentHeight * 10 + Math.random() * 5000;</span><br><span class="line">$flake.clone().appendTo(&#39;body&#39;).css(&#123;</span><br><span class="line">left: startPositionLeft,</span><br><span class="line">opacity: startOpacity,</span><br><span class="line">&#39;font-size&#39;: sizeFlake,</span><br><span class="line">color: options.flakeColor</span><br><span class="line">&#125;).animate(&#123;</span><br><span class="line">top: endPositionTop,</span><br><span class="line">left: endPositionLeft,</span><br><span class="line">opacity: 0.2</span><br><span class="line">&#125;,durationFall,&#39;linear&#39;,function()&#123;</span><br><span class="line">$(this).remove()</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, options.newOn);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $.fn.snow(&#123; </span><br><span class="line">    minSize: 5, &#x2F;* 定义雪花最小尺寸 *&#x2F;</span><br><span class="line">    maxSize: 50,&#x2F;* 定义雪花最大尺寸 *&#x2F;</span><br><span class="line">    newOn: 300  &#x2F;* 定义密集程度，数字越小越密集 *&#x2F;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>或者</p><p>Javascript</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*样式二*&#x2F;</span><br><span class="line">&#x2F;* 控制下雪 *&#x2F;</span><br><span class="line">function snowFall(snow) &#123;</span><br><span class="line">    &#x2F;* 可配置属性 *&#x2F;</span><br><span class="line">    snow &#x3D; snow || &#123;&#125;;</span><br><span class="line">    this.maxFlake &#x3D; snow.maxFlake || 200;   &#x2F;* 最多片数 *&#x2F;</span><br><span class="line">    this.flakeSize &#x3D; snow.flakeSize || 10;  &#x2F;* 雪花形状 *&#x2F;</span><br><span class="line">    this.fallSpeed &#x3D; snow.fallSpeed || 1;   &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 兼容写法 *&#x2F;</span><br><span class="line">requestAnimationFrame &#x3D; window.requestAnimationFrame ||</span><br><span class="line">    window.mozRequestAnimationFrame ||</span><br><span class="line">    window.webkitRequestAnimationFrame ||</span><br><span class="line">    window.msRequestAnimationFrame ||</span><br><span class="line">    window.oRequestAnimationFrame ||</span><br><span class="line">    function(callback) &#123; setTimeout(callback, 1000 &#x2F; 60); &#125;;</span><br><span class="line"></span><br><span class="line">cancelAnimationFrame &#x3D; window.cancelAnimationFrame ||</span><br><span class="line">    window.mozCancelAnimationFrame ||</span><br><span class="line">    window.webkitCancelAnimationFrame ||</span><br><span class="line">    window.msCancelAnimationFrame ||</span><br><span class="line">window.oCancelAnimationFrame;</span><br><span class="line">&#x2F;* 开始下雪 *&#x2F;</span><br><span class="line">snowFall.prototype.start &#x3D; function()&#123;</span><br><span class="line">    &#x2F;* 创建画布 *&#x2F;</span><br><span class="line">    snowCanvas.apply(this);</span><br><span class="line">    &#x2F;* 创建雪花形状 *&#x2F;</span><br><span class="line">    createFlakes.apply(this);</span><br><span class="line">    &#x2F;* 画雪 *&#x2F;</span><br><span class="line">    drawSnow.apply(this)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 创建画布 *&#x2F;</span><br><span class="line">function snowCanvas() &#123;</span><br><span class="line">    &#x2F;* 添加Dom结点 *&#x2F;</span><br><span class="line">    var snowcanvas &#x3D; document.createElement(&quot;canvas&quot;);</span><br><span class="line">    snowcanvas.id &#x3D; &quot;snowfall&quot;;</span><br><span class="line">    snowcanvas.width &#x3D; window.innerWidth;</span><br><span class="line">    snowcanvas.height &#x3D; document.body.clientHeight;</span><br><span class="line">    snowcanvas.setAttribute(&quot;style&quot;, &quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;);</span><br><span class="line">    document.getElementsByTagName(&quot;body&quot;)[0].appendChild(snowcanvas);</span><br><span class="line">    this.canvas &#x3D; snowcanvas;</span><br><span class="line">    this.ctx &#x3D; snowcanvas.getContext(&quot;2d&quot;);</span><br><span class="line">    &#x2F;* 窗口大小改变的处理 *&#x2F;</span><br><span class="line">    window.onresize &#x3D; function() &#123;</span><br><span class="line">        snowcanvas.width &#x3D; window.innerWidth;</span><br><span class="line">        &#x2F;* snowcanvas.height &#x3D; window.innerHeight *&#x2F;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 雪运动对象 *&#x2F;</span><br><span class="line">function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) &#123;</span><br><span class="line">    this.x &#x3D; Math.floor(Math.random() * canvasWidth);   &#x2F;* x坐标 *&#x2F;</span><br><span class="line">    this.y &#x3D; Math.floor(Math.random() * canvasHeight);  &#x2F;* y坐标 *&#x2F;</span><br><span class="line">    this.size &#x3D; Math.random() * flakeSize + 2;          &#x2F;* 形状 *&#x2F;</span><br><span class="line">    this.maxSize &#x3D; flakeSize;                           &#x2F;* 最大形状 *&#x2F;</span><br><span class="line">    this.speed &#x3D; Math.random() * 1 + fallSpeed;         &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">    this.fallSpeed &#x3D; fallSpeed;                         &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">    this.velY &#x3D; this.speed;                             &#x2F;* Y方向速度 *&#x2F;</span><br><span class="line">    this.velX &#x3D; 0;                                      &#x2F;* X方向速度 *&#x2F;</span><br><span class="line">    this.stepSize &#x3D; Math.random() &#x2F; 30;                 &#x2F;* 步长 *&#x2F;</span><br><span class="line">    this.step &#x3D; 0                                       &#x2F;* 步数 *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">flakeMove.prototype.update &#x3D; function() &#123;</span><br><span class="line">    var x &#x3D; this.x,</span><br><span class="line">        y &#x3D; this.y;</span><br><span class="line">    &#x2F;* 左右摆动(余弦) *&#x2F;</span><br><span class="line">    this.velX *&#x3D; 0.98;</span><br><span class="line">    if (this.velY &lt;&#x3D; this.speed) &#123;</span><br><span class="line">        this.velY &#x3D; this.speed</span><br><span class="line">    &#125;</span><br><span class="line">    this.velX +&#x3D; Math.cos(this.step +&#x3D; .05) * this.stepSize;</span><br><span class="line"></span><br><span class="line">    this.y +&#x3D; this.velY;</span><br><span class="line">    this.x +&#x3D; this.velX;</span><br><span class="line">    &#x2F;* 飞出边界的处理 *&#x2F;</span><br><span class="line">    if (this.x &gt;&#x3D; canvas.width || this.x &lt;&#x3D; 0 || this.y &gt;&#x3D; canvas.height || this.y &lt;&#x3D; 0) &#123;</span><br><span class="line">        this.reset(canvas.width, canvas.height)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#x2F;* 飞出边界-放置最顶端继续坠落 *&#x2F;</span><br><span class="line">flakeMove.prototype.reset &#x3D; function(width, height) &#123;</span><br><span class="line">    this.x &#x3D; Math.floor(Math.random() * width);</span><br><span class="line">    this.y &#x3D; 0;</span><br><span class="line">    this.size &#x3D; Math.random() * this.maxSize + 2;</span><br><span class="line">    this.speed &#x3D; Math.random() * 1 + this.fallSpeed;</span><br><span class="line">    this.velY &#x3D; this.speed;</span><br><span class="line">    this.velX &#x3D; 0;</span><br><span class="line">&#125;;</span><br><span class="line">&#x2F;&#x2F; 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span><br><span class="line">flakeMove.prototype.render &#x3D; function(ctx) &#123;</span><br><span class="line">    var snowFlake &#x3D; ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);</span><br><span class="line">    snowFlake.addColorStop(0, &quot;rgba(255, 255, 255, 0.9)&quot;);  &#x2F;* 此处是雪花颜色，默认是白色 *&#x2F;</span><br><span class="line">    snowFlake.addColorStop(.5, &quot;rgba(255, 255, 255, 0.5)&quot;); &#x2F;* 若要改为其他颜色，请自行查 *&#x2F;</span><br><span class="line">    snowFlake.addColorStop(1, &quot;rgba(255, 255, 255, 0)&quot;);    &#x2F;* 找16进制的RGB 颜色代码。 *&#x2F;</span><br><span class="line">    ctx.save();</span><br><span class="line">    ctx.fillStyle &#x3D; snowFlake;</span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);</span><br><span class="line">    ctx.fill();</span><br><span class="line">    ctx.restore();</span><br><span class="line">&#125;;</span><br><span class="line">&#x2F;* 创建雪花-定义形状 *&#x2F;</span><br><span class="line">function createFlakes() &#123;</span><br><span class="line">    var maxFlake &#x3D; this.maxFlake,</span><br><span class="line">        flakes &#x3D; this.flakes &#x3D; [],</span><br><span class="line">        canvas &#x3D; this.canvas;</span><br><span class="line">    for (var i &#x3D; 0; i &lt; maxFlake; i++) &#123;</span><br><span class="line">        flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 画雪 *&#x2F;</span><br><span class="line">function drawSnow() &#123;</span><br><span class="line">    var maxFlake &#x3D; this.maxFlake,</span><br><span class="line">        flakes &#x3D; this.flakes;</span><br><span class="line">    ctx &#x3D; this.ctx, canvas &#x3D; this.canvas, that &#x3D; this;</span><br><span class="line">    &#x2F;* 清空雪花 *&#x2F;</span><br><span class="line">    ctx.clearRect(0, 0, canvas.width, canvas.height);</span><br><span class="line">    for (var e &#x3D; 0; e &lt; maxFlake; e++) &#123;</span><br><span class="line">        flakes[e].update();</span><br><span class="line">        flakes[e].render(ctx);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;*  一帧一帧的画 *&#x2F;</span><br><span class="line">    this.loop &#x3D; requestAnimationFrame(function() &#123;</span><br><span class="line">        drawSnow.apply(that);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 调用及控制方法 *&#x2F;</span><br><span class="line">var snow &#x3D; new snowFall(&#123;maxFlake:60&#125;);</span><br><span class="line">snow.start();</span><br></pre></td></tr></table></figure><p>然后在<code>hexo\themes\butterfly\layout\includes\layout.pug</code>文件里引用即可：</p><p>Javascript</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 雪花特效 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;\js\snow.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>如果没效果，请确认网页是否已载入JQurey，如果没有请在下雪代码之前引入JQ即可：</p><p>Javascript</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;http:&#x2F;&#x2F;libs.baidu.com&#x2F;jquery&#x2F;1.8.3&#x2F;jquery.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;http:&#x2F;&#x2F;libs.baidu.com&#x2F;jquery&#x2F;1.8.3&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="网站底部设置已运行时间"><a href="#网站底部设置已运行时间" class="headerlink" title="网站底部设置已运行时间"></a>网站底部设置已运行时间</h2><p>在主题设置中找到个性化页脚内容设置框，或者在footer.php代码中添加如下代码即可：</p><p>Html</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">网站已运行:&lt;span id&#x3D;&quot;run_time&quot; style&#x3D;&quot;color: black;&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">   function runTime() &#123;</span><br><span class="line">   var d &#x3D; new Date(), str &#x3D; &#39;&#39;; </span><br><span class="line">   BirthDay &#x3D; new Date(&quot;2018-12-31&quot;);</span><br><span class="line">   today &#x3D; new Date();</span><br><span class="line">   timeold &#x3D; (today.getTime() - BirthDay.getTime());</span><br><span class="line">   sectimeold &#x3D; timeold &#x2F; 1000</span><br><span class="line">   secondsold &#x3D; Math.floor(sectimeold);</span><br><span class="line">   msPerDay &#x3D; 24 * 60 * 60 * 1000</span><br><span class="line">   msPerYear &#x3D; 365 * 24 * 60 * 60 * 1000</span><br><span class="line">   e_daysold &#x3D; timeold &#x2F; msPerDay</span><br><span class="line">   e_yearsold &#x3D; timeold &#x2F; msPerYear</span><br><span class="line">   daysold &#x3D; Math.floor(e_daysold);</span><br><span class="line">   yearsold &#x3D; Math.floor(e_yearsold);</span><br><span class="line">   &#x2F;&#x2F;str &#x3D; yearsold + &quot;年&quot;;</span><br><span class="line">   str +&#x3D; daysold + &quot;天&quot;;</span><br><span class="line">   str +&#x3D; d.getHours() + &#39;时&#39;;</span><br><span class="line">   str +&#x3D; d.getMinutes() + &#39;分&#39;;</span><br><span class="line">   str +&#x3D; d.getSeconds() + &#39;秒&#39;;</span><br><span class="line">   return str;</span><br><span class="line">   &#125;</span><br><span class="line">   setInterval(function () &#123;</span><br><span class="line">     $(&#39;#run_time&#39;).html(runTime())</span><br><span class="line">   &#125;, 1000);</span><br><span class="line">   &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>本小站使用的是这个：</p><p>Html</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 网站运行时间的设置 --&gt;</span><br><span class="line">&lt;span id&#x3D;&quot;timeDate&quot;&gt;载入天数...&lt;&#x2F;span&gt;</span><br><span class="line">&lt;span id&#x3D;&quot;times&quot;&gt;载入时分秒...&lt;&#x2F;span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now &#x3D; new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        var grt&#x3D; new Date(&quot;03&#x2F;09&#x2F;2019 13:14:21&quot;);</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 &#x2F; 24; dnum &#x3D; Math.floor(days);</span><br><span class="line">        hours &#x3D; (now - grt ) &#x2F; 1000 &#x2F; 60 &#x2F; 60 - (24 * dnum); hnum &#x3D; Math.floor(hours);</span><br><span class="line">        if(String(hnum).length &#x3D;&#x3D;1 )&#123;hnum &#x3D; &quot;0&quot; + hnum;&#125; minutes &#x3D; (now - grt ) &#x2F; 1000 &#x2F;60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum &#x3D; Math.floor(minutes); if(String(mnum).length &#x3D;&#x3D;1 )&#123;mnum &#x3D; &quot;0&quot; + mnum;&#125;</span><br><span class="line">        seconds &#x3D; (now - grt ) &#x2F; 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum &#x3D; Math.round(seconds); if(String(snum).length &#x3D;&#x3D;1 )&#123;snum &#x3D; &quot;0&quot; + snum;&#125;</span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML &#x3D; &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;;</span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML &#x3D; hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="右键菜单美化"><a href="#右键菜单美化" class="headerlink" title="右键菜单美化"></a>右键菜单美化</h2><p>在主题设置中加入如下js：</p><p>Javascript</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var options &#x3D; &#123;items:[</span><br><span class="line">  &#123;header: &#39;欢迎做客 喵窝･札记&#39;&#125;,</span><br><span class="line">  &#123;divider: true&#125;,</span><br><span class="line">  &#123;text: &#39;↜&amp;nbsp;&amp;nbsp;回到首页&#39;, href: &#39;https:&#x2F;&#x2F;dorcandy.cn&#39;&#125;,</span><br><span class="line">  &#123;text: &#39;↷&amp;nbsp;&amp;nbsp;刷新页面&#39;, onclick: function() &#123;alert(&quot;功能添加中，先请手动是用F5或者ctrl+F5刷新页面&quot;)&#125;&#125;,</span><br><span class="line">  &#123;divider: true&#125;,</span><br><span class="line">  &#123;text: &#39;☍&amp;nbsp;&amp;nbsp;友情链接&#39;, href: &#39;&#x2F;link&#x2F;&#39;&#125;,</span><br><span class="line">  &#123;text: &#39;✓&amp;nbsp;&amp;nbsp;留言板&#39;, href: &#39;&#x2F;guestbook&#x2F;&#39;&#125;,</span><br><span class="line">  &#123;text: &#39;ฅ&amp;nbsp;&amp;nbsp;关于火喵&#39;, href: &#39;&#x2F;about&#x2F;&#39;&#125;,</span><br><span class="line">  &#123;divider: true&#125;,</span><br><span class="line">  &#123;text: &#39;☇&amp;nbsp;&amp;nbsp;百度搜索&#39;, &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#125;,</span><br><span class="line">  &#123;text: &#39;☄&amp;nbsp;&amp;nbsp;更多...&#39;, onclick: function() &#123;alert(&quot;噗qaq，更完善的右键菜单 火喵 正在努力攻克中...&quot;)&#125;&#125;</span><br><span class="line">]&#125;</span><br><span class="line">$(&#39;body&#39;).contextify(options);</span><br></pre></td></tr></table></figure><p>引入js</p><p>Html</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery&#x2F;1.8.3&#x2F;jquery.min.js&quot; type&#x3D;&quot;text&#x2F;javascript&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;jquery-contextify&#x2F;1.0.8&#x2F;jquery.contextify.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>还要引入<code>bootstrap.min.css</code>，但是需要做适量修改。</p><h2 id="主页头图上升气泡效果"><a href="#主页头图上升气泡效果" class="headerlink" title="主页头图上升气泡效果"></a>主页头图上升气泡效果</h2><p>在<code>butterfly</code>中的<code>cdn-use</code>—&gt;<code>js</code>里添加一行即可：</p><p>Code</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sunchaser-lilu&#x2F;sunchaser-cdn@master&#x2F;js&#x2F;circleMagic.min.js</span><br></pre></td></tr></table></figure><h2 id="关于背景样式的修改"><a href="#关于背景样式的修改" class="headerlink" title="关于背景样式的修改"></a>关于背景样式的修改</h2><h3 id="自动更换随机背景"><a href="#自动更换随机背景" class="headerlink" title="自动更换随机背景"></a>自动更换随机背景</h3><p><code>butterfly.yml</code>里的<code>background:</code>可以直接填写api接口，这里推荐使用<a href="https://diary.dorcandy.cn/go.html?u=aHR0cHM6Ly93d3cueGpoLm1lLzMwOTAuaHRtbA==">岁月小筑</a>大佬提供的API，实现背景自动更换，效果如下：<br><img src="https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302" alt="img"></p><blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;img.xjh.me&#x2F;random_img.php?type&#x3D;bg&amp;ctype&#x3D;nature&amp;return&#x3D;302</span><br></pre></td></tr></table></figure></blockquote><h3 id="实现背景重复平铺"><a href="#实现背景重复平铺" class="headerlink" title="实现背景重复平铺"></a>实现背景重复平铺</h3><ol><li><p><code>butterfly.yml</code>里的<code>background:</code>修改成素材图片地址</p></li><li><pre><code>css\_global\index.styl<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">→</span><br><span class="line"></span><br></pre></td></tr></table></figure>#web_bg<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">内最后两行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>background-size: coverbackground-repeat: no-repeat<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">修改为</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>  background-size: 400px //cover//  background-repeat: no-repeat<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   400px为自定义尺寸</span><br><span class="line"></span><br><span class="line">## 实现独立页面无侧边栏</span><br><span class="line"></span><br><span class="line">1. 定位到&#96;hexo\themes\butterfly\layout\page.pug&#96;</span><br><span class="line">2. 仿照在&#96;else&#96;处加上注释之间的内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>//...................... else if page.type === &#39;nosidebar&#39;article#page h1= page.title .article-container!= page.content//else......................</code></pre></li><li><p>在想要设置无侧边栏的页面，上方加上<code>type: &quot;nosidebar&quot;</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分类磁铁</title>
      <link href="2020/11/18/004/"/>
      <url>2020/11/18/004/</url>
      
        <content type="html"><![CDATA[<h2 id="步骤1：修改pug代码"><a href="#步骤1：修改pug代码" class="headerlink" title="步骤1：修改pug代码"></a>步骤1：修改pug代码</h2><h3 id="替换代码"><a href="#替换代码" class="headerlink" title="替换代码"></a>替换代码</h3><blockquote><p>在开始一切工作之前，先确保你有6篇不同categories的文章。如果，没有的话需要新建示例文章。</p></blockquote><p>前往”根目录\themes\butterfly\layout”文件夹，将”index.pug”复制并重命名为”index-re.pug”作为备份。</p><p>打开”index.pug”按照以下代码进行修改。修改的起始点为”#recent-posts.recent-posts”终点为”+postUI”。</p><p>你可以直接将以下代码放入进行替换。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">extends includes&#x2F;layout.pug</span><br><span class="line">block content</span><br><span class="line">  include .&#x2F;includes&#x2F;mixins&#x2F;post-ui.pug</span><br><span class="line">  #recent-posts.recent-posts</span><br><span class="line">    .recent-post-item(style&#x3D;&#39;width:100%;height:auto;float:left;padding:5px;flex-wrap:wrap;justify-content : center;flex-direction: row; &#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;listen.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 分类一</span><br><span class="line">       p 分类一描述</span><br><span class="line">       a(href&#x3D;&#39;&#x2F;categories&#x2F;NHK%E5%90%AC%E5%8A%9B%E7%BB%83%E4%B9%A0&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;draw.JPG&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 分类二</span><br><span class="line">       p 分类二描述</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E4%BD%9C%E5%93%81%E9%9B%86&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;study.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 分类三</span><br><span class="line">       p 分类三描述</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E5%AD%A6%E4%B9%A0&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;life.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 分类四</span><br><span class="line">       p 分类四描述</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E6%B8%B8%E6%88%8F%E8%AF%84%E6%B5%8B&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;work.png&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 分类五</span><br><span class="line">       p 分类五描述</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;idea.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 分类六</span><br><span class="line">       p 分类六描述</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E9%9A%8F%E6%83%B3&#x2F;&#39;)</span><br><span class="line">    .recent-post-item(style&#x3D;&#39;height:0px;clear:both;margin-top: 0px;&#39;)</span><br><span class="line">    +postUI</span><br><span class="line">    div!&#x3D; list_categories()</span><br></pre></td></tr></table></figure><hr><h2 id="步骤2：了解修改的pug代码结构"><a href="#步骤2：了解修改的pug代码结构" class="headerlink" title="步骤2：了解修改的pug代码结构"></a>步骤2：了解修改的pug代码结构</h2><p>这个代码看上去很长，但其实结构很简单。以下是从第五行开始的结构拆解。</p><h3 id="外框"><a href="#外框" class="headerlink" title="外框"></a>外框</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">.recent-post-item(style&#x3D;&#39;width:100%;height:auto;float:left;padding:5px;flex-wrap:wrap;justify-content : center;flex-direction: row; &#39;)</span><br></pre></td></tr></table></figure><p>这个利用了文章底板的样式。并加入了自定义的style。</p><p>PS：如果磁贴分类不在顶部请在” .recent-post-item(style=’ “后加入”margin-top: 20px;”</p><h3 id="单一分类"><a href="#单一分类" class="headerlink" title="单一分类"></a>单一分类</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;listen.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 分类一</span><br><span class="line">       p 分类一描述</span><br><span class="line">       a(href&#x3D;&#39;&#x2F;categories&#x2F;NHK%E5%90%AC%E5%8A%9B%E7%BB%83%E4%B9%A0&#x2F;&#39;)</span><br></pre></td></tr></table></figure><p>这个利用了gallery的样式。你可以更改以下部分：</p><p>①分类图片：src=’/images/listen.jpg’</p><p>②分类名称：分类一（尽量控制在4个字以内，不然手机自适应会受影响）</p><p>③分类描述：分类一描述（尽量控制在6个字以内，不然手机自适应会受影响）</p><p>④分类链接：href=’/categories/NHK%E5%90%AC%E5%8A%9B%E7%BB%83%E4%B9%A0/‘</p><p>PS：需使用 <a href="http://tool.chinaz.com/tools/urlencode.aspx">UL编码转换工具</a> 将中文分类转换为对应链接编码</p><p>最好分类的数量为3的倍数，这样自适应不会出问题，推荐6个。</p><h3 id="生成文章"><a href="#生成文章" class="headerlink" title="生成文章"></a>生成文章</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">+postUI</span><br></pre></td></tr></table></figure><p>这个是生成文章的部分，就不用解释了。</p><h3 id="生成分类列表"><a href="#生成分类列表" class="headerlink" title="生成分类列表"></a>生成分类列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">div!&#x3D; list_categories()</span><br></pre></td></tr></table></figure><p>这里用到了hexo主题自带的帮助函数list_categories()。</p><h3 id="生成效果"><a href="#生成效果" class="headerlink" title="生成效果"></a>生成效果</h3><p>“hexo g”生成页面,在本地”hexo s”打开页面，将页面底端的分类信息截图记下。</p><hr><h2 id="步骤3：修改pug代码自定义信息"><a href="#步骤3：修改pug代码自定义信息" class="headerlink" title="步骤3：修改pug代码自定义信息"></a>步骤3：修改pug代码自定义信息</h2><p>按照<strong>上一步的截图信息</strong>依次向”index-re.pug”的单一分类代码块部分填入自定义信息。</p><p>以我的分类为例子，我的分类顺序为听力练习、作品集、学习教程、游戏评测、生活趣闻、随想。</p><p>我的代码如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">extends includes&#x2F;layout.pug</span><br><span class="line">block content</span><br><span class="line">  include .&#x2F;includes&#x2F;mixins&#x2F;post-ui.pug</span><br><span class="line">  #recent-posts.recent-posts</span><br><span class="line">    .recent-post-item(style&#x3D;&#39;width:100%;height:auto;float:left;padding:5px;flex-wrap:wrap;justify-content : center;flex-direction: row; &#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;listen.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 听力练习</span><br><span class="line">       p 我是分类一</span><br><span class="line">       a(href&#x3D;&#39;&#x2F;categories&#x2F;NHK%E5%90%AC%E5%8A%9B%E7%BB%83%E4%B9%A0&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;draw.JPG&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 作品集</span><br><span class="line">       p 我是分类二</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E4%BD%9C%E5%93%81%E9%9B%86&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;study.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 学习教程</span><br><span class="line">       p 我是分类三</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E5%AD%A6%E4%B9%A0&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;life.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 游戏评测</span><br><span class="line">       p 我是分类四</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E6%B8%B8%E6%88%8F%E8%AF%84%E6%B5%8B&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;work.png&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 生活趣闻</span><br><span class="line">       p 我是分类五</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB&#x2F;&#39;)</span><br><span class="line">     figure.gallery-group#color-card</span><br><span class="line">      img.gallery-group-img.loaded(src&#x3D;&#39;&#x2F;images&#x2F;idea.jpg&#39;, data-ll-status&#x3D;&#39;loaded&#39;)</span><br><span class="line">      figcaption(style&#x3D;&#39;background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.4) 25%,rgba(16,16,16,0) 100%&#39;)</span><br><span class="line">       .gallery-group-name(style&#x3D;&#39;font-size: 1rem;&#39;) | 随想</span><br><span class="line">       p 我是分类六</span><br><span class="line">       a(href&#x3D;&#39;categories&#x2F;%E9%9A%8F%E6%83%B3&#x2F;&#39;)</span><br><span class="line">    .recent-post-item(style&#x3D;&#39;height:0px;clear:both;margin-top: 0px;&#39;)</span><br><span class="line">    +postUI</span><br><span class="line">    div!&#x3D; list_categories()</span><br><span class="line">    include includes&#x2F;pagination.pug</span><br></pre></td></tr></table></figure><hr><h2 id="步骤4：编写CSS样式代码"><a href="#步骤4：编写CSS样式代码" class="headerlink" title="步骤4：编写CSS样式代码"></a>步骤4：编写CSS样式代码</h2><h3 id="向styl里添加代码"><a href="#向styl里添加代码" class="headerlink" title="向styl里添加代码"></a>向styl里添加代码</h3><p>因为在调试过程中出现了bug，且尚未解决，所以需要将以下代码加入到style里。</p><p>前往”博客根目录\themes\butterfly\source\css_layout”打开”third-party.styl”</p><p>提示：这里最好不要备份，备份的话不要放在css目录下（你可以复制一份到桌面）。</p><p>在末尾处填写以下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">#color-card</span><br><span class="line">  width:32%</span><br><span class="line">  height: 180px</span><br><span class="line"></span><br><span class="line">@media screen and (max-width: 650px)</span><br><span class="line"> #color-card</span><br><span class="line">  width: 47%</span><br><span class="line">  height: 150px</span><br></pre></td></tr></table></figure><p>这部分代码控制自适应，你会发现磁贴的大小发生了变化。</p><h3 id="添加自定义css代码文件"><a href="#添加自定义css代码文件" class="headerlink" title="添加自定义css代码文件"></a>添加自定义css代码文件</h3><p>在hexo根目录”source”文件夹下新建”magnetcss”文件夹，在”\source\magnetcss”路径下新建”magnet.css”</p><p>填入以下代码后保存。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">.category-list-count:after &#123;</span><br><span class="line"></span><br><span class="line">    content: &#39; 篇&#39;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.fa-book&#123;</span><br><span class="line">    padding-right:5px</span><br><span class="line">&#125;</span><br><span class="line">.category-list-count &#123;</span><br><span class="line">        font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.category-list-item &#123;list-style-type:none;&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="步骤5：接入CSS样式和JS代码"><a href="#步骤5：接入CSS样式和JS代码" class="headerlink" title="步骤5：接入CSS样式和JS代码"></a>步骤5：接入CSS样式和JS代码</h2><p>打开”\themes\butterfly&quot;路径下的”_config.yml”</p><p>搜索到”inject:”设置处</p><p>添加以下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;magnetcss&#x2F;magnet.css&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">  bottom:</span><br><span class="line">  - &lt;script&gt; $(&quot;.category-list-count&quot;).prepend(&quot;&lt;i class&#x3D;\&quot;fas fa-book\&quot;&gt;&lt;&#x2F;i&gt;&quot;);&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script&gt; $(&quot;.category-list-item&quot;).eq(0).insertAfter($(&quot;.gallery-group-name&quot;).eq(0))&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script&gt; $(&quot;.category-list-item&quot;).eq(1).insertAfter($(&quot;.gallery-group-name&quot;).eq(1))&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script&gt; $(&quot;.category-list-item&quot;).eq(2).insertAfter($(&quot;.gallery-group-name&quot;).eq(2))&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script&gt; $(&quot;.category-list-item&quot;).eq(3).insertAfter($(&quot;.gallery-group-name&quot;).eq(3))&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script&gt; $(&quot;.category-list-item&quot;).eq(4).insertAfter($(&quot;.gallery-group-name&quot;).eq(4))&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script&gt; $(&quot;.category-list-item&quot;).eq(5).insertAfter($(&quot;.gallery-group-name&quot;).eq(5))&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script&gt; $(&quot;.category-list-item a&quot;).hide();&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>你会发现磁贴内的文字发生了变化，同时底部的列表消失。</p><p>加入新的分类也很简单，按照递增规律加就行。</p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>添加新分类后，分类排序可能出现变化，请对应修改。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子钟|侧边栏</title>
      <link href="2020/11/18/003/"/>
      <url>2020/11/18/003/</url>
      
        <content type="html"><![CDATA[<h3 id="2-0模拟时钟小部件主要包含："><a href="#2-0模拟时钟小部件主要包含：" class="headerlink" title="2.0模拟时钟小部件主要包含："></a>2.0模拟时钟小部件主要包含：</h3><p>日期（年、月、日、星期）</p><p>天气（天气图标、温度）</p><p>湿度(百分比）</p><p>空气质量（US AQI）</p><p>时间（当地时间、AM/PM）</p><p>地理位置（IP地址地理位置）</p><p>每日访问上限：约500次</p><p>每月访问上限：10000次</p><hr><h2 id="步骤1：编写小部件代码"><a href="#步骤1：编写小部件代码" class="headerlink" title="步骤1：编写小部件代码"></a>步骤1：编写小部件代码</h2><p>在”\themes\butterfly\layout\includes\widget”文件下复制某个PUG，重命名为”card_clock.pug”</p><p>打开该文件，删除原有代码，将以下代码粘贴进去。注意PUG的空格敏感。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">.card-widget.card-clock</span><br><span class="line"> .card-glass</span><br><span class="line">  .card-background</span><br><span class="line">   .card-content</span><br><span class="line">    #clock</span><br><span class="line">      div(style&#x3D;&quot;&quot;)</span><br><span class="line">       span.date &#123;&#123; date &#125;&#125;</span><br><span class="line">      div(style&#x3D;&quot;text-align:center;&quot;)</span><br><span class="line">       span.time &#123;&#123; time &#125;&#125;</span><br><span class="line">      div.animation</span><br><span class="line">      div</span><br><span class="line">       span.daylight &#123;&#123; daylight &#125;&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="步骤2：将小部件植入侧边栏"><a href="#步骤2：将小部件植入侧边栏" class="headerlink" title="步骤2：将小部件植入侧边栏"></a>步骤2：将小部件植入侧边栏</h2><p>打开”\themes\butterfly\layout\includes\widget”路径下的”index.pug”</p><p>将card_clock代码添加至card_author代码块后。添加后的代码如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">if theme.aside.enable</span><br><span class="line">  if page.aside !&#x3D;&#x3D; false</span><br><span class="line">    #aside_content.aside_content</span><br><span class="line">      if theme.aside.card_author.enable</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_author&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      if theme.aside.card_clock.enable</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_clock&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      if theme.aside.card_announcement.enable</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_announcement&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      if theme.aside.card_recent_post.enable</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_recent_post&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      if theme.ad &amp;&amp; theme.ad.aside</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_ad&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      if theme.aside.card_categories.enable</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_categories&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      if theme.aside.card_tags.enable</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_tags&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      if theme.aside.card_archives.enable</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_archives&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      if theme.aside.card_webinfo</span><br><span class="line">        !&#x3D;partial(&#39;includes&#x2F;widget&#x2F;card_webinfo&#39;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p>打开”\themes\butterfly&quot;路径下的”_config.yml”</p><p>搜索到”aside:”设置处</p><p>添加clock开关代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line">aside:</span><br><span class="line">  enable: true</span><br><span class="line">  mobile: true    # display on mobile</span><br><span class="line">  position: right # left or right</span><br><span class="line">  card_clock:      </span><br><span class="line">    enable: true   </span><br><span class="line">  card_author:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><hr><h2 id="步骤3：编写CSS代码"><a href="#步骤3：编写CSS代码" class="headerlink" title="步骤3：编写CSS代码"></a>步骤3：编写CSS代码</h2><p>在hexo根目录”source”文件夹下新建”css”文件夹，在”\source\css”路径下新建”clock.css”</p><p>在”clock.css”中添加以下内容：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">#clock &#123;opacity:0;&#125;</span><br><span class="line"></span><br><span class="line">#clock .date &#123;</span><br><span class="line">    font-family: &#39;UnidreamLED&#39;;  </span><br><span class="line">    font-size: 14px;</span><br><span class="line">    font-weight:normal;</span><br><span class="line">    color: #000000;</span><br><span class="line">    margin-block-start: 0em;</span><br><span class="line">    margin-block-end: 0em;</span><br><span class="line">    line-height: 1;</span><br><span class="line">&#125;</span><br><span class="line">#clock .time &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    font-family: &#39;UnidreamLED&#39;;  </span><br><span class="line">    font-size: 38px;</span><br><span class="line">    font-weight:normal;</span><br><span class="line">    color: #000000;</span><br><span class="line">    margin-block-start: 0em;</span><br><span class="line">    margin-block-end: -0.2em;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.card-background &#123;</span><br><span class="line">  height:153px;</span><br><span class="line">  margin:15px;</span><br><span class="line">  border-radius: 8px;</span><br><span class="line">  background-color: rgb(236, 236, 236);</span><br><span class="line">  box-shadow: inset 3px 3px 18px 0px rgba(50,50,50, 0.4);</span><br><span class="line">  z-index: 2;</span><br><span class="line">&#125;</span><br><span class="line">@font-face &#123;</span><br><span class="line">font-family: &#39;UnidreamLED&#39;; &#x2F;*a name to be used later*&#x2F;</span><br><span class="line">src: url(&#39;&#x2F;fonts&#x2F;UnidreamLED.ttf&#39;); &#x2F;*URL to font*&#x2F;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">.date &#123;width:50%;&#125;</span><br><span class="line">.time&#123;width:90%;&#125;</span><br><span class="line">.daylight&#123;width:12%;float:right;font-family: &#39;UnidreamLED&#39;; color:black; &#125;</span><br><span class="line">#weatherimg &#123;</span><br><span class="line">    -webkit-filter: brightness(0%)!important;</span><br><span class="line">    filter: brightness(0%)!important;</span><br><span class="line">    width: 14px!important;</span><br><span class="line">    height: 14px!important;</span><br><span class="line">&#125;</span><br><span class="line">#humidityimg &#123;</span><br><span class="line">    -webkit-filter: brightness(0%)!important;</span><br><span class="line">    filter: brightness(0%)!important;</span><br><span class="line">    width: 14px!important;</span><br><span class="line">    height: 14px!important;</span><br><span class="line">&#125;</span><br><span class="line">.weather  &#123;width:10%;font-family: &#39;UnidreamLED&#39;;padding-left:10px; padding-right:1px;color: #000000;&#125;</span><br><span class="line">.temperature  &#123;width:20%;font-family: &#39;UnidreamLED&#39;; color: #000000;padding-left: 5px;padding-right:5px; &#125;</span><br><span class="line">.humidity  &#123;width:20%;font-family: &#39;UnidreamLED&#39;;color: #000000;padding-left: 10px;padding-right:0px; &#125;</span><br><span class="line">.usaqi  &#123;height:30px;width:10%;font-family: &#39;UnidreamLED&#39;;color: #000000;&#125;</span><br><span class="line">.city &#123;width:10%;font-family: &#39;UnidreamLED&#39;;padding-left:20px; padding-right:1px;color: #000000;&#125;</span><br></pre></td></tr></table></figure><h2 id="步骤4：添加自定义字体文件"><a href="#步骤4：添加自定义字体文件" class="headerlink" title="步骤4：添加自定义字体文件"></a>步骤4：添加自定义字体文件</h2><p>在”source”文件夹下新建”fonts”文件夹，将”UnidreamLED”放入文件夹中。</p><p><a href="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E7%BD%91%E7%AB%99%E4%BB%8B%E7%BB%8D/fonts/UnidreamLED.ttf">UnidreamLED字体下载</a></p><hr><h2 id="步骤5：编写JS代码"><a href="#步骤5：编写JS代码" class="headerlink" title="步骤5：编写JS代码"></a>步骤5：编写JS代码</h2><p>在根目录”source”文件夹下新建”js”文件夹，将”vue.min.js”放入文件夹中。</p><p>在js文件夹中，复制”vue.min.js”，重命名为”clock.js”</p><p>打开该文件，删除原有代码，将以下代码粘贴进去。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">var clock &#x3D; new Vue(&#123;</span><br><span class="line">    el: &#39;#clock&#39;,</span><br><span class="line">    data: &#123;</span><br><span class="line">        time: &#39;&#39;,</span><br><span class="line">        date: &#39;&#39;,</span><br><span class="line">        daylight: &#39;&#39;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">var week &#x3D; [&#39;SUN&#39;, &#39;MON&#39;, &#39;TUE&#39;, &#39;WED&#39;,&#39;THU&#39; ,&#39;FRI&#39;, &#39;SAT&#39;];</span><br><span class="line">var timerID &#x3D; setInterval(updateTime, 1000);</span><br><span class="line">updateTime();</span><br><span class="line">function updateTime() &#123;</span><br><span class="line">    var cd &#x3D; new Date();</span><br><span class="line">    clock.time &#x3D; zeroPadding(cd.getHours(), 2) + &#39;:&#39; + zeroPadding(cd.getMinutes(), 2) + &#39;:&#39; + zeroPadding(cd.getSeconds(), 2);</span><br><span class="line">    clock.date &#x3D; zeroPadding(cd.getFullYear(), 4) + &#39;-&#39; + zeroPadding(cd.getMonth()+1, 2) + &#39;-&#39; + zeroPadding(cd.getDate(), 2) + &#39; &#39; + week[cd.getDay()];</span><br><span class="line">    var hamorpm &#x3D; cd.getHours();</span><br><span class="line"> var str;</span><br><span class="line">   if(hamorpm &gt;12) &#123;</span><br><span class="line">        hamorpm -&#x3D; 12;</span><br><span class="line">        str &#x3D; &quot; PM&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        str &#x3D; &quot; AM&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    clock.daylight &#x3D; str</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function zeroPadding(num, digit) &#123;</span><br><span class="line">    var zero &#x3D; &#39;&#39;;</span><br><span class="line">    for(var i &#x3D; 0; i &lt; digit; i++) &#123;</span><br><span class="line">        zero +&#x3D; &#39;0&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    return (zero + num).slice(-digit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在js文件夹中，复制”vue.min.js”，重命名为”airvisualapi.js”</p><p>打开该文件，删除原有代码，将以下代码粘贴进去。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line"></span><br><span class="line">var clockurl &#x3D; &quot;https:&#x2F;&#x2F;api.airvisual.com&#x2F;v2&#x2F;nearest_city?key&#x3D;123312fc-84e9-49c4-8？？？-66f0？？？912？？&quot;</span><br><span class="line">    $(function()&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            &#x2F;&#x2F;请求方式</span><br><span class="line">            type:&quot;GET&quot;,</span><br><span class="line">            &#x2F;&#x2F;文件位置</span><br><span class="line">            url:clockurl,</span><br><span class="line">            &#x2F;&#x2F;返回数据格式为json,也可以是其他格式如</span><br><span class="line">            dataType: &quot;json&quot;,</span><br><span class="line">            beforeSend:function(XMLHttpRequest)&#123;</span><br><span class="line">              &#x2F;&#x2F;alert(&#39;远程调用开始...&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F;请求成功后要执行的函数，拼接html</span><br><span class="line">            success: function(data)&#123;</span><br><span class="line">                str1&#x3D;data.data.current.weather.ic;</span><br><span class="line">                imagelink&#x3D; &#39;images&#x2F;weather&#x2F;&#39; +  str1 + &#39;.png&#39;</span><br><span class="line">                str2&#x3D;data.data.current.weather.tp;</span><br><span class="line">                str3&#x3D;data.data.current.weather.hu;</span><br><span class="line">                str4&#x3D;data.data.current.pollution.aqius;</span><br><span class="line">                var str&#x3D;&#39;&lt;span class&#x3D;&quot;weather&quot;&gt;&#39;;</span><br><span class="line">                str+&#x3D;&#39;&lt;img id&#x3D;&quot;weatherimg&quot; &gt;&#39;  +  &#39;&lt;&#x2F;span&gt;&#39; + &#39;&lt;span class&#x3D;&quot;temperature&quot;&gt;&#39; + str2 + &#39;*C&#39;+ &#39;&lt;&#x2F;span&gt;&#39;;</span><br><span class="line">                str+&#x3D;&#39;&lt;span class&#x3D;&quot;humidity&quot;&gt;&#39; +  &#39;&lt;img id&#x3D;&quot;humidityimg&quot; &gt;&#39;  + &#39; &#39;  + str3 + &#39;%&#39; + &#39;&lt;&#x2F;span&gt;&#39;;</span><br><span class="line">                var str5&#x3D;&#39;&lt;span class&#x3D;&quot;usaqi&quot;&gt;&#39;;</span><br><span class="line">                str5+&#x3D; str4  +&#39; &#39; + &#39;US&#39;+&#39; &#39; +&#39;AQI&#39; + &#39;&lt;&#x2F;span&gt;&#39;;</span><br><span class="line">                str5+&#x3D; &#39;&lt;span class&#x3D;&quot;city&quot;&gt;&#39; + data.data.city + &#39;&lt;&#x2F;span&gt;&#39;;</span><br><span class="line">                $(str).insertAfter($(&quot;.date&quot;).eq(0));</span><br><span class="line">                $(str5).insertBefore($(&quot;.daylight&quot;).eq(0));</span><br><span class="line">                document.getElementById(&quot;weatherimg&quot;).src &#x3D; imagelink</span><br><span class="line">                document.getElementById(&quot;humidityimg&quot;).src &#x3D; &#39;images&#x2F;weather&#x2F;hu.png&#39;</span><br><span class="line">                console.log(data)</span><br><span class="line"></span><br><span class="line">                document.getElementById(&quot;clock&quot;).style.opacity&#x3D; 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>key=123312fc-84e9-49c4-8？？？-66f0？？？912？？部分为需要在airvisual官网申请的key。</p><hr><h2 id="步骤6：接入CSS与JS"><a href="#步骤6：接入CSS与JS" class="headerlink" title="步骤6：接入CSS与JS"></a>步骤6：接入CSS与JS</h2><p>打开”\themes\butterfly&quot;路径下的”_config.yml”</p><p>搜索到”inject:”设置处</p><p>添加以下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YML</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;css&#x2F;clock.css&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">  bottom:</span><br><span class="line">  - &lt;script src&#x3D;&quot;&#x2F;js&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script src&#x3D;&quot;&#x2F;js&#x2F;clock.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  - &lt;script src&#x3D;&quot;&#x2F;js&#x2F;airvisualapi.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="步骤7：添加天气图片"><a href="#步骤7：添加天气图片" class="headerlink" title="步骤7：添加天气图片"></a>步骤7：添加天气图片</h2><p>在根目录”source”文件夹下新建”images”文件夹，在”images”文件夹里新建”weather”文件夹。<br>将以下压缩包下载，解压后将图片保存进文件夹中。</p><h2 id="步骤8：申请AirVisual-api-key"><a href="#步骤8：申请AirVisual-api-key" class="headerlink" title="步骤8：申请AirVisual api key"></a>步骤8：申请AirVisual api key</h2><p>为了保障自己的API不失效，这里介绍下如何申请AirVisual api key。</p><p>①打开网站，注册帐号。</p><p><a href="https://www.iqair.com/auth/login">https://www.iqair.com/auth/login</a></p><p>②登录后访问，”<a href="https://www.iqair.com/dashboard/api&quot;">https://www.iqair.com/dashboard/api&quot;</a></p><p><a href="https://www.iqair.com/dashboard/api">https://www.iqair.com/dashboard/api</a></p><p>③点击“+ NEW KEY”按钮。选择“Community”得到对应的key。</p><p>④修改”airvisualapi.js”中的key对应的字段参数。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">var clockurl &#x3D; &quot;https:&#x2F;&#x2F;api.airvisual.com&#x2F;v2&#x2F;nearest_city?key&#x3D;123312fc-84e9-49c4-8？？？-66f0？？？912？？&quot;</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在本地进行开发时建议关掉”card_clock: enable: true”选项，以免出现多次调用上限的问题。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS引用|鼠标样式|页脚渐变|滚动条|图标颜色|隐藏按钮|轮播图|表情</title>
      <link href="2020/11/18/001/"/>
      <url>2020/11/18/001/</url>
      
        <content type="html"><![CDATA[<h2 id="JS-CSS如何引用"><a href="#JS-CSS如何引用" class="headerlink" title="JS/CSS如何引用"></a>JS/CSS如何引用</h2><p>此篇文章所说的一切引用（包括css和js）都可以参考这里。</p><ol><li>打开主题配置文件（butterfly.yml）</li><li>定位搜索 inject</li><li>其中head是用来引入css的。bottom是用来引入js的。</li></ol><p>示例：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/flink.min.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/js/hideMobileSidebar.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注：以上方式2.3.5版本可用，其他版本请自行查找引入自定义js及css的地方。</strong></p><h3 id="引用方式说明"><a href="#引用方式说明" class="headerlink" title="引用方式说明"></a>引用方式说明</h3><p>引用方式二选一即可。</p><h3 id="以相对路径引入"><a href="#以相对路径引入" class="headerlink" title="以相对路径引入"></a>以相对路径引入</h3><ol><li><p>将写好的css文件移动到<code>\Butterfly\source\css\</code>目录下。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2Jsb2dpbWcvcGljYmVkQGxhdGVzdC8yMDIwLzA1LzAyL2I3ZGYxOGNjZDQzNGViZTQyMTJhMmZmMGY4MGE5MGI5LnBuZw?x-oss-process=image/format,png" alt="img"></p></li><li><p>然后修改配置文件的引入方式</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2Jsb2dpbWcvcGljYmVkQGxhdGVzdC8yMDIwLzA1LzAyL2IzMjAxZDQ3ZjkxYjA3ODAzMDkzZDRjOGVkMGY3MGZiLnBuZw?x-oss-process=image/format,png" alt="img"></p></li></ol><h3 id="以外链的方式引入"><a href="#以外链的方式引入" class="headerlink" title="以外链的方式引入"></a>以外链的方式引入</h3><p>同样的可以将这个文件上传到cdn，如七牛云、又拍云、GitHub+Jsdeliver等。</p><p>只需要将引入地址写为你的文件外链地址即可。</p><p>例如我的jsd链接<img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2Jsb2dpbWcvcGljYmVkQGxhdGVzdC8yMDIwLzA1LzAyL2I5YjhlOTBmYjhkMTdlMDk1ZDBmMjI1MWYxZWI1NGI0LnBuZw?x-oss-process=image/format,png" alt="img"></p><p>注：不同版本可能设置略有不同，请仔细对照你所使用版本的文档。引入并非写个连接，而是使用html标签引入。</p><h3 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h3><p>将以下代码复制到你所创建的css文件即可。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>代码解读：以上代码表示当鼠标在<code>body</code>元素及<code>a</code>、<code>img</code>元素上时所显示的鼠标为url路径里的样式。</p><p>因此你可以将里边的文件替换为任意鼠标样式。</p></blockquote><h3 id="页脚渐变"><a href="#页脚渐变" class="headerlink" title="页脚渐变"></a>页脚渐变</h3><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2Jsb2dpbWcvcGljYmVkQGxhdGVzdC8yMDIwLzA1LzA2LzFjZDc0NzRhODcxZTVlM2RmZjg2MmQ4ZTg1YzE5ZDFiLnBuZw?x-oss-process=image/format,png" alt="效果图"></p><p>同样的将以下代码复制到你所创建的css文件即可。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 页脚footer */</span></span><br><span class="line"><span class="comment">/* 渐变色滚动动画 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@-moz-keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@keyframes</span> Gradient &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(-<span class="number">45deg</span>, #ee7752, #ce3e75, #<span class="number">23</span>a6d5, #<span class="number">23</span>d5ab);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">400%</span> <span class="number">400%</span>;</span><br><span class="line">    <span class="attribute">-webkit-animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">-moz-animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">    <span class="attribute">-o-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-ms-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-webkit-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-moz-user-select</span>: none;</span><br><span class="line">    <span class="attribute">user-select</span>: none;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h3><p>将以下代码复制到你所创建的css文件即可。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2Jsb2dpbWcvcGljYmVkQGxhdGVzdC8yMDIwLzA1LzA2Lzc2NTk0OTg4YjUwNzgyZWIyZTRiNWQ2Mjk2OWYxZmQ5LnBuZw?x-oss-process=image/format,png" alt="img"></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 滚动条 */</span></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-track</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">73</span>, <span class="number">177</span>, <span class="number">245</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(</span><br><span class="line">    <span class="number">45deg</span>,</span><br><span class="line">    rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">25%</span>,</span><br><span class="line">    transparent <span class="number">25%</span>,</span><br><span class="line">    transparent <span class="number">50%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">50%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">75%</span>,</span><br><span class="line">    transparent <span class="number">75%</span>,</span><br><span class="line">    transparent</span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-corner</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">::-moz-selection</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义note（图标、颜色）"><a href="#自定义note（图标、颜色）" class="headerlink" title="自定义note（图标、颜色）"></a>自定义note（图标、颜色）</h3><p>此项修改引用的图标是阿里iconfont图标。并不适用于Font Awesome。且你所使用的图标需引入的css中存在。关于如何使用阿里iconfont请参考<a href="https://www.antmoe.com/posts/80c43671/index.html">Hexo博客之优雅使用阿里iconfont图标</a>。这里只介绍成功引入阿里图标后如何自定义note标签的图标及颜色。</p><p>需要在css中加入以下规则。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 自定义note */</span></span><br><span class="line"><span class="selector-class">.note</span><span class="selector-class">.custom</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">  <span class="attribute">border-left-color</span>: <span class="number">#777</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.custom</span><span class="selector-pseudo">:not(.no-icon)</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来便可以在md中直接使用HTML标签自定义图标了。</p><p>示例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note icon custom iconfont 图标名&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #f7f7f7;border-left-color: #777;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>default<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上代码中的<code>class</code>名中的图标名在项目中查找。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2Jsb2dpbWcvcGljYmVkQGxhdGVzdC8yMDIwLzA1LzA3LzQxZjY5YmZlNmVjOGQwNWIzOTZkODg0ODFmY2Y3ODk3LnBuZw?x-oss-process=image/format,png" alt="img"></p><ul><li><p><code>background</code></p><p>表示note的背景，可以自行设置。当然渐变背景理论上也是可以的。</p></li><li><p><code>border-left-color</code></p><p>左边框的颜色。</p></li></ul><p>点击复制代码即可粘贴到图表名。例如以下代码效果。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note icon custom iconfont icon-QQ&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #f7f7f7;border-left-color: #777;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>default<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>QQ图标</p><p><em>因为每个人的项目图标不一样，因此可能会出现class名相同但图标不一样的效果。具体效果以图标项目仓库为准。</em></p><p>常用配色搭配</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">/* default */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note  icon custom iconfont icon-QQ2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #f7f7f7;border-left-color: #777;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>default<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">/* success */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note  icon custom iconfont icon-QQ2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #eff8f0;border-left-color: #5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>success<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">/* primary */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note  icon custom iconfont icon-QQ2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #f5f0fa;border-left-color: #6f42c1;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>primary<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">/* info */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note  icon custom iconfont icon-QQ2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #eef7fa;border-left-color: #428bca;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">/* warning */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note  icon custom iconfont icon-QQ2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #fdf8ea;border-left-color: #f0ad4e;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>warning<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">/* danger */</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note  icon custom iconfont icon-QQ2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: #fcf1f2;border-left-color: #d9534f;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>danger<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="主题自带隐藏按钮"><a href="#主题自带隐藏按钮" class="headerlink" title="主题自带隐藏按钮"></a>主题自带隐藏按钮</h3><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2Jsb2dpbWcvcGljYmVkQGxhdGVzdC8yMDIwLzA1LzA2L2VmNGY0M2I0MGM1NTE5MDI3NTJhN2JkMjBlODIxZTU1LnBuZw?x-oss-process=image/format,png" alt="img"></p><p>主题自带的隐藏按钮点击后消失，则不可以再次隐藏。修改方法很简单，一段css代码即可。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.hide-block</span>&gt;<span class="selector-tag">a</span><span class="selector-class">.hide-button</span><span class="selector-class">.open</span>, <span class="selector-class">.hide-inline</span>&gt;<span class="selector-tag">a</span><span class="selector-class">.hide-button</span><span class="selector-class">.open</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h3><p>轮播图的修改来源于网络（jq）的一个插件。此项修改引入js文件即可。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Slider</span>(<span class="params">option</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.wrap = option.wrap;</span><br><span class="line">    <span class="built_in">this</span>.imgList = option.imgList;</span><br><span class="line">    <span class="built_in">this</span>.imgNum = <span class="built_in">this</span>.imgList.length;</span><br><span class="line">    <span class="built_in">this</span>.width = option.width || $(<span class="built_in">this</span>.wrap).width();</span><br><span class="line">    <span class="built_in">this</span>.height = option.height || $(<span class="built_in">this</span>.wrap).height();</span><br><span class="line">    <span class="built_in">this</span>.isAuto = option.isAuto || <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">this</span>.moveTime = option.moveTime;</span><br><span class="line">    <span class="built_in">this</span>.direction = option.direction || <span class="string">&quot;right&quot;</span>;</span><br><span class="line">    <span class="built_in">this</span>.btnWidth = option.btnWidth;</span><br><span class="line">    <span class="built_in">this</span>.btnHeight = option.btnHeight;</span><br><span class="line">    <span class="built_in">this</span>.spanWidth = option.spanWidth;</span><br><span class="line">    <span class="built_in">this</span>.spanHeight = option.spanHeight;</span><br><span class="line">    <span class="built_in">this</span>.spanColor = option.spanColor;</span><br><span class="line">    <span class="built_in">this</span>.activeSpanColor = option.activeSpanColor;</span><br><span class="line">    <span class="built_in">this</span>.btnBackgroundColor = option.btnBackgroundColor;</span><br><span class="line">    <span class="built_in">this</span>.spanRadius = option.spanRadius;</span><br><span class="line">    <span class="built_in">this</span>.spanMargin = option.spanMargin;</span><br><span class="line">    <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">this</span>.nowIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.createDom();</span><br><span class="line">    <span class="built_in">this</span>.initStyle();</span><br><span class="line">    <span class="built_in">this</span>.bindEvent();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.isAuto === <span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="built_in">this</span>.autoMove();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  Slider.prototype.createDom = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> oUl = $(<span class="string">&#x27;&lt;ul class=&quot;imgList&quot;&gt;&lt;/ul&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> Spot = $(<span class="string">&#x27;&lt;div class=&quot;spot&quot;&gt;&lt;/div&gt;&#x27;</span>);</span><br><span class="line">    <span class="built_in">this</span>.imgList.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> oLi =</span><br><span class="line">        <span class="string">&#x27;&lt;li&gt;&lt;a  href=&quot; &#x27;</span> +</span><br><span class="line">        item.a +</span><br><span class="line">        <span class="string">&#x27;target=&quot;_blank&quot; &quot;&gt;&lt;img src=&quot; &#x27;</span> +</span><br><span class="line">        item.img +</span><br><span class="line">        <span class="string">&#x27; &quot;&gt;&lt;/a&gt;&lt;/li&gt;&#x27;</span>;</span><br><span class="line">      oUl.append(oLi);</span><br><span class="line">      <span class="keyword">var</span> span = <span class="string">&quot;&lt;span&gt;&lt;/span&gt;&quot;</span>;</span><br><span class="line">      Spot.append(span);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> leftBtn = $(</span><br><span class="line">      <span class="string">&#x27;&lt;div class=&quot;left-btn&quot;&gt;&lt;i class=&quot;fas fa-angle-left&quot;&gt;&lt;/i&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> rightBtn = $(</span><br><span class="line">      <span class="string">&#x27;&lt;div class=&quot;right-btn&quot;&gt;&lt;i class=&quot;fas fa-angle-right&quot;&gt;&lt;/i&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">this</span>.wrap.append(oUl).append(leftBtn).append(rightBtn).append(Spot);</span><br><span class="line">  &#125;;</span><br><span class="line">  Slider.prototype.initStyle = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&quot;*&quot;</span>, <span class="built_in">this</span>.wrap).css(&#123; <span class="attr">margin</span>: <span class="number">0</span>, <span class="attr">padding</span>: <span class="number">0</span>, <span class="attr">listStyle</span>: <span class="string">&quot;none&quot;</span> &#125;);</span><br><span class="line">    $(<span class="built_in">this</span>.wrap).css(&#123; <span class="attr">overflow</span>: <span class="string">&quot;hidden&quot;</span>, <span class="attr">position</span>: <span class="string">&quot;relative&quot;</span> &#125;);</span><br><span class="line">    $(<span class="string">&quot;.imgList&quot;</span>, <span class="built_in">this</span>.wrap).css(&#123;</span><br><span class="line">      width: <span class="built_in">this</span>.width,</span><br><span class="line">      height: <span class="built_in">this</span>.height,</span><br><span class="line">      position: <span class="string">&quot;relative&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;.imgList li&quot;</span>, <span class="built_in">this</span>.wrap)</span><br><span class="line">      .css(&#123;</span><br><span class="line">        width: <span class="built_in">this</span>.width,</span><br><span class="line">        height: <span class="built_in">this</span>.height,</span><br><span class="line">        position: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">        left: <span class="number">0</span>,</span><br><span class="line">        top: <span class="number">0</span>,</span><br><span class="line">        display: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">      .eq(<span class="built_in">this</span>.nowIndex)</span><br><span class="line">      .css(&#123; <span class="attr">display</span>: <span class="string">&quot;block&quot;</span> &#125;);</span><br><span class="line">    $(<span class="string">&quot;.imgList li a, .imgList li a img&quot;</span>, <span class="built_in">this</span>.wrap).css(&#123;</span><br><span class="line">      display: <span class="string">&quot;inline-block&quot;</span>,</span><br><span class="line">      width: <span class="built_in">this</span>.width,</span><br><span class="line">      height: <span class="built_in">this</span>.height,</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;.left-btn, .right-btn&quot;</span>, <span class="built_in">this</span>.wrap).css(&#123;</span><br><span class="line">      width: <span class="built_in">this</span>.btnWidth,</span><br><span class="line">      height: <span class="built_in">this</span>.btnHeight,</span><br><span class="line">      backgroundColor: <span class="built_in">this</span>.btnBackgroundColor,</span><br><span class="line">      color: <span class="string">&quot;#fff&quot;</span>,</span><br><span class="line">      textAlign: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">      lineHeight: <span class="built_in">this</span>.btnHeight + <span class="string">&quot;px&quot;</span>,</span><br><span class="line">      position: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">      top: <span class="string">&quot;50%&quot;</span>,</span><br><span class="line">      marginTop: -<span class="built_in">this</span>.btnHeight / <span class="number">2</span>,</span><br><span class="line">      cursor: <span class="string">&quot;pointer&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;.right-btn&quot;</span>, <span class="built_in">this</span>.wrap).css(&#123; <span class="attr">right</span>: <span class="number">0</span> &#125;);</span><br><span class="line">    $(<span class="string">&quot;.spot&quot;</span>, <span class="built_in">this</span>.wrap).css(&#123;</span><br><span class="line">      height: <span class="built_in">this</span>.spanHeight + <span class="built_in">this</span>.spanMargin * <span class="number">2</span>,</span><br><span class="line">      position: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">      left: <span class="string">&quot;50%&quot;</span>,</span><br><span class="line">      marginLeft: (-<span class="built_in">this</span>.imgNum * (<span class="built_in">this</span>.spanWidth + <span class="built_in">this</span>.spanMargin * <span class="number">2</span>)) / <span class="number">2</span>,</span><br><span class="line">      bottom: <span class="number">10</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;.spot span&quot;</span>, <span class="built_in">this</span>.wrap)</span><br><span class="line">      .css(&#123;</span><br><span class="line">        display: <span class="string">&quot;inline-block&quot;</span>,</span><br><span class="line">        width: <span class="built_in">this</span>.spanWidth,</span><br><span class="line">        height: <span class="built_in">this</span>.spanHeight,</span><br><span class="line">        margin: <span class="built_in">this</span>.spanMargin,</span><br><span class="line">        backgroundColor: <span class="built_in">this</span>.spanColor,</span><br><span class="line">        borderRadius: <span class="built_in">this</span>.spanRadius,</span><br><span class="line">        cursor: <span class="string">&quot;pointer&quot;</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">      .eq(<span class="built_in">this</span>.nowIndex)</span><br><span class="line">      .css(&#123; <span class="attr">backgroundColor</span>: <span class="built_in">this</span>.activeSpanColor &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  Slider.prototype.bindEvent = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">    $(<span class="string">&quot;.left-btn&quot;</span>, <span class="built_in">this</span>.wrap).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      self.move(<span class="string">&quot;prev&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;.right-btn&quot;</span>, <span class="built_in">this</span>.wrap).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      self.move(<span class="string">&quot;next&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;.spot span&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      self.move($(<span class="built_in">this</span>).index());</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="built_in">this</span>.wrap).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">clearInterval</span>(self.time);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  Slider.prototype.move = <span class="function"><span class="keyword">function</span> (<span class="params">dir</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.flag) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">switch</span> (dir) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;prev&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.nowIndex === <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="built_in">this</span>.nowIndex = <span class="built_in">this</span>.imgNum - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.nowIndex--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&quot;next&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.nowIndex === <span class="built_in">this</span>.imgNum - <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="built_in">this</span>.nowIndex = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">this</span>.nowIndex++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">this</span>.nowIndex = dir;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">    $(<span class="string">&quot;.imgList li&quot;</span>, <span class="built_in">this</span>.wrap)</span><br><span class="line">      .fadeOut()</span><br><span class="line">      .eq(<span class="built_in">this</span>.nowIndex)</span><br><span class="line">      .fadeIn(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        self.flag = <span class="literal">false</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">    $(<span class="string">&quot;.spot  span&quot;</span>, <span class="built_in">this</span>.wrap)</span><br><span class="line">      .css(&#123; <span class="attr">backgroundColor</span>: <span class="built_in">this</span>.spanColor &#125;)</span><br><span class="line">      .eq(<span class="built_in">this</span>.nowIndex % <span class="built_in">this</span>.imgNum)</span><br><span class="line">      .css(&#123; <span class="attr">backgroundColor</span>: <span class="built_in">this</span>.activeSpanColor &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  Slider.prototype.autoMove = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">    <span class="built_in">this</span>.time = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">this</span>.direction == <span class="string">&quot;left&quot;</span>) &#123;</span><br><span class="line">        $(<span class="string">&quot;.left-btn&quot;</span>, <span class="built_in">this</span>.wrap).trigger(<span class="string">&quot;click&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&quot;.right-btn&quot;</span>, <span class="built_in">this</span>.wrap).trigger(<span class="string">&quot;click&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, self.moveTime);</span><br><span class="line">  &#125;;</span><br><span class="line">  $.fn.extend(&#123;</span><br><span class="line">    slider: <span class="function"><span class="keyword">function</span> (<span class="params">option</span>) </span>&#123;</span><br><span class="line">      option.wrap = <span class="built_in">this</span>;</span><br><span class="line">      <span class="keyword">new</span> Slider(option);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>使用也很简单，只要在md文章中写入以下内容即可</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="code">    function tt()&#123;</span></span><br><span class="line"><span class="code">        $(&#x27;.demo&#x27;).slider(&#123;</span></span><br><span class="line"><span class="code">    imgList: [</span></span><br><span class="line"><span class="code">        &#123;</span></span><br><span class="line"><span class="code">            img: &#x27;https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/2a877ea5da1292c817cbc2a254c01c31.png&#x27;,</span></span><br><span class="line"><span class="code">            a: &#x27;跳转url地址&#x27;,</span></span><br><span class="line"><span class="code">        &#125;,</span></span><br><span class="line"><span class="code">        &#123;</span></span><br><span class="line"><span class="code">            img: &#x27;https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/5005109d1aa2ffd28984c2b02b8cbfbe.png&#x27;,</span></span><br><span class="line"><span class="code">            a: &#x27;跳转url地址&#x27;,</span></span><br><span class="line"><span class="code">        &#125;,</span></span><br><span class="line"><span class="code">        &#123;</span></span><br><span class="line"><span class="code">            img: &#x27;https://cdn.jsdelivr.net/gh/blogimg/picbed@master/2020/04/13/163a2ade4361d1ed705ed523091af67e.png&#x27;,</span></span><br><span class="line"><span class="code">            a: &#x27;跳转url地址&#x27;,</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code">    ], //图片的列表，a属性里面存放的是网络地址，img存放的是图片地址</span></span><br><span class="line"><span class="code">    width: &quot;100%&quot;, //图片的宽</span></span><br><span class="line"><span class="code">    height: 500, //图片的高</span></span><br><span class="line"><span class="code">    isAuto: false, //是否自动轮播</span></span><br><span class="line"><span class="code">    moveTime: 3000, //运动时间</span></span><br><span class="line"><span class="code">    direction: &#x27;right&#x27;, //轮播的方向</span></span><br><span class="line"><span class="code">    btnWidth: 30, //按钮的宽</span></span><br><span class="line"><span class="code">    btnHeight: 30, //按钮的高</span></span><br><span class="line"><span class="code">    spanWidth: 10, //span按钮的宽</span></span><br><span class="line"><span class="code">    spanHeight: 10, //span按钮的高</span></span><br><span class="line"><span class="code">    spanColor: &#x27;#fff&#x27;, //span按钮的颜色</span></span><br><span class="line"><span class="code">    activeSpanColor: &#x27;red&#x27;, //选中的span颜色</span></span><br><span class="line"><span class="code">    btnBackgroundColor: &#x27;rgba(0, 0, 0, 0.3)&#x27;, //两侧按钮的颜色</span></span><br><span class="line"><span class="code">    spanRadius: &#x27;50%&#x27;, //span按钮的圆角程度</span></span><br><span class="line"><span class="code">    spanMargin: 3, //span之间的距离</span></span><br><span class="line"><span class="code">&#125;)</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">    window.addEventListener(&#x27;DOMContentLoaded&#x27;,tt)</span></span><br><span class="line"><span class="code">&lt;/script&gt;</span></span><br><span class="line"><span class="code"> </span></span><br></pre></td></tr></table></figure><blockquote><p>代码解读：<code>&lt;div class=&quot;demo&quot;&gt;&lt;/div&gt;</code>用于下边JS代码定位元素用。如果改变class名，下边的JS选择器也需要做出对应的改变。</p><p>下边的Javascript代码用于生成轮播图。各项配置看注释即可。</p></blockquote><h3 id="Valine评论添加表情"><a href="#Valine评论添加表情" class="headerlink" title="Valine评论添加表情"></a>Valine评论添加表情</h3><p>自定义表情须知：</p><ul><li><code>valine.js</code> 版本需要 1.4.5 以上</li><li>主题作者已更新主题添加了自定义表情的字段</li><li>如果以上两点任意一点没有满足，需有自己动手满足以上两点的能力</li></ul><h2 id="如何导入表情"><a href="#如何导入表情" class="headerlink" title="如何导入表情"></a>如何导入表情</h2><p>官方提供的格式是 <code>js</code> 对象格式，应该作者们应该会保留。因此我提供的格式为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">&quot;图片名&quot;: &quot;图片链接&quot;,</span><br></pre></td></tr></table></figure><p>如果你使用的主题与我是同款主题，那么只需要将我提供的链接复制并粘贴到 <code>valine.json</code> 里（注意自己打上一对 <code>&#123;&#125;</code> 表情信息放括号里）即可。例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JSON</span><br><span class="line">&#123;</span><br><span class="line">    &quot;common_custom_1&quot; : &quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;blogimg&#x2F;picbed@master&#x2F;2020&#x2F;04&#x2F;19&#x2F;c3164053d300cc5cca5e4dc3311842dc.png&quot;,</span><br><span class="line">    &quot;common_custom_0&quot; : &quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;blogimg&#x2F;picbed@master&#x2F;2020&#x2F;04&#x2F;19&#x2F;6b5e768e524c8441ba66184bfdd86d4d.png&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="表情说明"><a href="#表情说明" class="headerlink" title="表情说明"></a>表情说明</h2><p>表情速查地址：<a href="https://www.antmoe.ml/">https://www.antmoe.ml/</a></p><p>表情仓库：<a href="https://github.com/blogimg/emotion">https://github.com/blogimg/emotion</a></p><p>所有图片均来自网友提供，或者网上收集。如有侵权，立即删除。</p><h2 id="在线css提供"><a href="#在线css提供" class="headerlink" title="在线css提供"></a>在线css提供</h2><ul><li><p>背景、滚动条、鼠标三合一</p><p>背景颜色及鼠标不单独提供，如需单独启动，请自行创建css并引用</p><p><a href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/custom.min.css">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/custom.min.css</a></p></li><li><p>单独页脚渐变</p><p><a href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/footer.min.css">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/footer.min.css</a></p></li><li><p>友链页面css</p><p><a href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/flink.min.css">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/flink.min.css</a></p></li><li><p>多种按钮</p><p><a href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/buttons.min.css">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/buttons.min.css</a></p></li></ul><h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>如果遇到什么问题例如：修改完成后样式不对、缺少文件（写文章时可能忘记加上）等问题可以在下方留言或者将问题发送到我的邮箱。我会在第一时间内帮助解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Valine配置</title>
      <link href="2020/11/18/002/"/>
      <url>2020/11/18/002/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://valine.js.org/">Valine</a> 是一款支持匿名的评论系统，已经集成到了 hexo 上面。<a href="https://deserts.io/valine-admin-document/">Valine Admin</a> 则是对 Valine 评论系统的拓展应用，可增强 Valine 的邮件通知功能。基于 Leancloud 的云引擎与云函数。可以提供邮件 <code>通知站长</code> 和 <code>@ 通知</code> 的功能，而且还支持自定义邮件通知模板。</p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><ul><li>在这之前你已经在你的 hexo 上部署好了 Valine</li><li>然后进入 <a href="https://leancloud.cn/dashboard/applist.html#/apps">Leancloud</a> 对应的 Valine 应用中。</li><li>点击 <code>云引擎 -&gt; 设置</code>填写代码库并保存]</li><li>在设置页面，设置环境变量以及 Web 二级域名。<br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209231807.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209231807.png" alt="img"></a><br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209231808.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209231808.png" alt="img"></a></li></ul><table><thead><tr><th align="center">变量</th><th align="center">示例</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">SITE_NAME</td><td align="center">Deserts</td><td align="center">必填] 博客名称</td></tr><tr><td align="center">SITE_URL</td><td align="center"><a href="https://panjunwen.com/">https://panjunwen.com</a></td><td align="center">[必填] 首页地址</td></tr><tr><td align="center">SMTP_SERVICE</td><td align="center">QQ</td><td align="center">[新版支持] 邮件服务提供商，支持 QQ、163、126、Gmail 以及 更多</td></tr><tr><td align="center">SMTP_USER</td><td align="center"><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td align="center">[必填] SMTP 登录用户</td></tr><tr><td align="center">SMTP_PASS</td><td align="center">ccxxxxxxxxch</td><td align="center">[必填] SMTP 登录密码 (QQ 邮箱需要获取独立密码)</td></tr><tr><td align="center">SENDER_NAME</td><td align="center">Deserts</td><td align="center">[必填] 发件人</td></tr><tr><td align="center">SENDER_EMAIL</td><td align="center"><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td align="center">[必填] 发件邮箱</td></tr><tr><td align="center">ADMIN_URL</td><td align="center"><a href="https://xxx.leanapp.cn/">https://xxx.leanapp.cn/</a></td><td align="center">[建议] Web 主机二级域名，用于自动唤醒</td></tr><tr><td align="center">BLOGGER_EMAIL</td><td align="center"><a href="mailto:xxxxx@gmail.com">xxxxx@gmail.com</a></td><td align="center">[可选] 博主通知收件地址，默认使用 SENDER_EMAIL</td></tr><tr><td align="center">AKISMET_KEY</td><td align="center">xxxxxxxxxxxx</td><td align="center">[可选] Akismet Key 用于垃圾评论检测，设为 MANUAL_REVIEW 开启人工审核，留空不使用反垃圾</td></tr><tr><td align="center">MAIL_SUBJECT</td><td align="center">见下文</td><td align="center">[可选]@通知邮件主题（标题）模板</td></tr><tr><td align="center">MAIL_TEMPLATE</td><td align="center">见下文</td><td align="center">[可选]@通知邮件内容模板</td></tr><tr><td align="center">MAIL_SUBJECT_ADMIN</td><td align="center">见下文</td><td align="center">[可选] 博主邮件通知主题模板</td></tr><tr><td align="center">MAIL_TEMPLATE_ADMIN</td><td align="center">见下文</td><td align="center">[可选] 博主邮件通知内容模板</td></tr></tbody></table><p><strong>参数解释</strong></p><hr><ul><li>ADMIN_URL：二级域名用于评论后台管理，如 <a href="https://xxxx.leanapp.cn/">https://xxxx.leanapp.cn</a> 。<br>Web 主机二级域名，用于自动唤醒，会默认分配给你一个二级域名（<code>云引擎 -&gt; 设置路径下</code>），当然你也可以绑定一个<strong>已备案</strong>的域名，如图：<br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209232739.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209232739.png" alt="img"></a></li></ul><p><strong>垃圾评论检测</strong></p><blockquote><p>Akismet (Automattic Kismet) 是应用广泛的一个垃圾留言过滤系统，其作者是大名鼎鼎的 WordPress 创始人 Matt Mullenweg，Akismet 也是 WordPress 默认安装的插件，其使用非常广泛，设计目标便是帮助博客网站来过滤留言 Spam。有了 Akismet 之后，基本上不用担心垃圾留言的烦恼了。<br>启用 Akismet 后，当博客再收到留言会自动将其提交到 Akismet 并与 Akismet 上的黑名单进行比对，如果名列该黑名单中，则该条留言会被标记为垃圾评论且不会发布。</p></blockquote><ul><li>AKISMET_KEY：如果还没有 Akismet Key，你可以去 <a href="https://akismet.com/development/">AKISMET FOR DEVELOPERS</a> 免费申请一个，此时你会获取一串 AKISMET API 密钥，填入变量值中；当 AKISMET_KEY 设为 MANUAL_REVIEW 时，开启人工审核模式；如果你不需要反垃圾评论，Akismet Key 环境变量可以忽略。</li><li>MAIL_SUBJECT: @通知邮件主题模板，请设置为: <code>$&#123;PARENT_NICK&#125;，您在$&#123;SITE_NAME&#125;上的评论收到了回复</code></li><li>MAIL_TEMPLATE：@通知邮件内容模板，请设置为:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Xml</span><br><span class="line">&lt;div style&#x3D;&quot;border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:&#39;Century Gothic&#39;,&#39;Trebuchet MS&#39;,&#39;Hiragino Sans GB&#39;,微软雅黑,&#39;Microsoft Yahei&#39;,Tahoma,Helvetica,Arial,&#39;SimSun&#39;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;&gt;&lt;div style&#x3D;&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;&gt;&lt;p style&#x3D;&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;&gt;您在&lt;a style&#x3D;&quot;text-decoration:none;color: #ffffff;&quot; href&#x3D;&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125;&lt;&#x2F;a&gt;上的留言有新回复啦！&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div style&#x3D;&quot;margin:40px auto;width:90%&quot;&gt;&lt;p&gt;$&#123;PARENT_NICK&#125; 同学，您曾在文章上发表评论：&lt;&#x2F;p&gt;&lt;div style&#x3D;&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;$&#123;PARENT_COMMENT&#125;&lt;&#x2F;div&gt;&lt;p&gt;$&#123;NICK&#125; 给您的回复如下：&lt;&#x2F;p&gt;&lt;div style&#x3D;&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;$&#123;COMMENT&#125;&lt;&#x2F;div&gt;&lt;p&gt;您可以点击&lt;a style&#x3D;&quot;text-decoration:none; color:#12addb&quot; href&#x3D;&quot;$&#123;POST_URL&#125;#comments&quot;&gt;查看回复的完整內容&lt;&#x2F;a&gt;，欢迎再次光临&lt;a style&#x3D;&quot;text-decoration:none; color:#12addb&quot;                href&#x3D;&quot;$&#123;SITE_URL&#125;&quot;&gt; $&#123;SITE_NAME&#125;&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;a:link&#123;text-decoration:none&#125;a:visited&#123;text-decoration:none&#125;a:hover&#123;text-decoration:none&#125;a:active&#123;text-decoration:none&#125;&lt;&#x2F;style&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ul><li>MAIL_SUBJECT_ADMIN: 博主邮件通知主题模板，请设置为: <code>$&#123;SITE_NAME&#125;上有新评论了</code></li><li>MAIL_TEMPLATE_ADMIN：博主邮件通知内容模板，请设置为:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Dust</span><br><span class="line">&lt;div style&#x3D;&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;&gt;&lt;h2 style&#x3D;&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;&gt;您在&lt;a style&#x3D;&quot;text-decoration:none;color: #12ADDB;&quot; href&#x3D;&quot;$&#123;SITE_URL&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;$&#123;SITE_NAME&#125;&lt;&#x2F;a&gt;上的文章有了新的评论&lt;&#x2F;h2&gt;&lt;p&gt;&lt;strong&gt;$&#123;NICK&#125;&lt;&#x2F;strong&gt;回复说：&lt;&#x2F;p&gt;&lt;div style&#x3D;&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&gt; $&#123;COMMENT&#125;&lt;&#x2F;div&gt;&lt;p&gt;您可以点击&lt;a style&#x3D;&quot;text-decoration:none; color:#12addb&quot; href&#x3D;&quot;$&#123;POST_URL&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;查看回复的完整內容&lt;&#x2F;a&gt;&lt;br&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><hr><ul><li>切换到部署标签页，分支使用 master，点击部署即可:<br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209234211.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209234211.png" alt="img"></a></li></ul><p>第一次会很慢，可能会出错。如果出现依赖错误，请勾选 <strong>下载最新依赖</strong></p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209234307.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209234307.png" alt="img"></a></p><ul><li>评论管理。访问设置的二级域名 https:// 二级域名.leanapp.cn/sign-up，注册管理员登录信息，如：<a href="https://xxxx.leanapp.cn/sign-up">https://xxxx.leanapp.cn/sign-up</a></li></ul><p>此后，可以通过 <code>https://二级域名.leanapp.cn/</code> 管理评论。</p><ul><li>定时任务设置<br>目前实现了两种云函数定时任务：(1) 自动唤醒，定时访问 Web APP 二级域名防止云引擎休眠；(2) 每天定时检查 24 小时内漏发的邮件通知。<strong>两个都要设置</strong></li></ul><p>进入云引擎 - 定时任务中，创建定时器，创建两个定时任务。</p><p>选择 self-wake 云函数，Cron 表达式为 <code>0 0/30 7-23 * * ?</code>，表示每天早 6 点到晚 23 点每隔 30 分钟访问云引擎，<code>ADMIN_URL</code> 环境变量务必设置正确：</p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209234835.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209234835.png" alt="img"></a></p><p>选择 resend-mails 云函数，Cron 表达式为 <code>0 0 8 * * ?</code> ，表示每天早 8 点检查过去 24 小时内漏发的通知邮件并补发：</p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209234935.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209234935.png" alt="img"></a></p><ul><li>添加定时器后记得点击启动方可生效。</li></ul><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209235059.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200209235059.png" alt="img"></a></p><ul><li>至此全部结束，可打开 https:// 二级域名.leanapp.cn/ 管理评论</li></ul>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
