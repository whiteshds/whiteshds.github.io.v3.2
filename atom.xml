<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>网络杀手</title>
  
  
  <link href="https://whiteshds.ml/atom.xml" rel="self"/>
  
  <link href="https://whiteshds.ml/"/>
  <updated>2020-12-10T13:36:54.463Z</updated>
  <id>https://whiteshds.ml/</id>
  
  <author>
    <name>whiteshds</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SEO|百度|自动提交|定时</title>
    <link href="https://whiteshds.ml/2021/04/14/039/"/>
    <id>https://whiteshds.ml/2021/04/14/039/</id>
    <published>2021-04-13T23:36:40.513Z</published>
    <updated>2020-12-10T13:36:54.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h2><p>首先说明下这是一个 hexo 的插件，和其他插件一样，只需要 <code>npm i</code> 即可安装。先说说我的需求：需求产生于建站之初，那时百度还搜索不到我的小康博客，因此借助 Leancloud 的环境搭建了一个每天定时提交的小程序，当时使用 django 框架进行的开发。后来由于各种原因，发现已经 server 500 了，不过不清楚原因，但无所谓了，因为我打算合理用 actions 进行重新开发。同样的出于原版的参考还是打算用 python 完成，但发现官网贴心的提供了一个 <code>curl</code> 命令提交。好吧，这就省下了很多事。</p><h2 id="此项目适合什么样的人群"><a href="#此项目适合什么样的人群" class="headerlink" title="此项目适合什么样的人群"></a>此项目适合什么样的人群</h2><ol><li><p>想要提高百度收录量</p><p>本人不打算扩展必应搜索，谷歌搜索等其他平台。因此在国内对于大多数人来说百度还是主力，而谷歌不需要你主动，他会自己找到你。</p></li><li><p>使用了持续集成服务</p><p>不适用于本地 <code>hexo d</code> 命令的人群，因此这个命令不会讲 GitHub 的配置文件添加进去。因此如果你没有使用持续集成服务，那么可以考虑使用持续集成或者进入 public 目录手动 git 提交。</p></li></ol><h2 id="插件如何使用"><a href="#插件如何使用" class="headerlink" title="插件如何使用"></a>插件如何使用</h2><ol><li><p>安装插件</p><p>在你博客的根目录打开命令行，安装插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">npm i hexo-baidupush</span><br></pre></td></tr></table></figure><p><a href="https://files.alexhchu.com/2020/10/01/35c1f5b0bd9fa.png"><img src="https://files.alexhchu.com/2020/10/01/35c1f5b0bd9fa.png" alt="image-20201001220758045"></a></p></li><li><p>接下来生成内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">hexo cl &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>你会发现生成的 public 目录中多了一个文件和一个目录</p><p><a href="https://files.alexhchu.com/2020/10/01/1ee93ebf13d7e.png"><img src="https://files.alexhchu.com/2020/10/01/1ee93ebf13d7e.png" alt="image-20201001222058845"></a></p><blockquote><p>如果没有，请检查插件是否成功安装。</p></blockquote></li><li><p>部署页面</p><p>此时的部署并不能使用 <code>hexo d</code> 命令，因为这个命令不能将<code>.github</code> 这个文件添加。因此只能手动添加。如果你在持续集成中使用了此命令，请尝试替换为如下命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">cd .&#x2F;public</span><br><span class="line">git init</span><br><span class="line">git config --global user.name &#39;name&#39; </span><br><span class="line">git config --global user.email &#39;yourEmail&#39;</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;Update&quot;</span><br><span class="line">git push --force --all 地址</span><br></pre></td></tr></table></figure><p>其中地址跟你环境有关，如果是 ssh 认证推送，那么请填写你的 ssh 仓库地址。如果是密钥推送，那么 GitHub 的密钥格式为 <code>https://TOKEN:地址</code>，例如：<code>https://aaaaa@github.com/tzki/tzki.github.io</code></p><blockquote><p>如果是本地 <code>hexo d</code> 用户可以参考上面命令做相同的操作。但这一定是繁琐的过程，建议更换持续集成或者放弃使用此插件。</p></blockquote></li><li><p>添加 TOKEN</p><p>这里使用的是你推送的仓库，不是源码仓库。例如：<code>https://github.com/tzki/tzki.github.io</code>。然后添加密钥。（如果没有使用过 actions，第一次需要开启，也就是点一下那个绿色的按钮。）</p><p><a href="https://files.alexhchu.com/2020/09/30/78782c5558d7d.png"><img src="https://files.alexhchu.com/2020/09/30/78782c5558d7d.png" alt="image-20200930190800396"></a></p><p><a href="https://files.alexhchu.com/2020/09/30/473c7772e13fb.png"><img src="https://files.alexhchu.com/2020/09/30/473c7772e13fb.png" alt="image-20200930190943296"></a></p></li><li><p>测试</p><p>接下来只需要对此仓库点个 star 即可看到有 actions 运行。</p><p><a href="https://files.alexhchu.com/2020/10/01/7baa52f3720bc.png"><img src="https://files.alexhchu.com/2020/10/01/7baa52f3720bc.png" alt="image-20201001223100700"></a></p></li><li><p>提交的频率</p><p>插件默认提交的频率是一天两次，分别为早上八点和晚上六点。如果你想修改那么可以再根目录的配置文件添加字段 <code>commit_cron</code> 进行配置，值采用 GitHub 的 cron 表达式。默认为 <code>0 0,10 * * *</code> 遵循 UTC 时间。举个例子：每天 8 点 (北京时间) 提交一次：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">commit_cron: 0 0 * * *</span><br></pre></td></tr></table></figure><blockquote><p>GitHub 的 cron 表达式没有秒这个单位，即第一位为分钟。</p></blockquote><p>当然这个配置是非必填项，不在配置文件写也不会引起报错的。</p></li></ol><h2 id="项目参考"><a href="#项目参考" class="headerlink" title="项目参考"></a>项目参考</h2><p>生成 url 部分代码参考插件了插件 <a href="https://www.npmjs.com/package/hexo-baidu-url-submit">hexo-baidu-url-submit</a>，没有直接使用而是搞一个新的，是因为考虑到了并不是每个人都装有这个插件，因此只能在自己的插件中集成这个功能即生成文章 URL 的文件。</p><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;项目说明&quot;&gt;&lt;a href=&quot;#项目说明&quot; class=&quot;headerlink&quot; title=&quot;项目说明&quot;&gt;&lt;/a&gt;项目说明&lt;/h2&gt;&lt;p&gt;首先说明下这是一个 hexo 的插件，和其他插件一样，只需要 &lt;code&gt;npm i&lt;/code&gt; 即可安装。先说说我的需求：需求产生于建站之初，那时百度还搜索不到我的小康博客，因此借助 Leancloud 的环境搭建了一个每天定时提交的小程序，当时使用 django 框架进行的开发。后来由于各种原因，发现已经 server 500 了，不过</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    <category term="SEO" scheme="https://whiteshds.ml/categories/HEXO/SEO/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>图床|picgo|typora</title>
    <link href="https://whiteshds.ml/2021/04/14/040/"/>
    <id>https://whiteshds.ml/2021/04/14/040/</id>
    <published>2021-04-13T23:36:40.513Z</published>
    <updated>2020-12-10T13:37:04.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>三个图床 —— 又拍云、GitHub（jsdelivr 加速）、阿里图床。（其实我以前一直用的是微博的图床）讲真，我觉得这个软件很不错。</p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p>我的 GitHub 用户名是 <code>blogimg</code> 我们首先是创建仓库。</p><ol><li><p>我创建的仓库名为 <code>HexoStaticFile1</code>，那么在 <code>PicGo</code> 里的仓库名就为 <code>blogimg/HexoStaticFile1</code>，格式是<code>用户名/仓库名</code></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213220633.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213220633.png" alt="img"></a></p></li><li><p>分支名写 master</p></li><li><p>获取 Token</p><ol><li><p>进入个人设置</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221009.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221009.png" alt="img"></a></p></li><li><p>点击 <code>Developer settings</code></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221304.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221304.png" alt="img"></a></p></li><li><p>点击左边的 <code>Personal access tokens</code> ，然后点击右边的 <code>Generate new token</code></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221443.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221443.png" alt="小康博客-2020/02/13/20200213221443"></a></p></li><li><p>Note 部分随便写即可，下边的权限把 <code>repo</code> 相关的打上勾即可。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221626.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213221626.png" alt="小康博客-2020/02/13/20200213221626"></a></p></li><li><p>接下来便会生成一个 token，将它复制下来，因为一旦刷新网页，你将见不到这个 token 了。</p></li></ol></li><li><p>存储路径</p><p>根据自己的情况，但记住，最后一定写 <code>\</code> 不然软件会将他与文件名拼接</p></li><li><p>自定义域名</p><p>这里写 <code>jsdeliver</code> 的，不然没办法起到 cdn 加速的效果。</p><p><code>https://cdn.jsdelivr.net/gh/用户名/仓库名</code></p><p>用户名与仓库名按照自己的实际情况填写，例如我的 <code>https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1</code></p></li></ol><h3 id="GitHub-图片上传失败"><a href="#GitHub-图片上传失败" class="headerlink" title="GitHub 图片上传失败"></a>GitHub 图片上传失败</h3><p>由于不可描述的原因，在大陆使用 PicGo+GitHub 上传图片时总会遇到上传失败的问题。不过不要慌，GitHub+Jsdeliver 这么好的东西，用还是要用的。</p><p>因此我的解决方案就是：<a href="https://github.com/yumusb/autoPicCdn">autoPicCdn</a>+ 免费的国外虚拟主机。当然了，如果你有服务器（国外的）那么也是可以的。</p><p>如果你不愿意自己找虚拟主机，那么可以使用 <a href="https://chuibi.cn/">chuibi 图床</a>。</p><ol><li><p>登录账号（GitHub 账号）</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/a64f33d4f0fca20b4858906626ea3f3a.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/a64f33d4f0fca20b4858906626ea3f3a.png" alt="image-20200601080023571"></a></p></li><li><p>接下来再次点击自己，进行设置</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/b4832a540705b961a3b6c4ec054bbd12.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/b4832a540705b961a3b6c4ec054bbd12.png" alt="image-20200601080306882"></a></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/3776fe4a3f5c3d7e3f9a537cb5957c79.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/3776fe4a3f5c3d7e3f9a537cb5957c79.png" alt="image-20200601080407714"></a></p></li><li><p>填写完毕后，刷新页面即可看到你的接口信息。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/45fafff05a2150f675c6e8e0464f1a44.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/45fafff05a2150f675c6e8e0464f1a44.png" alt="image-20200601080444977"></a></p><p>温馨提示：地址泄露意味着别人也可以用你的接口了！</p></li><li><p>接下来在 PICGO 安装插件即可完成操作了。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/653cbf72856e16ee88fdd833f3da2ffa.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/653cbf72856e16ee88fdd833f3da2ffa.png" alt="image-20200601081417256"></a></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/059c4fb8084542866957477bb97efe12.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/01/059c4fb8084542866957477bb97efe12.png" alt="image-20200601081506842"></a></p></li></ol><p>服务器 / 虚拟主机 一定要是国外的。否则还是上传失败很正常。</p><p>思路很简单，首先 clone 项目到自己本地，然后编辑 <code>up.php</code> 文件，修改对应需要修改的参数。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">define(&quot;REPO&quot;,&quot;testforapi&quot;);&#x2F;&#x2F;必须是下面用户名下的公开仓库</span><br><span class="line">define(&quot;USER&quot;,&quot;yumusb&quot;);&#x2F;&#x2F;必须是当前GitHub用户名</span><br><span class="line">define(&quot;MAIL&quot;,&quot;yumusb@foxmail.com&quot;);&#x2F;&#x2F;</span><br><span class="line">define(&quot;TOKEN&quot;,&quot;YourToken&quot;);</span><br><span class="line">## 数据库配置（添加了统计上传文件功能，使用mysql存储）</span><br><span class="line">$database &#x3D; array(</span><br><span class="line">  &#39;dbname&#39; &#x3D;&gt; &#39;pic&#39;,</span><br><span class="line">  &#39;host&#39; &#x3D;&gt; &#39;localhost&#39;,</span><br><span class="line">  &#39;port&#39; &#x3D;&gt; 3306,</span><br><span class="line">  &#39;user&#39; &#x3D;&gt; &#39;pic&#39;,</span><br><span class="line">  &#39;pass&#39; &#x3D;&gt; &#39;123456&#39;,</span><br><span class="line">  );</span><br><span class="line">$table &#x3D; &#39;remote_imgs&#39;; &#x2F;&#x2F;存放数据表名字</span><br></pre></td></tr></table></figure><p>虚拟机或服务器如何使用这里不过多介绍。</p><p>接下来，便可以白嫖 GitHub 的图床了。</p><ol><li><p>在 picgo 的插件里下载 <code>web-uploader</code> 插件。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/d0314981d14e50240d89746c56785e1e.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/d0314981d14e50240d89746c56785e1e.png" alt="img"></a></p></li><li><p>配置插件</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/9090f0ff00f18e564967fdd333cfff1e.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/09/9090f0ff00f18e564967fdd333cfff1e.png" alt="img"></a></p><table><thead><tr><th align="center">参数配置</th><th align="center">值</th></tr></thead><tbody><tr><td align="center">API 地址</td><td align="center">你的 <code>up.php</code> 文件的地址。</td></tr><tr><td align="center">POST 参数名</td><td align="center">pic</td></tr><tr><td align="center">JSON 路径</td><td align="center">data.url</td></tr></tbody></table><blockquote><p><code>up.php</code> 文件地址就是你的服务器 / 虚拟主机绑定的域名 +<code>/up.php</code>。例如：我的虚拟主机的域名为 <code>https://www.antmoe.com/</code> 那么 API 的地址就是 <code>https://www.antmoe.com/up.php</code></p></blockquote></li></ol><h2 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h2><p>因为又拍云是国内的平台，且全为中文。因此不详细说明了。</p><p>又拍云首先要创建一个云存储。然后绑定上自己的域名。</p><p>至于操作员，在账户管理中可以添加操作员。</p><h2 id="阿里图床"><a href="#阿里图床" class="headerlink" title="阿里图床"></a>阿里图床</h2><p>这里使用阿里图床主要是利用了第三方的插件及第三方的接口。</p><p>插件是 <code>web-uploader</code>，软件里可以直接下载。然后配置我直接给出，按照我的填入即可。</p><table><thead><tr><th align="center">API 地址</th><th align="center"><code>https://api.abcyun.co/api/picbed/index/type/ali/token/5d8f31cf6a8ab</code></th></tr></thead><tbody><tr><td align="center">POST 参数名</td><td align="center"><code>image</code></td></tr><tr><td align="center">JSON 路径</td><td align="center"><code>url.ali</code></td></tr><tr><td align="center">自定义请求体</td><td align="center"><code>&#123;&quot;type&quot;:&quot;ali&quot;&#125;</code></td></tr></tbody></table><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213222645.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/02/13/20200213222645.png" alt="小康博客-2020/02/13/20200213222645"></a></p><h3 id="PicGo-设置"><a href="#PicGo-设置" class="headerlink" title="PicGo 设置"></a>PicGo 设置</h3><ol><li><p>PicGo 的版本必须是 2.2.0 及以上。</p></li><li><p>激活 PicGo-Server</p><p>打开 PicGo 详细页面，进入 PicGo 设置–设置 Server</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314091619.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314091619.png" alt="img"></a></p><p><strong>这里的监听地址就是默认的 127.0.0.1，端口修改为 36677</strong>，否则会上传失败。</p></li></ol><h3 id="Typora-配置"><a href="#Typora-配置" class="headerlink" title="Typora 配置"></a>Typora 配置</h3><p>对于 Typora 也是有版本要求的，大家也看到了，这个功能是 0.9.84 才加入的，所以 Typora 的版本也得是 0.9.84 及以上。</p><ol><li><p>Typora 版本 0.9.84 及以上。</p></li><li><p>设置（左上角文件 -&gt; 偏好设置 -&gt; 图像）</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314092035.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile1/imgbed/2020/03/14/20200314092035.png" alt="img"></a></p></li><li><p>然后左下角有一个验证上传，一般情况下这里就已经好了。</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;三个图床 —— 又拍云、GitHub（jsdelivr 加速）、阿里图床。（其实我以前一直用的是微博的图床）讲真，我觉得这个软件很不错。&lt;/p&gt;
&lt;h2 id=&quot;Github&quot;&gt;&lt;a href=&quot;#Github&quot; class=&quot;headerlink&quot; title=&quot;Github&quot;&gt;&lt;/a&gt;Github&lt;/h2&gt;&lt;p&gt;我的 GitHub 用户名是 &lt;code&gt;</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    <category term="搭建" scheme="https://whiteshds.ml/categories/HEXO/%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>图标|阿里|HEXO</title>
    <link href="https://whiteshds.ml/2021/04/14/037/"/>
    <id>https://whiteshds.ml/2021/04/14/037/</id>
    <published>2021-04-13T23:36:40.512Z</published>
    <updated>2020-12-10T13:36:38.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立项目"><a href="#建立项目" class="headerlink" title="建立项目"></a>建立项目</h2><p>进入<a href="https://www.iconfont.cn/">阿里 iconfont</a> 寻找你想要添加的图标，并且添加到项目。</p><ol><li><p>找到你想添加的图标（如果你不会找，可以直接关掉此文了。）</p><p>将你想要添加的图标点击 “添加入库” 按钮，也就是图中圈起来的图标。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ffe05d917e7e7f6912471f81d44c3afc.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ffe05d917e7e7f6912471f81d44c3afc.png" alt="img"></a></p></li><li><p>添加至项目</p><p>点击右上角小购物车图标。这里会看到你刚刚添加的所有图标</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ddc14a937d765841e7f1e87d36ac88d2.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/ddc14a937d765841e7f1e87d36ac88d2.png" alt="img"></a></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/990c0c665c0bb11570e505ea17d0958d.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/990c0c665c0bb11570e505ea17d0958d.png" alt="img"></a></p><p>接下来就是为你的图标创建一个项目，名称随意。创建完成后你将看到如下页面</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b7dadf552b7bf993bf46d5631cd510e2.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b7dadf552b7bf993bf46d5631cd510e2.png" alt="img"></a></p></li><li><p>生成在线链接</p><p>（font class 方式）点击 Font class 按钮然后生成链接。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/31456e515509653eebbf27aae2ce2340.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/31456e515509653eebbf27aae2ce2340.png" alt="img"></a></p><p>如果使用 svg，那么请点击 symbol，然后生成链接。</p></li><li><p>查看链接</p><p>点击链接会看到一些 css 代码。将鼠标下拉会看到刚才你添加的样式。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/4f7510d102ef1cccde74eda5af19066d.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/4f7510d102ef1cccde74eda5af19066d.png" alt="img"></a></p></li></ol><h2 id="引入字体及样式"><a href="#引入字体及样式" class="headerlink" title="引入字体及样式"></a>引入字体及样式</h2><p>引入字体样式其实就是把刚才的链接引入到博客中，可以直接使用阿里的链接，也可以下载下来。为了方便方便修改，我建议下载下来放到本地。</p><p>同样以 butterfly 主题为例：</p><ol><li><p>下载</p><p>右键另存为即可。路径选择 <code>\themes\Butterfly\source\css\</code></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6b3a115689c68c76e253f9026417c581.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6b3a115689c68c76e253f9026417c581.png" alt="img"></a></p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/61aa8325e05cf90b7a245eb8208ce487.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/61aa8325e05cf90b7a245eb8208ce487.png" alt="img"></a></p></li><li><p>引入文件</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f420836b60e215374063cc9d77fe019a.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f420836b60e215374063cc9d77fe019a.png" alt="image-20200507182051871"></a></p></li></ol><blockquote><p>不同主题引入外部 css/js 的方法都不相同，请参考你所使用主题引入外部样式的设置。</p></blockquote><blockquote><p>如果你不想自己创建而是想直接使用博主的，那么可以直接把链接换成：<a href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/iconfont.min.css%E3%80%82">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/iconfont.min.css。</a></p><p>图标库预览：<a href="https://www.antmoe.com/iconfont/">https://www.antmoe.com/iconfont/</a></p></blockquote><ol><li><p>如果使用 svg</p><p>如果使用 svg 图标，那么需要在 css 样式表中加入如下样式。如果使用 FontClass，那么可以无视这一步</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">.icon &#123;</span><br><span class="line">  width: 1em;</span><br><span class="line">  height: 1em;</span><br><span class="line">  vertical-align: -0.15em;</span><br><span class="line">  fill: currentColor;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="开始使用-iconfont"><a href="#开始使用-iconfont" class="headerlink" title="开始使用 iconfont"></a>开始使用 iconfont</h2><p>上述步骤全部完成后，那么接下来可以使用小图标了。</p><h3 id="个人信息栏的小图标–font-字体方式"><a href="#个人信息栏的小图标–font-字体方式" class="headerlink" title="个人信息栏的小图标–font 字体方式"></a>个人信息栏的小图标–font 字体方式</h3><p>这里直接写阿里提供的样式即可。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YAML</span><br><span class="line">social:</span><br><span class="line">  iconfont  icon-bilibili: https:&#x2F;&#x2F;www.bilibili.com</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6c062002fe38a75d0c034cf21dbd57fb.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/6c062002fe38a75d0c034cf21dbd57fb.png" alt="img"></a></p><p>小图标如果你觉得小，可以自行修改。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">.icon-bilibili:before &#123;</span><br><span class="line">  content: &quot;\e600&quot;;</span><br><span class="line">  &#x2F;* 修改颜色 *&#x2F;</span><br><span class="line">  color: blue;</span><br><span class="line">  &#x2F;* 修改大小 *&#x2F;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样修改会导致所有这个图标的大小都会变动。建议的方式是重新写一个 css，为其添加规则。设置时只需要多加一个 class 即可例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">.icon-bilibili:before &#123;</span><br><span class="line">  content: &quot;\e600&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 卡片处小图标 *&#x2F;</span><br><span class="line">.card_icon &#123;</span><br><span class="line">  &#x2F;* 修改颜色 *&#x2F;</span><br><span class="line">  color: blue;</span><br><span class="line">  &#x2F;* 修改大小 *&#x2F;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置时的方法：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YAML</span><br><span class="line">social:</span><br><span class="line">  iconfont  icon-bilibili card_icon: https:&#x2F;&#x2F;www.bilibili.com</span><br></pre></td></tr></table></figure><h3 id="个人信息栏的小图标–svg-方式"><a href="#个人信息栏的小图标–svg-方式" class="headerlink" title="个人信息栏的小图标–svg 方式"></a>个人信息栏的小图标–svg 方式</h3><p>svg 也称多色图标，由于不是通过类名，而是使用了 svg 标签，因此需要通过脚本的方式动态插入。例如：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">$(&quot;.card-info-social-icons&quot;).append(</span><br><span class="line">    &#39;&lt;a class&#x3D;&quot;social-icon&quot; href&#x3D;&quot;点击图标后的地址（须完整）&quot; target&#x3D;&quot;_blank&quot;&gt;&lt;svg class&#x3D;&quot;icon&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;use xlink:href&#x3D;&quot;#icon-xxxx&quot;&gt;&lt;&#x2F;use&gt;&lt;&#x2F;svg&gt;&lt;&#x2F;a&gt;&#39;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>其中两个空分别表示地址，例如 <code>https://www.antmoe.com</code>, 另外一个为图标名，例如<code>#icon-QQ</code>，名字根据你自己库来写，不是随便写的。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/28/a129e0c19478551aecfc33a3c8b62c08.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/06/28/a129e0c19478551aecfc33a3c8b62c08.png" alt="image-20200628211324448"></a></p><h3 id="标题美化处的修改"><a href="#标题美化处的修改" class="headerlink" title="标题美化处的修改"></a>标题美化处的修改</h3><p>butterfly 主题的标题标签前有一个图标，如何为其更改为阿里 iconfont 呢？</p><p>通过开发者工具我们可以看到主题为前边小图标的样式：</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b85e949eb81ec018a03746be1bf41007.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/b85e949eb81ec018a03746be1bf41007.png" alt="img"></a></p><p>因此我们改动起来也很简单，只需要在刚才我们的 <code>iconfont.css</code> 文件中覆盖这个样式即可。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CSS</span><br><span class="line">#article-container h1:before,</span><br><span class="line">#article-container h2:before,</span><br><span class="line">#article-container h3:before,</span><br><span class="line">#article-container h4:before,</span><br><span class="line">#article-container h5:before,</span><br><span class="line">#article-container h6:before &#123;</span><br><span class="line">  font-family: &quot;iconfont&quot;;</span><br><span class="line">  content: &quot;\e6a0&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时就能看到图标已经发生了变化。</p><p><a href="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f4993de6d089f3232aad38ea1bcd8f1f.png"><img src="https://cdn.jsdelivr.net/gh/blogimg/picbed@latest/2020/05/07/f4993de6d089f3232aad38ea1bcd8f1f.png" alt="img"></a></p><blockquote><p>这里解释下代码，方便大家自行决策如何修改。</p><p><code>font-family</code> 是必须写的，因为作者的代码只写了 FontAwesome，因此需要覆盖他。</p><p><code>content</code> 可以不在 css 中写，这样可以在配置文件里定义内容。如果写了，会导致配置文件的设置失效。颜色设置同理.</p></blockquote><h3 id="其他修改"><a href="#其他修改" class="headerlink" title="其他修改"></a>其他修改</h3><p>不管是什么主题，不管是什么样式。只要你想使用阿里的图标，必须改变其标签的字体为 <code>iconfont</code>, 接下来可以用伪类方式，也可以使用 class 方式。</p><p>文章中使用 svg 也很简单，首先需要确保全局引用了 js。如果没有，在文中局部引入也是可以的。</p><p>接下来只需要在需要的地方插入 svg 标签即可。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTML</span><br><span class="line">&lt;svg class&#x3D;&quot;icon&quot; aria-hidden&#x3D;&quot;true&quot;&gt;</span><br><span class="line">  &lt;use xlink:href&#x3D;&quot;#icon-xxx&quot;&gt;&lt;&#x2F;use&gt;</span><br><span class="line">&lt;&#x2F;svg&gt;</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>如果你遇到了如下问题，请向上查找解决方案.</p><ol><li><p>修改图标大小及颜色</p></li><li><p>图标不显示 (无效果)</p><p>这种原因很多种，但如果你稍有常识就不会遇到.</p></li><li><p>不知道在哪改</p><p>在你创建的 css 文件中.</p><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;建立项目&quot;&gt;&lt;a href=&quot;#建立项目&quot; class=&quot;headerlink&quot; title=&quot;建立项目&quot;&gt;&lt;/a&gt;建立项目&lt;/h2&gt;&lt;p&gt;进入&lt;a href=&quot;https://www.iconfont.cn/&quot;&gt;阿里 iconfont&lt;/a&gt; 寻找你想要添加的图标，并且添加到项目。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;找到你想添加的图标（如果你不会找，可以直接关掉此文了。）&lt;/p&gt;
&lt;p&gt;将你想要添加的图标点击 “添加入库” 按钮，也就是图中圈起来的图标。&lt;/p&gt;
&lt;p&gt;&lt;a hr</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>commit|符号|表情</title>
    <link href="https://whiteshds.ml/2021/04/14/038/"/>
    <id>https://whiteshds.ml/2021/04/14/038/</id>
    <published>2021-04-13T23:36:40.512Z</published>
    <updated>2020-12-10T13:36:46.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在使用命令行提交 <code>commit</code> 消息时，可以通过<code>:关键字:</code> 的方式进行使用表情。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">git commit -m &quot;:tada: Initial commit&quot;</span><br></pre></td></tr></table></figure><h2 id="表情列表"><a href="#表情列表" class="headerlink" title="表情列表"></a>表情列表</h2><p>点击每行最右侧的复制会复制当前行的 emoji 代码。</p><table><thead><tr><th align="center">emoji</th><th align="center">emoji 代码</th><th align="center">commit 说明</th><th align="center">复制</th></tr></thead><tbody><tr><td align="center">🎨 (调色板)</td><td align="center"><code>:art:</code></td><td align="center">改进代码结构 / 代码格式</td><td align="center">复制</td></tr><tr><td align="center">⚡️ (闪电) 🐎 (赛马)</td><td align="center"><code>:zap:</code> <code>:racehorse:</code></td><td align="center">提升性能</td><td align="center">复制</td></tr><tr><td align="center">🔥 (火焰)</td><td align="center"><code>:fire:</code></td><td align="center">移除代码或文件</td><td align="center">复制</td></tr><tr><td align="center">🐛 (bug)</td><td align="center"><code>:bug:</code></td><td align="center">修复 bug</td><td align="center">复制</td></tr><tr><td align="center">🚑 (急救车)</td><td align="center"><code>:ambulance:</code></td><td align="center">重要补丁</td><td align="center">复制</td></tr><tr><td align="center">✨ (火花)</td><td align="center"><code>:sparkles:</code></td><td align="center">引入新功能</td><td align="center">复制</td></tr><tr><td align="center">📝 (备忘录)</td><td align="center"><code>:memo:</code></td><td align="center">撰写文档</td><td align="center">复制</td></tr><tr><td align="center">🚀 (火箭)</td><td align="center"><code>:rocket:</code></td><td align="center">部署功能</td><td align="center">复制</td></tr><tr><td align="center">💄 (口红)</td><td align="center"><code>:lipstick:</code></td><td align="center">更新 UI 和样式文件</td><td align="center">复制</td></tr><tr><td align="center">🎉 (庆祝)</td><td align="center"><code>:tada:</code></td><td align="center">初次提交</td><td align="center">复制</td></tr><tr><td align="center">✅ (白色复选框)</td><td align="center"><code>:white_check_mark:</code></td><td align="center">更新测试</td><td align="center">复制</td></tr><tr><td align="center">🔒 (锁)</td><td align="center"><code>:lock:</code></td><td align="center">修复安全问题</td><td align="center">复制</td></tr><tr><td align="center">🍎 (苹果)</td><td align="center"><code>:apple:</code></td><td align="center">修复 macOS 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🐧 (企鹅)</td><td align="center"><code>:penguin:</code></td><td align="center">修复 Linux 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🏁 (旗帜)</td><td align="center"><code>:checkered_flag:</code></td><td align="center">修复 Windows 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🤖（机器人）</td><td align="center"><code>:robot:</code></td><td align="center">修复 Android 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🍏 (绿苹果)</td><td align="center"><code>:green_apple:</code></td><td align="center">修复 iOS 下的问题</td><td align="center">复制</td></tr><tr><td align="center">🔖 (书签)</td><td align="center"><code>:bookmark:</code></td><td align="center">发行 / 版本标签</td><td align="center">复制</td></tr><tr><td align="center">🚨 (警车灯)</td><td align="center"><code>:rotating_light:</code></td><td align="center">移除 linter 警告</td><td align="center">复制</td></tr><tr><td align="center">🚧 (施工)</td><td align="center"><code>:construction:</code></td><td align="center">工作进行中</td><td align="center">复制</td></tr><tr><td align="center">👷 (工人)</td><td align="center"><code>:construction_worker:</code></td><td align="center">添加 CI 构建系统</td><td align="center">复制</td></tr><tr><td align="center">💚 (绿心)</td><td align="center"><code>:green_heart:</code></td><td align="center">修复 CI 构建问题</td><td align="center">复制</td></tr><tr><td align="center">⬆️ (上升箭头)</td><td align="center"><code>:arrow_up:</code></td><td align="center">升级依赖</td><td align="center">复制</td></tr><tr><td align="center">⬇️ (下降箭头)</td><td align="center"><code>:arrow_down:</code></td><td align="center">降级依赖</td><td align="center">复制</td></tr><tr><td align="center">📌 (图钉)</td><td align="center"><code>:pushpin:</code></td><td align="center">将依赖项固定到特定版本</td><td align="center">复制</td></tr><tr><td align="center">📈 (上升趋势图)</td><td align="center"><code>:chart_with_upwards_trend:</code></td><td align="center">添加分析或跟踪代码</td><td align="center">复制</td></tr><tr><td align="center">♻️ （回收）</td><td align="center"><code>:recycle:</code></td><td align="center">重构代码</td><td align="center">复制</td></tr><tr><td align="center">🐳 (鲸鱼)</td><td align="center"><code>:whale:</code></td><td align="center">Docker 相关工作</td><td align="center">复制</td></tr><tr><td align="center">🌐 (带子午线的地球仪)</td><td align="center"><code>:globe_with_meridians:</code></td><td align="center">国际化与本地化</td><td align="center">复制</td></tr><tr><td align="center">➕ (加号)</td><td align="center"><code>:heavy_plus_sign:</code></td><td align="center">增加一个依赖</td><td align="center">复制</td></tr><tr><td align="center">➖ (减号)</td><td align="center"><code>:heavy_minus_sign:</code></td><td align="center">减少一个依赖</td><td align="center">复制</td></tr><tr><td align="center">🔧 (扳手)</td><td align="center"><code>:wrench:</code></td><td align="center">修改配置文件</td><td align="center">复制</td></tr><tr><td align="center">🔨 (锤子)</td><td align="center"><code>:hammer:</code></td><td align="center">重大重构</td><td align="center">复制</td></tr><tr><td align="center">✏️ (铅笔)</td><td align="center"><code>:pencil2:</code></td><td align="center">修复 typo</td><td align="center">复制</td></tr><tr><td align="center">💩 (粑粑…)</td><td align="center"><code>:hankey:</code></td><td align="center">写了辣鸡代码需要优化</td><td align="center">复制</td></tr><tr><td align="center">⏪ (倒带)</td><td align="center"><code>:rewind:</code></td><td align="center">恢复更改</td><td align="center">复制</td></tr><tr><td align="center">🔀 (交叉向右的箭头)</td><td align="center"><code>:twisted_rightwards_arrows:</code></td><td align="center">合并分支</td><td align="center">复制</td></tr><tr><td align="center">📦 (包裹)</td><td align="center"><code>:package:</code></td><td align="center">更新编译的文件或包</td><td align="center">复制</td></tr><tr><td align="center">👽 (外星人)</td><td align="center"><code>:alien:</code></td><td align="center">由于外部 API 更改而更新代码</td><td align="center">复制</td></tr><tr><td align="center">🚚 (货车)</td><td align="center"><code>:truck:</code></td><td align="center">移动或者重命名文件</td><td align="center">复制</td></tr><tr><td align="center">📄 (正面朝上的页面)</td><td align="center"><code>:page_facing_up:</code></td><td align="center">增加或更新许可证书</td><td align="center">复制</td></tr><tr><td align="center">💥 (爆炸)</td><td align="center"><code>:boom:</code></td><td align="center">引入突破性的变化</td><td align="center">复制</td></tr><tr><td align="center">🍱 (铅笔)</td><td align="center"><code>:bento:</code></td><td align="center">增加或更新资源</td><td align="center">复制</td></tr><tr><td align="center">👌 (OK 手势)</td><td align="center"><code>:ok_hand:</code></td><td align="center">由于代码审查更改而更新代码</td><td align="center">复制</td></tr><tr><td align="center">♿️ (轮椅)</td><td align="center"><code>:wheelchair:</code></td><td align="center">改善无障碍交互</td><td align="center">复制</td></tr><tr><td align="center">💡 (灯泡)</td><td align="center"><code>:bulb:</code></td><td align="center">给代码添加注释</td><td align="center">复制</td></tr><tr><td align="center">🍻 (啤酒)</td><td align="center"><code>:beers:</code></td><td align="center">醉醺醺地写代码…</td><td align="center">复制</td></tr><tr><td align="center">💬 (消息气泡)</td><td align="center"><code>:speech_balloon:</code></td><td align="center">更新文本文档</td><td align="center">复制</td></tr><tr><td align="center">🗃 (卡片文件盒)</td><td align="center"><code>:card_file_box:</code></td><td align="center">执行与数据库相关的更改</td><td align="center">复制</td></tr><tr><td align="center">🔊 (音量大)</td><td align="center"><code>:loud_sound:</code></td><td align="center">增加日志</td><td align="center">复制</td></tr><tr><td align="center">🔇 (静音)</td><td align="center"><code>:mute:</code></td><td align="center">移除日志</td><td align="center">复制</td></tr><tr><td align="center">👥 (轮廓中的半身像)</td><td align="center"><code>:busts_in_silhouette:</code></td><td align="center">增加贡献者</td><td align="center">复制</td></tr><tr><td align="center">🚸 (孩童通行)</td><td align="center"><code>:children_crossing:</code></td><td align="center">优化用户体验、可用性</td><td align="center">复制</td></tr><tr><td align="center">🏗 (建筑建造)</td><td align="center"><code>:building_construction:</code></td><td align="center">结构变动</td><td align="center">复制</td></tr><tr><td align="center">📱 (iPhone)</td><td align="center"><code>:iphone:</code></td><td align="center">做响应式设计</td><td align="center">复制</td></tr><tr><td align="center">🤡 (小丑脸)</td><td align="center"><code>:clown_face:</code></td><td align="center">嘲弄事物（直译，这个没明白）</td><td align="center">复制</td></tr><tr><td align="center">🥚 (鸡蛋)</td><td align="center"><code>:egg:</code></td><td align="center">增加彩蛋</td><td align="center">复制</td></tr><tr><td align="center">🙈 (看不见邪恶)</td><td align="center"><code>:see_no_evil:</code></td><td align="center">增加或更改 gitignore</td><td align="center">复制</td></tr><tr><td align="center">📸 (照相机闪光灯)</td><td align="center"><code>:camera_flash:</code></td><td align="center">增加或更新截图</td><td align="center">复制</td></tr><tr><td align="center">⚗️ (蒸馏器)</td><td align="center"><code>:alembic:</code></td><td align="center">尝试新东西</td><td align="center">复制</td></tr><tr><td align="center">🔍 (放大镜)</td><td align="center"><code>:mag:</code></td><td align="center">SEO 优化</td><td align="center">复制</td></tr><tr><td align="center">☸️ (船的方向盘)</td><td align="center"><code>:wheel_of_dharma:</code></td><td align="center">关于 Kubernetes 的工作</td><td align="center">复制</td></tr><tr><td align="center">🏷 (标签)</td><td align="center"><code>:label:</code></td><td align="center">增加类型（FLow、Typescript）</td><td align="center">复制</td></tr></tbody></table><p>Copy to clipboard</p><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;p&gt;在使用命令行提交 &lt;code&gt;commit&lt;/code&gt; 消息时，可以通过&lt;code&gt;:关键字:&lt;/code&gt; 的方式进行使用表情。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BASH&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>QQ在线|Hexo|字体|post|page|Note</title>
    <link href="https://whiteshds.ml/2021/04/14/034/"/>
    <id>https://whiteshds.ml/2021/04/14/034/</id>
    <published>2021-04-13T23:36:40.511Z</published>
    <updated>2020-12-10T13:36:07.631Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h1><p>修改 <code>themes\Butterfly\source\css\var.styl</code> 找到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Gams</span><br><span class="line">&#x2F;&#x2F; Global Variables</span><br><span class="line">$font-size &#x3D; 14px</span><br></pre></td></tr></table></figure><p>我修改成了 16px</p><h1 id="qq-在线"><a href="#qq-在线" class="headerlink" title="qq 在线"></a>qq 在线</h1><ol><li>打开<a href="https://shang.qq.com/v3/widget.html">此链接</a></li><li>然后点击立即免费开通服务就好了，进入到下面的界面可以复制其代码生成图片<br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200211140211.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200211140211.png" alt="img"></a></li><li>在 <code>butterfly.yml</code> 文件中找到</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Less</span><br><span class="line">social:</span><br><span class="line">  fa fa-github: https:&#x2F;&#x2F;github.com&#x2F;imgyh</span><br><span class="line">  fa fa-envelope: mailto:gyhnice@163.com</span><br><span class="line">  fa fa-qq: https:&#x2F;&#x2F;wpa.qq.com&#x2F;msgrd?v&#x3D;3&amp;uin&#x3D;1974355683&amp;site&#x3D;qq&amp;menu&#x3D;yes</span><br><span class="line">  fa fa-rss: &#x2F;atom.xml</span><br></pre></td></tr></table></figure><p>修改 <code>fa-qq</code> 这一项为你自己的链接就可以了</p><h1 id="POST-Front-matter-写法"><a href="#POST-Front-matter-写法" class="headerlink" title="POST Front_matter 写法"></a>POST Front_matter 写法</h1><h2 id="post-和-page-模板"><a href="#post-和-page-模板" class="headerlink" title="post 和 page 模板"></a>post 和 page 模板</h2><p>在博客根目录下的 <code>scaffolds</code> 文件夹中修改 <code>post.md</code> 和 <code>page.md</code></p><h3 id="page-md-模板"><a href="#page-md-模板" class="headerlink" title="page.md 模板"></a>page.md 模板</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">comments:true</span><br><span class="line">description:</span><br><span class="line">top_img: </span><br><span class="line">katex:true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="post-md-模板"><a href="#post-md-模板" class="headerlink" title="post.md 模板"></a>post.md 模板</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories: </span><br><span class="line">description: </span><br><span class="line">top_img: </span><br><span class="line">comments: true</span><br><span class="line">cover:</span><br><span class="line">toc: true</span><br><span class="line">toc_number: true</span><br><span class="line">copyright: true</span><br><span class="line">katex: false</span><br><span class="line">top: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="tags-写法"><a href="#tags-写法" class="headerlink" title="tags 写法"></a>tags 写法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Subunit</span><br><span class="line">tags:</span><br><span class="line">- tags1</span><br><span class="line">- tags2</span><br></pre></td></tr></table></figure><h3 id="categories-写法"><a href="#categories-写法" class="headerlink" title="categories 写法"></a>categories 写法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Css</span><br><span class="line">单个分类，了解一下:</span><br><span class="line">categories:</span><br><span class="line">- Linux</span><br><span class="line">并列分类，了解一下：</span><br><span class="line">categories:</span><br><span class="line">- [Linux]</span><br><span class="line">- [Tools]</span><br><span class="line"></span><br><span class="line">并列+子分类([]中linux是父分类，hexo是子分类)，再了解一下：</span><br><span class="line">categories:</span><br><span class="line">- [Linux, Hexo]</span><br><span class="line">- [Tools, PHP]</span><br></pre></td></tr></table></figure><h1 id="解决代码块渲染问题"><a href="#解决代码块渲染问题" class="headerlink" title="解决代码块渲染问题"></a>解决代码块渲染问题</h1><p>在代码块中输入 html 代码，hexo 会把 html 代码渲染出来，而我只想看到代码是什么样子。<br>解决方法：只需要安装 <code>cheerio</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Angelscript</span><br><span class="line">sudo npm install cheerio@0.22.0 --save</span><br></pre></td></tr></table></figure><h1 id="代码框高亮，显示行号"><a href="#代码框高亮，显示行号" class="headerlink" title="代码框高亮，显示行号"></a>代码框高亮，显示行号</h1><p>在站点配置文件 <code>_config.yml</code> 中修改这一项</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: true</span><br><span class="line">  tab_replace: &#39;&#39;</span><br><span class="line">  wrap: true</span><br><span class="line">  hljs: false</span><br></pre></td></tr></table></figure><h1 id="coding-申请-ssl-认证失败"><a href="#coding-申请-ssl-认证失败" class="headerlink" title="coding 申请 ssl 认证失败"></a>coding 申请 ssl 认证失败</h1><p>Coding 的 SSL/TLS 证书每次申请只能使用 90 天</p><p>申请 SSL/TLS 证书时，要将指向 Coding 的线路类型设为为默认，然后把指向到 Github 的域名关掉，就可以成功申请了。</p><p>因为 Coding 申请 SSL/TLS 证书需要通过 Let’s Encrypt 的 HTTP 方式验证域名所有权。因为 Let’s Encrypt 是国外网络，如果不更改域名设置，验证域名所有权时不能正确指向到 Coding 而是指向到 Github，所以就会导致申请失败。</p><h1 id="引用同站点的文章"><a href="#引用同站点的文章" class="headerlink" title="引用同站点的文章"></a>引用同站点的文章</h1><p>在写文章的过程中，有时候需要引用站内的其他文章。可以通过内置的标签插件的语法 post_link 来实现引用。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Django</span><br><span class="line">&#123;% post_link 文章文件名（不要后缀） 文章标题（可选） %&#125;</span><br></pre></td></tr></table></figure><p>举例 引用 <a href="http://hello.md/">Hello.md</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Django</span><br><span class="line">&#123;% post_link Hello %&#125;</span><br><span class="line">或者</span><br><span class="line">&#123;% post_link Hello 你好 %&#125;</span><br></pre></td></tr></table></figure><h1 id="Note-Bootstrap-Callout"><a href="#Note-Bootstrap-Callout" class="headerlink" title="Note (Bootstrap Callout)"></a>Note (Bootstrap Callout)</h1><p>用法</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Routeros</span><br><span class="line">&#123;% note [class] [no-icon] %&#125; </span><br><span class="line">Any content (support inline tags too.io). </span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class] : default | primary | success | info | warning | danger. </span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br><span class="line">Routeros</span><br><span class="line">&#123;% note default %&#125; </span><br><span class="line">default提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125; </span><br><span class="line">primary提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125; </span><br><span class="line">success提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125; </span><br><span class="line">info提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125; </span><br><span class="line">warning提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125; </span><br><span class="line">danger提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;字体大小&quot;&gt;&lt;a href=&quot;#字体大小&quot; class=&quot;headerlink&quot; title=&quot;字体大小&quot;&gt;&lt;/a&gt;字体大小&lt;/h1&gt;&lt;p&gt;修改 &lt;code&gt;themes\Butterfly\source\css\var.styl&lt;/code&gt; 找到&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Gams&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>弹窗|点击文字效果</title>
    <link href="https://whiteshds.ml/2021/04/14/035/"/>
    <id>https://whiteshds.ml/2021/04/14/035/</id>
    <published>2021-04-13T23:36:40.511Z</published>
    <updated>2020-12-10T13:36:13.823Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引入鼠标点击效果"><a href="#引入鼠标点击效果" class="headerlink" title="引入鼠标点击效果"></a>引入鼠标点击效果</h4><p>在<code>.vuepress\public\js</code>文件夹下创建<code>MouseClickEffect.js</code>文件，填入以下代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">var a_idx &#x3D; 0;</span><br><span class="line"></span><br><span class="line">function getRandom(max, min) &#123;</span><br><span class="line">    return Math.floor(Math.random() * (max - min + 1) + min);</span><br><span class="line">&#125;</span><br><span class="line">jQuery(document).ready(function ($) &#123;</span><br><span class="line">    $(&quot;body&quot;).click(function (e) &#123;</span><br><span class="line">        var a &#x3D; new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;, &quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;);</span><br><span class="line">        var $i &#x3D; $(&quot;&lt;span&#x2F;&gt;&quot;).text(a[a_idx]);</span><br><span class="line">        a_idx &#x3D; (a_idx + 1) % a.length;</span><br><span class="line">        var x &#x3D; e.pageX,</span><br><span class="line">            y &#x3D; e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            &quot;z-index&quot;: 999999999999999999999999999999999999999999999999999999999999999999999,</span><br><span class="line">            &quot;top&quot;: y - 20,</span><br><span class="line">            &quot;left&quot;: x,</span><br><span class="line">            &quot;position&quot;: &quot;absolute&quot;,</span><br><span class="line">            &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class="line">            &quot;color&quot;: &#96;rgb($&#123;getRandom(255,0)&#125;,$&#123;getRandom(255,0)&#125;,$&#123;getRandom(255,0)&#125;)&#96;,</span><br><span class="line">            &quot;user-select&quot;: &#39;none&#39;,</span><br><span class="line">            &quot;cursor&quot;: &#39;default&#39;</span><br><span class="line">        &#125;);</span><br><span class="line">        $(&quot;body&quot;).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">                &quot;top&quot;: y - 180,</span><br><span class="line">                &quot;opacity&quot;: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            1500,</span><br><span class="line">            function () &#123;</span><br><span class="line">                $i.remove();</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>然后在主题配置文件<code>config.js</code>下的<code>head</code>引入以上js，这里的jquery必须引入，鼠标点击代码才能生效</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">head: [</span><br><span class="line">  &#x2F;&#x2F; 网页标签栏图标</span><br><span class="line">  [&#39;link&#39;, &#123; rel: &#39;icon&#39;, href: &#39;&#x2F;vuepress&#x2F;favicon.ico&#39; &#125;],</span><br><span class="line">  &#x2F;&#x2F; 移动栏优化</span><br><span class="line">  [&#39;meta&#39;, &#123; name: &#39;viewport&#39;, content: &#39;width&#x3D;device-width,initial-scale&#x3D;1,user-scalable&#x3D;no&#39; &#125;],</span><br><span class="line">  &#x2F;&#x2F; 引入jquery</span><br><span class="line">  [&quot;script&quot;, &#123;</span><br><span class="line">    &quot;language&quot;: &quot;javascript&quot;,</span><br><span class="line">    &quot;type&quot;: &quot;text&#x2F;javascript&quot;,</span><br><span class="line">    &quot;src&quot;: &quot;https:&#x2F;&#x2F;cdn.bootcdn.net&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;3.5.1&#x2F;jquery.min.js&quot;</span><br><span class="line">  &#125;],</span><br><span class="line">  &#x2F;&#x2F; 引入鼠标点击脚本</span><br><span class="line">  [&quot;script&quot;, &#123;</span><br><span class="line">    &quot;language&quot;: &quot;javascript&quot;,</span><br><span class="line">    &quot;type&quot;: &quot;text&#x2F;javascript&quot;,</span><br><span class="line">    &quot;src&quot;: &quot;&#x2F;js&#x2F;MouseClickEffect.js&quot;</span><br><span class="line">  &#125;]</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="文章中引入样式和脚本"><a href="#文章中引入样式和脚本" class="headerlink" title="文章中引入样式和脚本"></a>文章中引入样式和脚本</h3><p>有时，你可以只想在当前页面应用一些 <code>JavaScript</code> 或者 <code>CSS</code>，在这种情况下，你可以直接在 <code>Markdown</code> 文件中使用原生的 或者 标签，它们将会从编译后的 HTML 文件中提取出来，并作为生成的 Vue 单文件组件的和标签。</p><p><strong>输入</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Html</span><br><span class="line">&lt;p class&#x3D;&quot;demo&quot; :class&#x3D;&quot;$style.example&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;style module&gt;</span><br><span class="line">.example &#123;</span><br><span class="line">  color: #41b883;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&#39;slot-key&#39;],</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    document.querySelector(&#96;.$&#123;this.$style.example&#125;&#96;)</span><br><span class="line">      .textContent &#x3D; &#39;这个块是被内联的脚本渲染的，样式也采用了内联样式。&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><p>这个块是被内联的脚本渲染的，样式也采用了内联样式。</p><h3 id="公告弹窗插件"><a href="#公告弹窗插件" class="headerlink" title="公告弹窗插件"></a>公告弹窗插件</h3><h4 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h4><p><a href="https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200715224550.png"><img src="https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200715224550.png" alt="img"></a></p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><a href="https://www.npmjs.com/package/@vuepress-yard/vuepress-plugin-window">https://www.npmjs.com/package/@vuepress-yard/vuepress-plugin-window</a></p><h2 id="修改源码"><a href="#修改源码" class="headerlink" title="修改源码"></a>修改源码</h2><p>不到<strong>迫不得已</strong>还是不要修改源码，我主要是因为使用分组的侧边栏后，如果嵌套的内容标题下，不加这个<strong>path</strong>参数(如果加了每次点侧边栏标题都会转跳，非常难受)，颜色就会偏淡，通过上文中<code>index.styl</code>无论如何也不能加深</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Js</span><br><span class="line">children: [</span><br><span class="line">    &#123;</span><br><span class="line">        title: &#39;Matplotlib&#39;,   &#x2F;&#x2F; 必要的</span><br><span class="line">        &#x2F;&#x2F;path: &#39;&#39;,  &#x2F;&#x2F; 可选的, 标题的跳转链接，应为绝对路径且必须存在</span><br><span class="line">        collapsable: true, &#x2F;&#x2F; 可选的, 默认值是 true,</span><br><span class="line">        children: [</span><br><span class="line">            &#39;Python&#x2F;Matplotlib&#x2F;Matplotlib绘图指南&#39;,</span><br><span class="line">            &#39;webc&#x2F;01.Requests使用技巧&#39;,</span><br><span class="line">            &#39;webc&#x2F;02.数据存入Excel&#39;,</span><br><span class="line">        ]</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200711174018.png"><img src="https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200711174018.png" alt="img"></a></p><p>通过全局搜索，终于找到在源码文件<code>\xxx\blog\node_modules\vuepress-theme-reco\components\SidebarGroup.vue</code>中发现问题，罪魁祸首就是这个<code>opacity 0.5</code>，致此，将其改成1即可，虽然简单，但是对于有页面强迫症的我，确实是极大的舒适。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Stylus</span><br><span class="line">.sidebar-group</span><br><span class="line">  background var(--background-color)</span><br><span class="line">  .sidebar-group</span><br><span class="line">    padding-left 0.5em</span><br><span class="line">  &amp;:not(.collapsable)</span><br><span class="line">    .sidebar-heading:not(.clickable)</span><br><span class="line">      cursor auto</span><br><span class="line">      color var(--text-color)</span><br><span class="line">  &#x2F;&#x2F; refine styles of nested sidebar groups</span><br><span class="line">  &amp;.is-sub-group</span><br><span class="line">    padding-left 0</span><br><span class="line">    &amp; &gt; .sidebar-heading</span><br><span class="line">      font-size 0.95em</span><br><span class="line">      line-height 1.4</span><br><span class="line">      font-weight normal</span><br><span class="line">      padding-left 2rem</span><br><span class="line">      &amp;:not(.clickable)</span><br><span class="line">        opacity 0.5</span><br><span class="line">    &amp; &gt; .sidebar-group-items</span><br><span class="line">      padding-left 1rem</span><br><span class="line">      &amp; &gt; li &gt; .sidebar-link</span><br><span class="line">        font-size: 0.95em;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;引入鼠标点击效果&quot;&gt;&lt;a href=&quot;#引入鼠标点击效果&quot; class=&quot;headerlink&quot; title=&quot;引入鼠标点击效果&quot;&gt;&lt;/a&gt;引入鼠标点击效果&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;.vuepress\public\js&lt;/code&gt;文件夹下创建&lt;code&gt;MouseClickEffect.js&lt;/code&gt;文件，填入以下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span </summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>镜像|加速</title>
    <link href="https://whiteshds.ml/2021/04/14/036/"/>
    <id>https://whiteshds.ml/2021/04/14/036/</id>
    <published>2021-04-13T23:36:40.511Z</published>
    <updated>2020-12-10T13:36:30.244Z</updated>
    
    <content type="html"><![CDATA[<h3 id="GitHub-Clone"><a href="#GitHub-Clone" class="headerlink" title="GitHub Clone"></a>GitHub Clone</h3><p>通过HTTPS协议Clone仓库的话，可能会遇到速度很慢的情况。</p><p>根据经验，在慢的时候中断Clone捎带片刻重复命令的话，你可能会得到正常速度，这种偷鸡的策略适合于小小仓库。</p><p>对于大型仓库，改走SSH协议进行clone的话，走到正常速度的几率较大，但此时的速度相较于HTTPS而言通常会有所损耗。</p><h4 id="修改-hosts-文件"><a href="#修改-hosts-文件" class="headerlink" title="修改 hosts 文件"></a>修改 hosts 文件</h4><p>但下面还有一种较为费事的方法，通过修改 hosts 文件来完成提速，无需科学也无需代理加速也无需镜像加速（GitHub是不太可能有镜像的）。具体来说请接下去阅读：</p><p>首先在 <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 查询这三个域名的地址：</p><ol><li><a href="http://github.com/">github.com</a></li><li><a href="http://assets-cdn.github.com/">assets-cdn.github.com</a></li><li><a href="http://github.global.ssl.fastly.net/">github.global.ssl.fastly.net</a></li></ol><p>然后按照查询的结果填写到 /etc/hosts 中，windows用户请查找 %WINDIR%/system32/drivers/etc/hosts 文件。请注意修改 hosts 文件通常需要 sudo 权限 或者管理员权限。修改内容如同下面：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">140.82.118.3    github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">185.199.111.153 assets-cdn.github.com</span><br><span class="line">185.199.108.153 assets-cdn.github.com</span><br><span class="line">185.199.110.153 assets-cdn.github.com</span><br><span class="line">151.101.113.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><p>如果你有国外的服务器，也可以通过dig指令来查找：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">$ dig github.com +short</span><br><span class="line">140.82.118.3</span><br></pre></td></tr></table></figure><p>修改 hosts 文件能够起效的原因有赖于IP未被封禁。但实际上这个并不一定如此，封禁是多种手段同时采用的，此外、不同省份地区的不同运营商的具体动作也会有点区别。</p><p>比较根本的方法还是两种，一是在国外VPS直接clone，然后rsync到本机；二是git走SSH协议且启用代理。</p><h4 id="Git-SSH协议代理"><a href="#Git-SSH协议代理" class="headerlink" title="Git SSH协议代理"></a>Git SSH协议代理</h4><p>git走SSH协议时，可以在 <code>$HOME/.ssh/config</code> 中为其指定特别约定：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">host github.com</span><br><span class="line">  User git</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  identityFile ~&#x2F;.ssh&#x2F;git&#x2F;id_rsa</span><br><span class="line">  ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p</span><br></pre></td></tr></table></figure><p>在这里，定制了免密码时所用的SSH私钥 <code>~/.ssh/git/id_rsa</code>，以及通过 <code>ProxyCommand</code> 指定了转发 git SSH 流量到 <code>127.0.0.1:1080</code> SOCKS5 代理服务器上。</p><h4 id="Git-HTTPS协议代理"><a href="#Git-HTTPS协议代理" class="headerlink" title="Git HTTPS协议代理"></a>Git HTTPS协议代理</h4><p>值得注意的是，如果是使用 Git https 协议的话，你需要指定 <code>HTTPS_PROXY</code> 环境变量到一个 HTTP 代理，从而转发流量。根据我的经验，在这个时候提供一个诸如 <code>socks://127.0.0.1:1080</code> 的 SOCKS4/5 代理，得到的效果会非常有限，不如将该代理包装为 HTTP 后再使用。</p><p>如果不想使用 <code>HTTPS_PROXY</code> 环境变量，Git 允许在其全局配置文件 <code>$HOME/.gitconfig</code> 中指定特定主机或者所有主机的专用代理：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">[http &quot;https:&#x2F;&#x2F;skia.googlesource.com&quot;]</span><br><span class="line">proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">[https &quot;https:&#x2F;&#x2F;skia.googlesource.com&quot;]</span><br><span class="line">proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">[http &quot;https:&#x2F;&#x2F;googlesource.com&quot;]</span><br><span class="line">proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">[https &quot;https:&#x2F;&#x2F;googlesource.com&quot;]</span><br><span class="line">proxy &#x3D; http:&#x2F;&#x2F;127.0.0.1:8080</span><br></pre></td></tr></table></figure><p>综合比较起来，Git 走 SSH 协议且采用一个很好的 SOCKS5 服务器的话，会相当顺利，很难遇到各色怪现象。</p><h4 id="生活充满美好"><a href="#生活充满美好" class="headerlink" title="生活充满美好"></a>生活充满美好</h4><p>我不应该耗费精力在如何拿到开发资源上，对吗？</p><p>对的。一台国外的VPS，美国、日本、香港都是被推荐的地点，在那里下载或者拖到目标内容，无论是 GitHub 还是 golang 的内容，然后 rsync 到本地，看似很复杂，然而往往可以在10min 之内搞定一切事情，胜似在本机上折腾 proxy 8h。</p><blockquote><p>Nothing serious, only explodes without reason.</p></blockquote><h3 id="Docker-CE"><a href="#Docker-CE" class="headerlink" title="Docker CE"></a>Docker CE</h3><p>Docker CE 的具体加速办法有很多种，然而各种版本的本质都是一样的，一般来说你需要找到 docker daemon 的配置文件 <code>/etc/docker/daemon.json</code>，然后修改它像这样：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;insecure-registries&quot;: [</span><br><span class="line">    &quot;registry.mirrors.aliyuncs.com&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;debug&quot;: true,</span><br><span class="line">  &quot;experimental&quot;: false,</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https:&#x2F;&#x2F;mirror.ccs.tencentyun.com&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;hub-mirror.c.163.com&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;dockerhub.azk8s.cn&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;reg-mirror.qiniu.com&quot;,</span><br><span class="line">    &quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你在这个文件中自定义了其他项目，或者这个文件中已经存在其他定义，请注意保持。</p><p>参考：<a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file">https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file</a></p><p>附加说明：</p><table><thead><tr><th>镜像加速器</th><th>镜像加速器地址</th><th>其它加速？</th></tr></thead><tbody><tr><td><a href="https://docker-cn.com/registry-mirror">Docker 中国官方镜像</a></td><td><code>https://registry.docker-cn.com</code></td><td>Docker Hub</td></tr><tr><td><a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy">Azure 中国镜像</a></td><td><code>https://dockerhub.azk8s.cn</code></td><td>Docker Hub、GCR、Quay</td></tr><tr><td><a href="https://mirrors.ustc.edu.cn/help/dockerhub.html">科大镜像站</a></td><td><code>https://docker.mirrors.ustc.edu.cn</code></td><td>Docker Hub、<a href="https://github.com/ustclug/mirrorrequest/issues/91">GCR</a>、<a href="https://github.com/ustclug/mirrorrequest/issues/135">Quay</a></td></tr><tr><td><a href="https://kirk-enterprise.github.io/hub-docs/#/user-guide/mirror">七牛云</a></td><td><code>https://reg-mirror.qiniu.com</code></td><td>Docker Hub、GCR、Quay</td></tr><tr><td><a href="https://c.163yun.com/hub">网易云</a></td><td><code>https://hub-mirror.c.163.com</code></td><td>Docker Hub</td></tr><tr><td><a href="https://cloud.tencent.com/document/product/457/9113">腾讯云</a></td><td><code>https://mirror.ccs.tencentyun.com</code></td><td>Docker Hub</td></tr></tbody></table><h3 id="Alpine-Apk"><a href="#Alpine-Apk" class="headerlink" title="Alpine Apk"></a>Alpine Apk</h3><p>清华提供一种Apk源加速方式：<a href="https://mirror.tuna.tsinghua.edu.cn/help/alpine/">https://mirror.tuna.tsinghua.edu.cn/help/alpine/</a></p><p>在终端输入以下命令以替换TUNA镜像源： <code>sed -i &#39;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&#39; /etc/apk/repositories</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">sed -i &#39;s&#x2F;dl-cdn.alpinelinux.org&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;g&#39; &#x2F;etc&#x2F;apk&#x2F;repositories</span><br></pre></td></tr></table></figure><p>制作 Docker 镜像时，这是很有用的，节约生命真的是美德。</p><h3 id="Android-SDK"><a href="#Android-SDK" class="headerlink" title="Android SDK"></a>Android SDK</h3><p>国内有多家组织提供 Android SDK的镜像缓存，甚至个人也可以很容易地建立这样的缓存，如果你有国内访问速度很好的国外服务器的话。</p><p>但是，随着时间推移，现在这些镜像基本上都已失效了。</p><p>取而代之的是，目前，Android的官方源是可以直连的，且能达到正常速度，所以还是赶紧滴做点负责任的app出来吧，不要只是会矽肺或者偷偷上传神马的。</p><h3 id="Arch-Linux-Pacman"><a href="#Arch-Linux-Pacman" class="headerlink" title="Arch Linux Pacman"></a>Arch Linux Pacman</h3><p>清华提供一种 Arch Linux 软件仓库加速方式：<a href="https://mirror.tuna.tsinghua.edu.cn/help/archlinux/">https://mirror.tuna.tsinghua.edu.cn/help/archlinux/</a></p><p>编辑 /etc/pacman.d/mirrorlist， 在文件的最顶端添加： <code>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</code></p><p>更新软件包缓存： <code>sudo pacman -Syy</code></p><h3 id="Flutter-amp-Dart-Pub"><a href="#Flutter-amp-Dart-Pub" class="headerlink" title="Flutter &amp; Dart Pub"></a>Flutter &amp; Dart Pub</h3><p>flutter 官网有专门的页面讲述加速问题：</p><p><a href="https://flutter.dev/community/china">https://flutter.dev/community/china</a></p><h4 id="Flutter-镜像安装帮助"><a href="#Flutter-镜像安装帮助" class="headerlink" title="Flutter 镜像安装帮助"></a>Flutter 镜像安装帮助</h4><p>Flutter 是一款跨平台的移动应用开发框架，由 Google 开源。用 Flutter 开发的应用可以直接编译成 ARM 代码运行在 Android 和 iOS 系统上。</p><p>可以使用清华镜像：<a href="https://mirror.tuna.tsinghua.edu.cn/help/flutter/">https://mirror.tuna.tsinghua.edu.cn/help/flutter/</a></p><p>Flutter 安装时需要从 Google Storage 下载文件，如您的网络访问 Google 受阻，建议使用本镜像。使用方法为设置环境变量 <code>FLUTTER_STORAGE_BASE_URL</code>，并指向 TUNA 镜像站。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">$ export FLUTTER_STORAGE_BASE_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;flutter&quot;</span><br></pre></td></tr></table></figure><p>若希望长期使用 TUNA 镜像：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">$ echo &#39;export FLUTTER_STORAGE_BASE_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;flutter&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p>此外 Flutter 开发中还需要用到 Dart 语言的包管理器 Pub，其镜像使用方法参见<a href="https://mirror.tuna.tsinghua.edu.cn/help/dart-pub/">Pub 镜像安装帮助</a>。</p><h3 id="Go-Modules"><a href="#Go-Modules" class="headerlink" title="Go Modules"></a>Go Modules</h3><p>使用 Golang v1.11 以上，为你的项目启用 Go Modules 功能，然后就可以使用 GOPROXY 环境变量来透明地使用镜像代理。</p><p>比较著名的大陆加速器为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">export GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn</span><br><span class="line"># Windows 应该使用 set GOPROXY&#x3D;xxxx 语法</span><br></pre></td></tr></table></figure><p>然后 <code>go mod download</code> 以及 <code>go mod tidy</code> 就足够快了。</p><p>如果你想搭建私服，可以遵循 Go Modules 的 API 规范自己实现一个代理服务器，也可以使用开源的 <a href="https://github.com/gomods/athens">athens</a> 项目自建一个服务器。</p><p>如果使用 Golang 1.13 以上版本的话，以下语法可用：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">export GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn,https:&#x2F;&#x2F;goproxy.io,https:&#x2F;&#x2F;gocenter.i</span><br><span class="line">o,direct</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p>关于中国的 <a href="http://goproxy.cn/">goproxy.cn</a>：<a href="https://juejin.im/post/5d8ee2db6fb9a04e0b0d9c8b">干货满满的Go Modules 和goproxy.cn - 掘金</a></p><p>关于 go 1.13 的 Modules：<a href="https://colobu.com/2019/09/23/review-go-module-again/">Go module 再回顾| 鸟窝</a></p><p>关于 <a href="https://github.com/gomods/athens">athens</a> 实现以及 Go Modules Communicated Protocol: <a href="https://www.speechmatics.com/wp-content/uploads/2019/07/Go-modules-and-project-Athens.pdf">Go modules and project Athens - Speechmatics</a>, Athens Official Site: <a href="https://docs.gomods.io/%E3%80%82">https://docs.gomods.io/。</a></p><p>关于 Go Modules 的通讯协议：<a href="https://blog.cyeam.com/golang/2018/09/27/athens">为Go module 搭建私服</a> 以及 <a href="https://docs.gomods.io/design/">The Design of Athens</a>：</p><ol><li><a href="https://docs.gomods.io/design/proxy">Proxy internals</a> - basics of the Athens proxy architecture and major features</li><li><a href="https://docs.gomods.io/design/communication">Communication flow</a> - how the Athens proxy interacts with the outside world to fetch and store code, respond to user requests, and so on</li></ol><h3 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h3><p>Gradle的配置文件为<code>~/.gradle/init.gradle</code>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">allprojects &#123;</span><br><span class="line">repositories &#123;</span><br><span class="line">maven &#123;</span><br><span class="line">url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&#x2F;&#39;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">buildscript &#123;</span><br><span class="line">repositories &#123;</span><br><span class="line">maven &#123;</span><br><span class="line">url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&#x2F;&#39;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下的镜像可以选用</p><ul><li>华为：<a href="https://mirrors.huaweicloud.com/repository/maven/">https://mirrors.huaweicloud.com/repository/maven/</a></li><li>网易：<a href="https://mirrors.163.com/maven/repository/maven-public/">https://mirrors.163.com/maven/repository/maven-public/</a></li></ul><h3 id="Gem-和-CocoaPods"><a href="#Gem-和-CocoaPods" class="headerlink" title="Gem 和 CocoaPods"></a>Gem 和 CocoaPods</h3><h4 id="替换-Ruby-源"><a href="#替换-Ruby-源" class="headerlink" title="替换 Ruby 源"></a>替换 Ruby 源</h4><p>首先是 gem 和 ruby 的源应该被替换</p><h5 id="移除现有的Ruby镜像"><a href="#移除现有的Ruby镜像" class="headerlink" title="移除现有的Ruby镜像"></a>移除现有的Ruby镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">$ gem sources --remove https:&#x2F;&#x2F;rubygems.org</span><br></pre></td></tr></table></figure><h5 id="添加国内最新镜像"><a href="#添加国内最新镜像" class="headerlink" title="添加国内最新镜像"></a>添加国内最新镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">$ gem sources -a https:&#x2F;&#x2F;gems.ruby-china.com</span><br></pre></td></tr></table></figure><h5 id="查看当前镜像"><a href="#查看当前镜像" class="headerlink" title="查看当前镜像"></a>查看当前镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">$ gem sources -l</span><br></pre></td></tr></table></figure><h4 id="加速-Cocoapods"><a href="#加速-Cocoapods" class="headerlink" title="加速 Cocoapods"></a>加速 Cocoapods</h4><p>几种加速方法，可能需要自己实际测试那种效果最好。</p><h5 id="gitee镜像"><a href="#gitee镜像" class="headerlink" title="gitee镜像"></a>gitee镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">pod repo remove master   </span><br><span class="line">pod repo add master https:&#x2F;&#x2F;gitee.com&#x2F;mirrors&#x2F;CocoaPods-Specs   </span><br><span class="line">pod repo update</span><br></pre></td></tr></table></figure><h5 id="清华镜像"><a href="#清华镜像" class="headerlink" title="清华镜像"></a>清华镜像</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">pod repo remove master   </span><br><span class="line">pod repo add master https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;CocoaPods&#x2F;Specs.git   </span><br><span class="line">pod repo update</span><br></pre></td></tr></table></figure><p>对于 Cocoapods 新的版本，需要使用如下的方法：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">pod repo remove master</span><br><span class="line">cd ~&#x2F;.cocoapods&#x2F;repos</span><br><span class="line">git clone https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;CocoaPods&#x2F;Specs.git master</span><br></pre></td></tr></table></figure><h5 id="你的-xcode-工程中如果有Podfile的话，请修改加入下面的行："><a href="#你的-xcode-工程中如果有Podfile的话，请修改加入下面的行：" class="headerlink" title="你的 xcode 工程中如果有Podfile的话，请修改加入下面的行："></a>你的 xcode 工程中如果有Podfile的话，请修改加入下面的行：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ruby</span><br><span class="line">source &#39;https:&#x2F;&#x2F;gitee.com&#x2F;mirrors&#x2F;CocoaPods-Specs.git&#39;</span><br><span class="line">source &#39;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;CocoaPods&#x2F;Specs.git&#39;</span><br></pre></td></tr></table></figure><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p>macOS 中都会安装 Homebrew，但 <code>brew update</code> 可能会很慢。加速的办法是替换现有的上游：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">git -C &quot;$(brew --repo)&quot; remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;brew.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew&#x2F;core)&quot; remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;homebrew-core.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew&#x2F;cask)&quot; remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;homebrew-cask.git</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><h4 id="复原"><a href="#复原" class="headerlink" title="复原"></a>复原</h4><p><em>(感谢Snowonion Lee提供说明)</em></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">git -C &quot;$(brew --repo)&quot; remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;brew.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew&#x2F;core)&quot; remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-core.git</span><br><span class="line"></span><br><span class="line">git -C &quot;$(brew --repo homebrew&#x2F;cask)&quot; remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-cask.git</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><p>以上内容从清华开源上复制：<a href="https://mirror.tuna.tsinghua.edu.cn/help/homebrew/">Homebrew 镜像使用帮助</a></p><p>如果想阻止 brew 指令运行时总是尝试去自动更新，可以设置环境变量：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># forbit autoupdate on homebrew installing</span><br><span class="line">export HOMEBREW_NO_AUTO_UPDATE&#x3D;1</span><br></pre></td></tr></table></figure><h4 id="Pub-镜像安装帮助"><a href="#Pub-镜像安装帮助" class="headerlink" title="Pub 镜像安装帮助"></a>Pub 镜像安装帮助</h4><p><a href="https://pub.dartlang.org/">Pub</a> 是 Dart 官方的包管理器。跨平台的前端应开发 框架 <a href="https://flutter.dev/">Flutter</a> 也基于 Dart 并且可以使用大部分 Pub 中的 库。</p><p>如果希望通过 TUNA 的 pub 镜像安装软件，只需要设置 <a href="https://www.dartlang.org/tools/pub/environment-variables">PUB_HOSTED_URL</a> 这个环境变量指向 <a href="https://mirrors.tuna.tsinghua.edu.cn/dart-pub/">https://mirrors.tuna.tsinghua.edu.cn/dart-pub/</a> 即可。</p><p>以 bash 为例，临时使用 TUNA 的镜像来安装依赖：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">$ PUB_HOSTED_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;dart-pub&#x2F;&quot; pub get # pub</span><br><span class="line">$ PUB_HOSTED_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;dart-pub&#x2F;&quot; flutter packages get # flutter</span><br></pre></td></tr></table></figure><p>若希望长期使用 TUNA 镜像：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">$ echo &#39;export PUB_HOSTED_URL&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;dart-pub&#x2F;&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><h4 id="采用aliyun镜像"><a href="#采用aliyun镜像" class="headerlink" title="采用aliyun镜像"></a>采用aliyun镜像</h4><p>编辑 <code>$HOME/.m2/settings.xml</code>，找到 <code>&lt;mirrors&gt;</code> 小节，添加如下内容：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Xml</span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-public&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun public&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-central&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun central&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;central&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-spring&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun spring&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;spring&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-spring-plugin&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun spring-plugin&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;spring-plugin&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-apache-snapshots&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun apache-snapshots&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;apache-snapshots&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-google&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun google&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;google&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-gradle-plugin&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun gradle-plugin&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;gradle-plugin&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-jcenter&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun jcenter&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;jcenter&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-releases&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun releases&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;releases&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-snapshots&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun snapshots&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;snapshots&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;  </span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-grails-core&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun grails-core&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;grails-core&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyun-mapr-public&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun mapr-public&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;mapr-public&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br></pre></td></tr></table></figure><p>也可以采用 profile 方式，这里就不再赘述了。</p><h3 id="Node-和-npm-Yarn"><a href="#Node-和-npm-Yarn" class="headerlink" title="Node 和 npm/Yarn"></a>Node 和 npm/Yarn</h3><p>可以更换镜像：</p><ul><li>阿里：<code>yarn config set registry https://registry.npm.taobao.org</code></li><li>华为：<code>yarn config set registry https://mirrors.huaweicloud.com/repository/npm/</code></li><li>Node-Sass：<code>npm config set sass_binary_site https://mirrors.huaweicloud.com/node-sass/</code></li></ul><h3 id="Python-pip-和-composer"><a href="#Python-pip-和-composer" class="headerlink" title="Python pip 和 composer"></a>Python pip 和 composer</h3><h4 id="Pip"><a href="#Pip" class="headerlink" title="Pip"></a>Pip</h4><ul><li>清华：<code>pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</code></li><li>阿里：<code>pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</code></li><li>华为：<code>pip config set global.index-url https://mirrors.huaweicloud.com/repository/pypi/simple</code></li><li>豆瓣：<code>pip config set global.index-url https://pypi.douban.com/simple</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># 以下可以选用其一</span><br><span class="line"></span><br><span class="line"># 清华：</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br><span class="line"># 阿里：</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line"># 华为：</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;mirrors.huaweicloud.com&#x2F;repository&#x2F;pypi&#x2F;simple</span><br><span class="line"># 豆瓣：</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;pypi.douban.com&#x2F;simple</span><br></pre></td></tr></table></figure><h4 id="Composer"><a href="#Composer" class="headerlink" title="Composer"></a>Composer</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># 以下可以选用其一</span><br><span class="line"></span><br><span class="line"># 阿里：</span><br><span class="line">composer config -g repo.packagist composer https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;composer&#x2F;</span><br><span class="line"># 华为：</span><br><span class="line">composer config -g repo.packagist composer https:&#x2F;&#x2F;mirrors.huaweicloud.com&#x2F;repository&#x2F;php&#x2F;</span><br><span class="line"></span><br><span class="line"># Laravel中文网</span><br><span class="line">composer config -g repo.packagist composer https:&#x2F;&#x2F;packagist.laravel-china.org</span><br></pre></td></tr></table></figure><h4 id="Sequel"><a href="#Sequel" class="headerlink" title="Sequel"></a>Sequel</h4><p>完成pip加速配置之后，<code>$HOME/.pip/pip.conf</code> 看起来可能会像这样：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ini</span><br><span class="line">[global]</span><br><span class="line">#index-url &#x3D; http:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple</span><br><span class="line"></span><br><span class="line">trusted-host &#x3D;  mirrors.aliyun.com</span><br><span class="line">index-url &#x3D; http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple</span><br><span class="line"># index-url &#x3D; http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple</span><br><span class="line"># trusted-host &#x3D; pypi.douban.com</span><br><span class="line">disable-pip-version-check &#x3D; true</span><br><span class="line">timeout &#x3D; 120</span><br><span class="line"></span><br><span class="line">[install]</span><br><span class="line">ignore-installed &#x3D; true</span><br><span class="line"># 不自动安装依赖的时候设置此选项</span><br><span class="line"># no-dependencies &#x3D; yes</span><br><span class="line"></span><br><span class="line">[list]</span><br><span class="line">format &#x3D; columns</span><br></pre></td></tr></table></figure><h3 id="R-CRAN"><a href="#R-CRAN" class="headerlink" title="R CRAN"></a>R CRAN</h3><p>采用清华开源站：</p><p><a href="https://cran.r-project.org/">CRAN</a> (The Comprehensive R Archive Network) 镜像源配置文件之一是 <code>.Rprofile</code> (linux 下位于 <code>~/.Rprofile</code> )。</p><p>在文末添加如下语句:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">options(&quot;repos&quot; &#x3D; c(CRAN&#x3D;&quot;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;CRAN&#x2F;&quot;))</span><br></pre></td></tr></table></figure><p>打开 R 即可使用该 CRAN 镜像源安装 R 软件包。</p><p>也可以使用其他镜像站：</p><ul><li><a href="https://mirror.lzu.edu.cn/CRAN">https://mirror.lzu.edu.cn/CRAN</a></li><li>…</li></ul><p>如果使用 R Console，可以在 Perferences 设置对话框中直接设置官方镜像的上海、香港、兰州等节点。</p><h3 id="Rust-Cargo-和-Rustup"><a href="#Rust-Cargo-和-Rustup" class="headerlink" title="Rust Cargo 和 Rustup"></a>Rust Cargo 和 Rustup</h3><p>Rust 使用 <a href="http://creates.io/">creates.io</a>，国内也有相应的提速手段：</p><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/rust-crates">https://lug.ustc.edu.cn/wiki/mirrors/help/rust-crates</a></p><p>首先你需要在 $HOME/.cargo/config 中添加如下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ini</span><br><span class="line">[registry]</span><br><span class="line">index &#x3D; &quot;git:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;crates.io-index&quot;</span><br><span class="line"># Or</span><br><span class="line"># index &#x3D; &quot;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;crates.io-index&quot;</span><br></pre></td></tr></table></figure><p>如果 cargo 版本为 0.13.0 或以上, 需要更改 $HOME/.cargo/config 为以下内容:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ini</span><br><span class="line">[source.crates-io]</span><br><span class="line">registry &#x3D; &quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;crates.io-index&quot;</span><br><span class="line">replace-with &#x3D; &#39;ustc&#39;</span><br><span class="line">[source.ustc]</span><br><span class="line">registry &#x3D; &quot;git:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;crates.io-index&quot;</span><br></pre></td></tr></table></figure><p>有兴趣自建的朋友，可以看看：</p><p><a href="https://github.com/rust-lang/crates.io/blob/master/docs/MIRROR.md">https://github.com/rust-lang/crates.io/blob/master/docs/MIRROR.md</a></p><p>清华TUNA 也有 rustup 相应的镜像</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># export CARGO_HOME&#x3D;$HOME&#x2F;.cargo</span><br><span class="line"># export RUSTUP_HOME&#x3D;$HOME&#x2F;.rustup</span><br><span class="line">export RUSTUP_DIST_SERVER&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;rustup</span><br></pre></td></tr></table></figure><p>详见：<a href="https://mirror.tuna.tsinghua.edu.cn/help/rustup/">https://mirror.tuna.tsinghua.edu.cn/help/rustup/</a></p><h3 id="Ubuntu-Apt-Source"><a href="#Ubuntu-Apt-Source" class="headerlink" title="Ubuntu Apt Source"></a>Ubuntu Apt Source</h3><p>如果你使用桌面版本，则 Ubuntu 的软件源设置中，你可以选取最近的地区，例如中国大陆，从而加速软件包下载速度。</p><p>如果使用 Server 版本，则可以明确地使用清华镜像（或者自行使用其他镜像）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>以上例子为 18.04 版本的替换内容。你可以直接访问清华开源站查找其他版本：</p><p><a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/">https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/</a></p><h4 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h4><p><a href="https://askubuntu.com/questions/39922/how-do-you-select-the-fastest-mirror-from-the-command-line">https://askubuntu.com/questions/39922/how-do-you-select-the-fastest-mirror-from-the-command-line</a></p><h5 id="使用-apt-select"><a href="#使用-apt-select" class="headerlink" title="使用 apt-select"></a>使用 apt-select</h5><p>可以用 <code>pip</code> 安装它：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">pip install apt-select</span><br></pre></td></tr></table></figure><p>然后运行它并跟随提示走：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">apt-select --country US -t 5 --choose</span><br></pre></td></tr></table></figure><h5 id="使用mirrors-CDN"><a href="#使用mirrors-CDN" class="headerlink" title="使用mirrors CDN"></a>使用mirrors CDN</h5><p>apt-get <a href="http://mvogt.wordpress.com/2011/03/21/the-apt-mirror-method/">now supports</a> a ‘mirror’ method that will automatically select a good mirror based on your location. Putting:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Code</span><br><span class="line">deb mirror:&#x2F;&#x2F;mirrors.ubuntu.com&#x2F;mirrors.txt precise main restricted universe multiverse</span><br><span class="line">deb mirror:&#x2F;&#x2F;mirrors.ubuntu.com&#x2F;mirrors.txt precise-updates main restricted universe multiverse</span><br><span class="line">deb mirror:&#x2F;&#x2F;mirrors.ubuntu.com&#x2F;mirrors.txt precise-backports main restricted universe multiverse</span><br><span class="line">deb mirror:&#x2F;&#x2F;mirrors.ubuntu.com&#x2F;mirrors.txt precise-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>on the top in your <code>/etc/apt/sources.list</code> file should be all that is needed to make it automatically pick a mirror for you based on your geographical location.</p><p>你可以无脑地使用 sed 来搞定：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">sudo sed -i &#39;s%us.archive.ubuntu.com&#x2F;ubuntu&#x2F;%mirrors.ubuntu.com&#x2F;mirrors.txt%&#39; &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure><h3 id="Vagrant"><a href="#Vagrant" class="headerlink" title="Vagrant"></a>Vagrant</h3><p>没有简单的办法。一些周知的镜像，可以通过这些地方加速：</p><ul><li><p>对于 Ubuntu 之类，可以取清华镜像</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">vagrant box add ubuntu&#x2F;trusty64 https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu-cloud-images&#x2F;vagrant&#x2F;trusty&#x2F;current&#x2F;trusty-server-cloudimg-amd64-vagrant-disk1.box</span><br><span class="line"></span><br><span class="line">vagrant box add ubuntu&#x2F;bionic64 https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu-cloud-images&#x2F;bionic&#x2F;20191002&#x2F;bionic-server-cloudimg-amd64-vagrant.box</span><br></pre></td></tr></table></figure></li><li><p>清华找不到几个周知镜像，所以基本上还是要在 <a href="http://www.vagrantbox.es/">http://www.vagrantbox.es/</a> 寻找和添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bash</span><br><span class="line">vagrant box add debian&#x2F;8.1 https:&#x2F;&#x2F;github.com&#x2F;kraksoft&#x2F;vagrant-box-debian&#x2F;releases&#x2F;download&#x2F;8.1.0&#x2F;debian-8.1.0-amd64.box</span><br></pre></td></tr></table></figure></li><li><p>总的来说，没有什么有效的镜像，只能想各种办法去手工下载box，然后再导入。</p><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;GitHub-Clone&quot;&gt;&lt;a href=&quot;#GitHub-Clone&quot; class=&quot;headerlink&quot; title=&quot;GitHub Clone&quot;&gt;&lt;/a&gt;GitHub Clone&lt;/h3&gt;&lt;p&gt;通过HTTPS协议Clone仓库的话，可能会遇到速度很慢的情况。&lt;/p&gt;
&lt;p&gt;根据经验，在慢的时候中断Clone捎带片刻重复命令的话，你可能会得到正常速度，这种偷鸡的策略适合于小小仓库。&lt;/p&gt;
&lt;p&gt;对于大型仓库，改走SSH协议进行clone的话，走到正常速度的几率较大，但此</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    <category term="笔记" scheme="https://whiteshds.ml/categories/HEXO/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Valine|标签|自定义</title>
    <link href="https://whiteshds.ml/2021/04/14/032/"/>
    <id>https://whiteshds.ml/2021/04/14/032/</id>
    <published>2021-04-13T23:36:40.510Z</published>
    <updated>2020-12-10T13:35:53.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Valine-添加博主标签"><a href="#Valine-添加博主标签" class="headerlink" title="Valine 添加博主标签"></a>Valine 添加博主标签</h1><p>我搜遍全网对于 Valine 添加博主标签，大都是懒人博客里面的教程，但他的教程对 <code>Butterfly 3.0.1</code> 不支持，需要自己修改一下，才能使用。看了<a href="https://blog.hclonely.com/posts/409d3090/">懒人博客</a>，和他下面的评论后终于修改好了，故记录于此。</p><h2 id="修改-valine-pug-文件"><a href="#修改-valine-pug-文件" class="headerlink" title="修改 valine.pug 文件"></a>修改 valine.pug 文件</h2><p>修改 <code>Butterfly</code> 主题下的 <code>/layout/iuncludes/third-party/comments/valine.pug</code>，我修改的如下，可参照原来的版本对比修改</p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822191622.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822191622.png" alt="img"></a><br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822191709.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822191709.png" alt="img"></a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Typescript</span><br><span class="line">- let emojiMaps &#x3D; &#39;&quot;&quot;&#39;</span><br><span class="line">if site.data.valine</span><br><span class="line">  - emojiMaps &#x3D; JSON.stringify(site.data.valine)</span><br><span class="line"></span><br><span class="line">script(src&#x3D;url_for(theme.CDN.valine))</span><br><span class="line">script.</span><br><span class="line">  var requestSetting &#x3D; function (from,set) &#123;</span><br><span class="line">    var from &#x3D; from</span><br><span class="line">    var setting &#x3D; set.split(&#39;,&#39;).filter(function(item)&#123;</span><br><span class="line">    return from.indexOf(item) &gt; -1</span><br><span class="line">    &#125;);</span><br><span class="line">    setting &#x3D; setting.length &#x3D;&#x3D; 0 ? from :setting;</span><br><span class="line">    return setting</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  var guestInfo &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.guest_info &#125;&#39;)</span><br><span class="line">  var requiredFields &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.requiredFields &#125;&#39;)</span><br><span class="line">  let friends &#x3D; &#39;#&#123;theme.valine.friends&#125;&#39;.split(&#39;,&#39;)</span><br><span class="line">  let master &#x3D; &#39;#&#123;theme.valine.master&#125;&#39;.split(&#39;,&#39;)</span><br><span class="line">  let tagMeta &#x3D; &#39;#&#123;theme.valine.tagMeta || &quot;博主,小伙伴,访客&quot;&#125;&#39;.split(&#39;,&#39;)</span><br><span class="line"></span><br><span class="line">  function loadValine () &#123;</span><br><span class="line">    function initValine () &#123;</span><br><span class="line">      window.valine &#x3D; new Valine(&#123;</span><br><span class="line">        el: &#39;#vcomment&#39;,</span><br><span class="line">        appId: &#39;#&#123;theme.valine.appId&#125;&#39;,</span><br><span class="line">        appKey: &#39;#&#123;theme.valine.appKey&#125;&#39;,</span><br><span class="line">        placeholder: &#39;#&#123;theme.valine.placeholder&#125;&#39;,</span><br><span class="line">        avatar: &#39;#&#123;theme.valine.avatar&#125;&#39;,</span><br><span class="line">        meta: &#39;#&#123;theme.valine.guest_info &#125;&#39;.split(&#39;,&#39;),</span><br><span class="line">        pageSize: &#39;#&#123;theme.valine.pageSize&#125;&#39;,</span><br><span class="line">        lang: &#39;#&#123;theme.valine.lang&#125;&#39;,</span><br><span class="line">        recordIP: #&#123;theme.valine.recordIP&#125;,</span><br><span class="line">        serverURLs: &#39;#&#123;theme.valine.serverURLs&#125;&#39;,</span><br><span class="line">        emojiCDN: &#39;#&#123;theme.valine.emojiCDN&#125;&#39;,</span><br><span class="line">        emojiMaps: !&#123;emojiMaps&#125;,</span><br><span class="line">        enableQQ: #&#123;theme.valine.enableQQ&#125;,</span><br><span class="line">        path: window.location.pathname,</span><br><span class="line">        master: master,</span><br><span class="line">        friends: friends,</span><br><span class="line">        tagMeta: tagMeta,</span><br><span class="line">        metaPlaceholder: !&#123;JSON.stringify(theme.valine.metaPlaceholder || &#123;&#125;)&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      if (&#39;#&#123;theme.valine.requiredFields&#125;&#39;) &#123; valine.config.requiredFields&#x3D; &#39;#&#123;theme.valine.requiredFields&#125;&#39;.split(&#39;,&#39;) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (typeof Valine &#x3D;&#x3D;&#x3D; &#39;function&#39;) initValine() </span><br><span class="line">    else $.getScript(&#39;!&#123;url_for(theme.CDN.valine)&#125;&#39;, initValine)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if (&#39;!&#123;theme.comments.use[0]&#125;&#39; &#x3D;&#x3D;&#x3D; &#39;Valine&#39; || !!&#123;theme.comments.lazyload&#125;) &#123;</span><br><span class="line">    if (!&#123;theme.comments.lazyload&#125;) loadComment(document.querySelector(&#39;#vcomment&#39;),loadValine)</span><br><span class="line">    else setTimeout(() &#x3D;&gt; loadValine(), 0)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    function loadOtherComment () &#123;</span><br><span class="line">      loadValine()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="修改-butterfly-yml-文件"><a href="#修改-butterfly-yml-文件" class="headerlink" title="修改 butterfly.yml 文件"></a>修改 butterfly.yml 文件</h2><p>添加最后的 <code>master</code> <code>friends</code> <code>metaPlaceholder</code> <code>tagMeta</code> 这几项，<code>master</code> <code>friends</code> 是博主和小伙伴的邮箱经过 md5 加密后的值。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yaml</span><br><span class="line">valine:</span><br><span class="line">  appId:  # leancloud application app id</span><br><span class="line">  appKey:# leancloud application app key</span><br><span class="line">  pageSize: 20 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: zh-CN # i18n: zh-CN&#x2F;zh-TW&#x2F;en&#x2F;ja</span><br><span class="line">  placeholder: 留下邮箱可以快速收到回复!\n昵称和邮箱必填\n昵称栏输入QQ会使用QQ的昵称和头像 # valine comment input placeholder (like: Please leave your footprints)</span><br><span class="line">  guest_info: nick,mail,link # valine comment header info (nick&#x2F;mail&#x2F;link)</span><br><span class="line">  recordIP:  # Record reviewer IP</span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: # valine background</span><br><span class="line">  emojiCDN:  # emoji CDN</span><br><span class="line">  enableQQ: true # enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><br><span class="line">  requiredFields: nick,mail # required fields (nick&#x2F;mail)</span><br><span class="line">--------------------下面是修改的，如果要复制，请复制不要复制这一行-------------------------</span><br><span class="line">  master: # md5加密后的博主邮箱</span><br><span class="line">      - f644d72a2de2163cbd232954d2f2789a</span><br><span class="line">  friends: # md5加密后的小伙伴邮箱</span><br><span class="line">    - 5c43aebcd3c384d461188a1c26db5ab7</span><br><span class="line">  metaPlaceholder: # 输入框的背景文字</span><br><span class="line">    nick: 昵称&#x2F;QQ号(必填)</span><br><span class="line">    mail: 邮箱(必填)</span><br><span class="line">    link: 网址(https:&#x2F;&#x2F;)</span><br><span class="line">  tagMeta: &#39;博主,小伙伴,访客&#39; # 标签要显示的文字,默认&#39;博主,小伙伴,访客&#39;</span><br></pre></td></tr></table></figure><h2 id="修改-valine-的-CDN"><a href="#修改-valine-的-CDN" class="headerlink" title="修改 valine 的 CDN"></a>修改 valine 的 CDN</h2><p>将 Valine 的 CDN 修改成如下所示</p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/HexoStatic@latest/js/Valine.min.js">https://cdn.jsdelivr.net/gh/imgyh/HexoStatic@latest/js/Valine.min.js</a></p><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822185921.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200822185921.png" alt="img"></a></p><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Valine-添加博主标签&quot;&gt;&lt;a href=&quot;#Valine-添加博主标签&quot; class=&quot;headerlink&quot; title=&quot;Valine 添加博主标签&quot;&gt;&lt;/a&gt;Valine 添加博主标签&lt;/h1&gt;&lt;p&gt;我搜遍全网对于 Valine 添加博主标签，大都是懒人博客里面的教程，但他的教程对 &lt;code&gt;Butterfly 3.0.1&lt;/code&gt; 不支持，需要自己修改一下，才能使用。看了&lt;a href=&quot;https://blog.hclonely.com/posts/409d</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Github|重定向|301</title>
    <link href="https://whiteshds.ml/2021/04/14/033/"/>
    <id>https://whiteshds.ml/2021/04/14/033/</id>
    <published>2021-04-13T23:36:40.510Z</published>
    <updated>2020-12-10T13:35:59.680Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在使用不蒜子进行站点访问统计的时候，发现带 www 的域名和不带 www 的域名统计不一样。</p><p>带 www 和不带 www 的搜索引擎会认为是两个网站，会影响 seo，所以要进行统一。将 www 域名定向到顶级域名，或者把顶级域名定向到 www 域名</p><h1 id="github-重定向"><a href="#github-重定向" class="headerlink" title="github 重定向"></a>github 重定向</h1><ol><li>在仓库根目录下添加一个 CNAME 文件，没有后缀名，里面内容为你主打的域名，例如我主打顶级域名，就写 <code>gyhnice.top</code>;</li><li>域名解析那里，将 @和 www CNAME 记录的记录值同时设置为 username.github.io 即可完成 github pages301 重定向，就是那么简单。</li></ol><p><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200215103849.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200215103849.png" alt="img"></a></p><h1 id="coding-重定向"><a href="#coding-重定向" class="headerlink" title="coding 重定向"></a>coding 重定向</h1><p>添加 www 域名和顶级域名，设置一个首选域名，在另一个域名后面勾选<code>跳转至首选</code><br><a href="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200215103538.png"><img src="https://cdn.jsdelivr.net/gh/imgyh/cdn/img/20200215103538.png" alt="img"></a></p><blockquote><p>如果 ssl 证书申请不了，先把 github 的域名解析先暂停</p></blockquote><p>在使用<a href="https://busuanzi.ibruce.info/">不蒜子</a>进行站点访问统计的时候，发现带www的域名和不带www的域名统计不一样。</p><p>不蒜子的作者不如大神提示说可以用301重定向。</p><p><img src="https://upload-images.jianshu.io/upload_images/1088390-5d3d2a146100529d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image</p><p>至于301重定向是什么，怎么做，自行百度。</p><p>我最终的解决方案是，在coding（我用的是coding托管的）的page设置里增加了两者设置搞定的。</p><p><img src="https://upload-images.jianshu.io/upload_images/1088390-0f8072daadd0495e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image</p><p>现在你访问 <a href="https://devzhao.com/">devzhao.com</a> 域名会自动转跳到 <a href="http://www.devzhao.com/">www.devzhao.com</a> 里面去了。</p><p>Github Pages301的具体实现</p><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在使用不蒜子进行站点访问统计的时候，发现带 www 的域名和不带 www 的域名统计不一样。&lt;/p&gt;
&lt;p&gt;带 www 和不带 www 的搜索引擎会认为是两个网站，会影响 seo，所以要进行统一。将 www 域名定向到顶级域名，或者把顶级域名定向到 www 域名&lt;/p&gt;
&lt;h1 id=&quot;github-重定向&quot;&gt;&lt;a href=&quot;#github-重定向&quot; cl</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    <category term="域名" scheme="https://whiteshds.ml/categories/HEXO/%E5%9F%9F%E5%90%8D/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>leancloud国际版|页面|说说</title>
    <link href="https://whiteshds.ml/2021/04/14/029/"/>
    <id>https://whiteshds.ml/2021/04/14/029/</id>
    <published>2021-04-13T23:36:40.509Z</published>
    <updated>2020-12-10T13:35:22.238Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🌈-LeanCloud-的相关准备"><a href="#🌈-LeanCloud-的相关准备" class="headerlink" title="🌈 LeanCloud 的相关准备"></a>🌈 LeanCloud 的相关准备</h3><p>🌍 建议使用国际版的 LeanCloud</p><p>因为国际版的 leancloud 不需要配置 serverurl，所以推荐使用国际版，速度没有区别，如果使用国内版的 leancloud 别忘了填写 serverurl 即可</p><ol><li>前往 <a href="https://leancloud.app/">LeanCloud 国际版</a>，注册账号。</li><li>注册完成之后根据 LeanCloud 的提示绑定手机号和邮箱。</li><li>绑定完成之后点击<code>创建应用</code>，应用名称随意，接着在<code>结构化数据</code>中创建 <code>class</code>，命名为 <code>shuoshuo</code>。</li><li>在你新建的应用中找到<code>结构化数据</code>下的<code>用户</code>。点击<code>添加用户</code>，输入想用的用户名及密码。</li><li>回到<code>结构化数据</code>中，点击 <code>class</code> 下的 <code>shuoshuo</code>。找到权限，在 <code>Class 访问权限</code>中将 <code>add_fields</code> 以及 <code>create</code> 权限设置为指定用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将 <code>delete</code> 和 <code>update</code> 也设置为跟它们一样的权限。</li><li>然后新建一个名为<code>atComment</code>的class，权限什么的使用默认的即可。</li><li>点击 <code>class</code> 下的 <code>_User</code> 添加列，列名称为 <code>img</code>，默认值填上你这个账号想要用的发布说说的头像url，这一项不进行配置，说说头像会显示为默认头像 —— Artitalk 的 logo。</li><li>在最菜单栏中找到设置-&gt; 应用 keys，记下来 <code>AppID</code> 和 <code>AppKey</code> ，一会会用。</li><li>最后将 <code>_User</code> 中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据已达到强制发布说说。</li></ol><p>❗ 关于设置权限的这几步</p><p>这几步一定要设置好，才可以保证不被 “闲人” 破解发布说说的验证</p><h3 id="🌼-开始使用"><a href="#🌼-开始使用" class="headerlink" title="#🌼 开始使用"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%8C%BC-%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8">#</a>🌼 开始使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引用 artitalk --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/artitalk&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 存放说说的容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;artitalk_main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Artitalk(&#123;</span></span><br><span class="line"><span class="javascript">    appId: <span class="string">&#x27;&#x27;</span>, <span class="comment">// Your leancloud appId</span></span></span><br><span class="line"><span class="javascript">    appKey: <span class="string">&#x27;&#x27;</span> <span class="comment">// Your leancloud appKey</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="🎅-配置项的说明"><a href="#🎅-配置项的说明" class="headerlink" title="#🎅 配置项的说明"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%8E%85-%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9A%84%E8%AF%B4%E6%98%8E">#</a>🎅 配置项的说明</h3><p>可以通过修改配置项快捷更改部分功能，<a href="https://artitalk.js.org/settings.html">点我查看详细说明</a></p><h3 id="🔨-测试使用"><a href="#🔨-测试使用" class="headerlink" title="#🔨 测试使用"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%94%A8-%E6%B5%8B%E8%AF%95%E4%BD%BF%E7%94%A8">#</a>🔨 测试使用</h3><p>如果上面的配置没有问题，打开你的页面，点击页面右下角的登录输入用户密码后，在输入框中输入说说，点击发布即可。</p><h3 id="🔨-说说内容的删除"><a href="#🔨-说说内容的删除" class="headerlink" title="#🔨 说说内容的删除"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%94%A8-%E8%AF%B4%E8%AF%B4%E5%86%85%E5%AE%B9%E7%9A%84%E5%88%A0%E9%99%A4">#</a>🔨 说说内容的删除</h3><p>登录后点击说说内容框右上角的 x，点击确定删除即可。</p><h3 id="🔨-说说内容的修改"><a href="#🔨-说说内容的修改" class="headerlink" title="#🔨 说说内容的修改"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%94%A8-%E8%AF%B4%E8%AF%B4%E5%86%85%E5%AE%B9%E7%9A%84%E4%BF%AE%E6%94%B9">#</a>🔨 说说内容的修改</h3><p>点击想要修改的那条说说的头像，会自动跳转到只有一条提示语以及输入框的界面，在输入框中编辑完之后点击保存即可</p><p>注：说说内容的修改与删除在 leancloud 后台也可进行操作</p><h3 id="🔨-评论的使用"><a href="#🔨-评论的使用" class="headerlink" title="#🔨 评论的使用"></a><a href="https://artitalk.js.org/doc.html#%F0%9F%94%A8-%E8%AF%84%E8%AE%BA%E7%9A%84%E4%BD%BF%E7%94%A8">#</a>🔨 评论的使用</h3><p>点击每条说说右下角的评论图标即可查看针对本条说说的评论或者对本条说说发起评论，再次点击会刷新页面已达到返回的作用</p><p>填写邮箱以获得 gravatar 的头像</p><h1 id="Artitalk"><a href="#Artitalk" class="headerlink" title="Artitalk"></a>Artitalk</h1><h1 id="see-https-artitalk-js-org"><a href="#see-https-artitalk-js-org" class="headerlink" title="see https://artitalk.js.org/"></a>see <a href="https://artitalk.js.org/">https://artitalk.js.org/</a></h1><p>artitalk:<br>  appId: GxxxIuYShcBUOmxxxxxxx-MdYxxxxI<br>  appKey: 1pMxxxxxxxxL8BxxxxK0S2p<br>  option:<br>  serverURL:<br>  lang: zh</p><p><img src="https://cdn.jsdelivr.net/gh/whiteshds/jsDelivr@master/%E6%89%93%E8%B5%8F%E7%A0%81/1%E5%85%83/weixin.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;🌈-LeanCloud-的相关准备&quot;&gt;&lt;a href=&quot;#🌈-LeanCloud-的相关准备&quot; class=&quot;headerlink&quot; title=&quot;🌈 LeanCloud 的相关准备&quot;&gt;&lt;/a&gt;🌈 LeanCloud 的相关准备&lt;/h3&gt;&lt;p&gt;🌍 建议使用国际版的 LeanCloud&lt;/p&gt;
&lt;p&gt;因为国际版的 leancloud 不需要配置 serverurl，所以推荐使用国际版，速度没有区别，如果使用国内版的 leancloud 别忘了填写 serverurl 即可</summary>
      
    
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="https://whiteshds.ml/tags/HEXO/"/>
    
    <category term="教程" scheme="https://whiteshds.ml/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
